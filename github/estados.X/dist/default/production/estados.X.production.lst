

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Nov 15 15:01:41 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK3,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,space=0,delta=2
    15                           	psect	clrtext,global,class=CODE,space=0,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    19                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=3
    21                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=3
    28                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=1
    29                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=1
    30                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=3
    31                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=3
    32                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=3
    33                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=2
    34                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=2
    35                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=2
    37                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=2
    38                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2,group=2
    39                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2,group=2
    40                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,space=0,delta=2
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    54                           	dabs	1,0x7E,2
    55     0000                     
    56                           ; Generated 25/07/2024 GMT
    57                           ; 
    58                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F887 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90     0004                     fsr             equ	4
    91     0004                     fsr0            equ	4
    92     0000                     indf            equ	0
    93     0000                     indf0           equ	0
    94     0002                     pc              equ	2
    95     0002                     pcl             equ	2
    96     000A                     pclath          equ	10
    97     0003                     status          equ	3
    98     0000                     INDF            equ	0	;# 
    99     0001                     TMR0            equ	1	;# 
   100     0002                     PCL             equ	2	;# 
   101     0003                     STATUS          equ	3	;# 
   102     0004                     FSR             equ	4	;# 
   103     0005                     PORTA           equ	5	;# 
   104     0006                     PORTB           equ	6	;# 
   105     0007                     PORTC           equ	7	;# 
   106     0008                     PORTD           equ	8	;# 
   107     0009                     PORTE           equ	9	;# 
   108     000A                     PCLATH          equ	10	;# 
   109     000B                     INTCON          equ	11	;# 
   110     000C                     PIR1            equ	12	;# 
   111     000D                     PIR2            equ	13	;# 
   112     000E                     TMR1            equ	14	;# 
   113     000E                     TMR1L           equ	14	;# 
   114     000F                     TMR1H           equ	15	;# 
   115     0010                     T1CON           equ	16	;# 
   116     0011                     TMR2            equ	17	;# 
   117     0012                     T2CON           equ	18	;# 
   118     0013                     SSPBUF          equ	19	;# 
   119     0014                     SSPCON          equ	20	;# 
   120     0015                     CCPR1           equ	21	;# 
   121     0015                     CCPR1L          equ	21	;# 
   122     0016                     CCPR1H          equ	22	;# 
   123     0017                     CCP1CON         equ	23	;# 
   124     0018                     RCSTA           equ	24	;# 
   125     0019                     TXREG           equ	25	;# 
   126     001A                     RCREG           equ	26	;# 
   127     001B                     CCPR2           equ	27	;# 
   128     001B                     CCPR2L          equ	27	;# 
   129     001C                     CCPR2H          equ	28	;# 
   130     001D                     CCP2CON         equ	29	;# 
   131     001E                     ADRESH          equ	30	;# 
   132     001F                     ADCON0          equ	31	;# 
   133     0081                     OPTION_REG      equ	129	;# 
   134     0085                     TRISA           equ	133	;# 
   135     0086                     TRISB           equ	134	;# 
   136     0087                     TRISC           equ	135	;# 
   137     0088                     TRISD           equ	136	;# 
   138     0089                     TRISE           equ	137	;# 
   139     008C                     PIE1            equ	140	;# 
   140     008D                     PIE2            equ	141	;# 
   141     008E                     PCON            equ	142	;# 
   142     008F                     OSCCON          equ	143	;# 
   143     0090                     OSCTUNE         equ	144	;# 
   144     0091                     SSPCON2         equ	145	;# 
   145     0092                     PR2             equ	146	;# 
   146     0093                     SSPADD          equ	147	;# 
   147     0093                     SSPMSK          equ	147	;# 
   148     0093                     MSK             equ	147	;# 
   149     0094                     SSPSTAT         equ	148	;# 
   150     0095                     WPUB            equ	149	;# 
   151     0096                     IOCB            equ	150	;# 
   152     0097                     VRCON           equ	151	;# 
   153     0098                     TXSTA           equ	152	;# 
   154     0099                     SPBRG           equ	153	;# 
   155     009A                     SPBRGH          equ	154	;# 
   156     009B                     PWM1CON         equ	155	;# 
   157     009C                     ECCPAS          equ	156	;# 
   158     009D                     PSTRCON         equ	157	;# 
   159     009E                     ADRESL          equ	158	;# 
   160     009F                     ADCON1          equ	159	;# 
   161     0105                     WDTCON          equ	261	;# 
   162     0107                     CM1CON0         equ	263	;# 
   163     0108                     CM2CON0         equ	264	;# 
   164     0109                     CM2CON1         equ	265	;# 
   165     010C                     EEDATA          equ	268	;# 
   166     010C                     EEDAT           equ	268	;# 
   167     010D                     EEADR           equ	269	;# 
   168     010E                     EEDATH          equ	270	;# 
   169     010F                     EEADRH          equ	271	;# 
   170     0185                     SRCON           equ	389	;# 
   171     0187                     BAUDCTL         equ	391	;# 
   172     0188                     ANSEL           equ	392	;# 
   173     0189                     ANSELH          equ	393	;# 
   174     018C                     EECON1          equ	396	;# 
   175     018D                     EECON2          equ	397	;# 
   176     0000                     INDF            equ	0	;# 
   177     0001                     TMR0            equ	1	;# 
   178     0002                     PCL             equ	2	;# 
   179     0003                     STATUS          equ	3	;# 
   180     0004                     FSR             equ	4	;# 
   181     0005                     PORTA           equ	5	;# 
   182     0006                     PORTB           equ	6	;# 
   183     0007                     PORTC           equ	7	;# 
   184     0008                     PORTD           equ	8	;# 
   185     0009                     PORTE           equ	9	;# 
   186     000A                     PCLATH          equ	10	;# 
   187     000B                     INTCON          equ	11	;# 
   188     000C                     PIR1            equ	12	;# 
   189     000D                     PIR2            equ	13	;# 
   190     000E                     TMR1            equ	14	;# 
   191     000E                     TMR1L           equ	14	;# 
   192     000F                     TMR1H           equ	15	;# 
   193     0010                     T1CON           equ	16	;# 
   194     0011                     TMR2            equ	17	;# 
   195     0012                     T2CON           equ	18	;# 
   196     0013                     SSPBUF          equ	19	;# 
   197     0014                     SSPCON          equ	20	;# 
   198     0015                     CCPR1           equ	21	;# 
   199     0015                     CCPR1L          equ	21	;# 
   200     0016                     CCPR1H          equ	22	;# 
   201     0017                     CCP1CON         equ	23	;# 
   202     0018                     RCSTA           equ	24	;# 
   203     0019                     TXREG           equ	25	;# 
   204     001A                     RCREG           equ	26	;# 
   205     001B                     CCPR2           equ	27	;# 
   206     001B                     CCPR2L          equ	27	;# 
   207     001C                     CCPR2H          equ	28	;# 
   208     001D                     CCP2CON         equ	29	;# 
   209     001E                     ADRESH          equ	30	;# 
   210     001F                     ADCON0          equ	31	;# 
   211     0081                     OPTION_REG      equ	129	;# 
   212     0085                     TRISA           equ	133	;# 
   213     0086                     TRISB           equ	134	;# 
   214     0087                     TRISC           equ	135	;# 
   215     0088                     TRISD           equ	136	;# 
   216     0089                     TRISE           equ	137	;# 
   217     008C                     PIE1            equ	140	;# 
   218     008D                     PIE2            equ	141	;# 
   219     008E                     PCON            equ	142	;# 
   220     008F                     OSCCON          equ	143	;# 
   221     0090                     OSCTUNE         equ	144	;# 
   222     0091                     SSPCON2         equ	145	;# 
   223     0092                     PR2             equ	146	;# 
   224     0093                     SSPADD          equ	147	;# 
   225     0093                     SSPMSK          equ	147	;# 
   226     0093                     MSK             equ	147	;# 
   227     0094                     SSPSTAT         equ	148	;# 
   228     0095                     WPUB            equ	149	;# 
   229     0096                     IOCB            equ	150	;# 
   230     0097                     VRCON           equ	151	;# 
   231     0098                     TXSTA           equ	152	;# 
   232     0099                     SPBRG           equ	153	;# 
   233     009A                     SPBRGH          equ	154	;# 
   234     009B                     PWM1CON         equ	155	;# 
   235     009C                     ECCPAS          equ	156	;# 
   236     009D                     PSTRCON         equ	157	;# 
   237     009E                     ADRESL          equ	158	;# 
   238     009F                     ADCON1          equ	159	;# 
   239     0105                     WDTCON          equ	261	;# 
   240     0107                     CM1CON0         equ	263	;# 
   241     0108                     CM2CON0         equ	264	;# 
   242     0109                     CM2CON1         equ	265	;# 
   243     010C                     EEDATA          equ	268	;# 
   244     010C                     EEDAT           equ	268	;# 
   245     010D                     EEADR           equ	269	;# 
   246     010E                     EEDATH          equ	270	;# 
   247     010F                     EEADRH          equ	271	;# 
   248     0185                     SRCON           equ	389	;# 
   249     0187                     BAUDCTL         equ	391	;# 
   250     0188                     ANSEL           equ	392	;# 
   251     0189                     ANSELH          equ	393	;# 
   252     018C                     EECON1          equ	396	;# 
   253     018D                     EECON2          equ	397	;# 
   254     0000                     INDF            equ	0	;# 
   255     0001                     TMR0            equ	1	;# 
   256     0002                     PCL             equ	2	;# 
   257     0003                     STATUS          equ	3	;# 
   258     0004                     FSR             equ	4	;# 
   259     0005                     PORTA           equ	5	;# 
   260     0006                     PORTB           equ	6	;# 
   261     0007                     PORTC           equ	7	;# 
   262     0008                     PORTD           equ	8	;# 
   263     0009                     PORTE           equ	9	;# 
   264     000A                     PCLATH          equ	10	;# 
   265     000B                     INTCON          equ	11	;# 
   266     000C                     PIR1            equ	12	;# 
   267     000D                     PIR2            equ	13	;# 
   268     000E                     TMR1            equ	14	;# 
   269     000E                     TMR1L           equ	14	;# 
   270     000F                     TMR1H           equ	15	;# 
   271     0010                     T1CON           equ	16	;# 
   272     0011                     TMR2            equ	17	;# 
   273     0012                     T2CON           equ	18	;# 
   274     0013                     SSPBUF          equ	19	;# 
   275     0014                     SSPCON          equ	20	;# 
   276     0015                     CCPR1           equ	21	;# 
   277     0015                     CCPR1L          equ	21	;# 
   278     0016                     CCPR1H          equ	22	;# 
   279     0017                     CCP1CON         equ	23	;# 
   280     0018                     RCSTA           equ	24	;# 
   281     0019                     TXREG           equ	25	;# 
   282     001A                     RCREG           equ	26	;# 
   283     001B                     CCPR2           equ	27	;# 
   284     001B                     CCPR2L          equ	27	;# 
   285     001C                     CCPR2H          equ	28	;# 
   286     001D                     CCP2CON         equ	29	;# 
   287     001E                     ADRESH          equ	30	;# 
   288     001F                     ADCON0          equ	31	;# 
   289     0081                     OPTION_REG      equ	129	;# 
   290     0085                     TRISA           equ	133	;# 
   291     0086                     TRISB           equ	134	;# 
   292     0087                     TRISC           equ	135	;# 
   293     0088                     TRISD           equ	136	;# 
   294     0089                     TRISE           equ	137	;# 
   295     008C                     PIE1            equ	140	;# 
   296     008D                     PIE2            equ	141	;# 
   297     008E                     PCON            equ	142	;# 
   298     008F                     OSCCON          equ	143	;# 
   299     0090                     OSCTUNE         equ	144	;# 
   300     0091                     SSPCON2         equ	145	;# 
   301     0092                     PR2             equ	146	;# 
   302     0093                     SSPADD          equ	147	;# 
   303     0093                     SSPMSK          equ	147	;# 
   304     0093                     MSK             equ	147	;# 
   305     0094                     SSPSTAT         equ	148	;# 
   306     0095                     WPUB            equ	149	;# 
   307     0096                     IOCB            equ	150	;# 
   308     0097                     VRCON           equ	151	;# 
   309     0098                     TXSTA           equ	152	;# 
   310     0099                     SPBRG           equ	153	;# 
   311     009A                     SPBRGH          equ	154	;# 
   312     009B                     PWM1CON         equ	155	;# 
   313     009C                     ECCPAS          equ	156	;# 
   314     009D                     PSTRCON         equ	157	;# 
   315     009E                     ADRESL          equ	158	;# 
   316     009F                     ADCON1          equ	159	;# 
   317     0105                     WDTCON          equ	261	;# 
   318     0107                     CM1CON0         equ	263	;# 
   319     0108                     CM2CON0         equ	264	;# 
   320     0109                     CM2CON1         equ	265	;# 
   321     010C                     EEDATA          equ	268	;# 
   322     010C                     EEDAT           equ	268	;# 
   323     010D                     EEADR           equ	269	;# 
   324     010E                     EEDATH          equ	270	;# 
   325     010F                     EEADRH          equ	271	;# 
   326     0185                     SRCON           equ	389	;# 
   327     0187                     BAUDCTL         equ	391	;# 
   328     0188                     ANSEL           equ	392	;# 
   329     0189                     ANSELH          equ	393	;# 
   330     018C                     EECON1          equ	396	;# 
   331     018D                     EECON2          equ	397	;# 
   332     0000                     INDF            equ	0	;# 
   333     0001                     TMR0            equ	1	;# 
   334     0002                     PCL             equ	2	;# 
   335     0003                     STATUS          equ	3	;# 
   336     0004                     FSR             equ	4	;# 
   337     0005                     PORTA           equ	5	;# 
   338     0006                     PORTB           equ	6	;# 
   339     0007                     PORTC           equ	7	;# 
   340     0008                     PORTD           equ	8	;# 
   341     0009                     PORTE           equ	9	;# 
   342     000A                     PCLATH          equ	10	;# 
   343     000B                     INTCON          equ	11	;# 
   344     000C                     PIR1            equ	12	;# 
   345     000D                     PIR2            equ	13	;# 
   346     000E                     TMR1            equ	14	;# 
   347     000E                     TMR1L           equ	14	;# 
   348     000F                     TMR1H           equ	15	;# 
   349     0010                     T1CON           equ	16	;# 
   350     0011                     TMR2            equ	17	;# 
   351     0012                     T2CON           equ	18	;# 
   352     0013                     SSPBUF          equ	19	;# 
   353     0014                     SSPCON          equ	20	;# 
   354     0015                     CCPR1           equ	21	;# 
   355     0015                     CCPR1L          equ	21	;# 
   356     0016                     CCPR1H          equ	22	;# 
   357     0017                     CCP1CON         equ	23	;# 
   358     0018                     RCSTA           equ	24	;# 
   359     0019                     TXREG           equ	25	;# 
   360     001A                     RCREG           equ	26	;# 
   361     001B                     CCPR2           equ	27	;# 
   362     001B                     CCPR2L          equ	27	;# 
   363     001C                     CCPR2H          equ	28	;# 
   364     001D                     CCP2CON         equ	29	;# 
   365     001E                     ADRESH          equ	30	;# 
   366     001F                     ADCON0          equ	31	;# 
   367     0081                     OPTION_REG      equ	129	;# 
   368     0085                     TRISA           equ	133	;# 
   369     0086                     TRISB           equ	134	;# 
   370     0087                     TRISC           equ	135	;# 
   371     0088                     TRISD           equ	136	;# 
   372     0089                     TRISE           equ	137	;# 
   373     008C                     PIE1            equ	140	;# 
   374     008D                     PIE2            equ	141	;# 
   375     008E                     PCON            equ	142	;# 
   376     008F                     OSCCON          equ	143	;# 
   377     0090                     OSCTUNE         equ	144	;# 
   378     0091                     SSPCON2         equ	145	;# 
   379     0092                     PR2             equ	146	;# 
   380     0093                     SSPADD          equ	147	;# 
   381     0093                     SSPMSK          equ	147	;# 
   382     0093                     MSK             equ	147	;# 
   383     0094                     SSPSTAT         equ	148	;# 
   384     0095                     WPUB            equ	149	;# 
   385     0096                     IOCB            equ	150	;# 
   386     0097                     VRCON           equ	151	;# 
   387     0098                     TXSTA           equ	152	;# 
   388     0099                     SPBRG           equ	153	;# 
   389     009A                     SPBRGH          equ	154	;# 
   390     009B                     PWM1CON         equ	155	;# 
   391     009C                     ECCPAS          equ	156	;# 
   392     009D                     PSTRCON         equ	157	;# 
   393     009E                     ADRESL          equ	158	;# 
   394     009F                     ADCON1          equ	159	;# 
   395     0105                     WDTCON          equ	261	;# 
   396     0107                     CM1CON0         equ	263	;# 
   397     0108                     CM2CON0         equ	264	;# 
   398     0109                     CM2CON1         equ	265	;# 
   399     010C                     EEDATA          equ	268	;# 
   400     010C                     EEDAT           equ	268	;# 
   401     010D                     EEADR           equ	269	;# 
   402     010E                     EEDATH          equ	270	;# 
   403     010F                     EEADRH          equ	271	;# 
   404     0185                     SRCON           equ	389	;# 
   405     0187                     BAUDCTL         equ	391	;# 
   406     0188                     ANSEL           equ	392	;# 
   407     0189                     ANSELH          equ	393	;# 
   408     018C                     EECON1          equ	396	;# 
   409     018D                     EECON2          equ	397	;# 
   410     0000                     INDF            equ	0	;# 
   411     0001                     TMR0            equ	1	;# 
   412     0002                     PCL             equ	2	;# 
   413     0003                     STATUS          equ	3	;# 
   414     0004                     FSR             equ	4	;# 
   415     0005                     PORTA           equ	5	;# 
   416     0006                     PORTB           equ	6	;# 
   417     0007                     PORTC           equ	7	;# 
   418     0008                     PORTD           equ	8	;# 
   419     0009                     PORTE           equ	9	;# 
   420     000A                     PCLATH          equ	10	;# 
   421     000B                     INTCON          equ	11	;# 
   422     000C                     PIR1            equ	12	;# 
   423     000D                     PIR2            equ	13	;# 
   424     000E                     TMR1            equ	14	;# 
   425     000E                     TMR1L           equ	14	;# 
   426     000F                     TMR1H           equ	15	;# 
   427     0010                     T1CON           equ	16	;# 
   428     0011                     TMR2            equ	17	;# 
   429     0012                     T2CON           equ	18	;# 
   430     0013                     SSPBUF          equ	19	;# 
   431     0014                     SSPCON          equ	20	;# 
   432     0015                     CCPR1           equ	21	;# 
   433     0015                     CCPR1L          equ	21	;# 
   434     0016                     CCPR1H          equ	22	;# 
   435     0017                     CCP1CON         equ	23	;# 
   436     0018                     RCSTA           equ	24	;# 
   437     0019                     TXREG           equ	25	;# 
   438     001A                     RCREG           equ	26	;# 
   439     001B                     CCPR2           equ	27	;# 
   440     001B                     CCPR2L          equ	27	;# 
   441     001C                     CCPR2H          equ	28	;# 
   442     001D                     CCP2CON         equ	29	;# 
   443     001E                     ADRESH          equ	30	;# 
   444     001F                     ADCON0          equ	31	;# 
   445     0081                     OPTION_REG      equ	129	;# 
   446     0085                     TRISA           equ	133	;# 
   447     0086                     TRISB           equ	134	;# 
   448     0087                     TRISC           equ	135	;# 
   449     0088                     TRISD           equ	136	;# 
   450     0089                     TRISE           equ	137	;# 
   451     008C                     PIE1            equ	140	;# 
   452     008D                     PIE2            equ	141	;# 
   453     008E                     PCON            equ	142	;# 
   454     008F                     OSCCON          equ	143	;# 
   455     0090                     OSCTUNE         equ	144	;# 
   456     0091                     SSPCON2         equ	145	;# 
   457     0092                     PR2             equ	146	;# 
   458     0093                     SSPADD          equ	147	;# 
   459     0093                     SSPMSK          equ	147	;# 
   460     0093                     MSK             equ	147	;# 
   461     0094                     SSPSTAT         equ	148	;# 
   462     0095                     WPUB            equ	149	;# 
   463     0096                     IOCB            equ	150	;# 
   464     0097                     VRCON           equ	151	;# 
   465     0098                     TXSTA           equ	152	;# 
   466     0099                     SPBRG           equ	153	;# 
   467     009A                     SPBRGH          equ	154	;# 
   468     009B                     PWM1CON         equ	155	;# 
   469     009C                     ECCPAS          equ	156	;# 
   470     009D                     PSTRCON         equ	157	;# 
   471     009E                     ADRESL          equ	158	;# 
   472     009F                     ADCON1          equ	159	;# 
   473     0105                     WDTCON          equ	261	;# 
   474     0107                     CM1CON0         equ	263	;# 
   475     0108                     CM2CON0         equ	264	;# 
   476     0109                     CM2CON1         equ	265	;# 
   477     010C                     EEDATA          equ	268	;# 
   478     010C                     EEDAT           equ	268	;# 
   479     010D                     EEADR           equ	269	;# 
   480     010E                     EEDATH          equ	270	;# 
   481     010F                     EEADRH          equ	271	;# 
   482     0185                     SRCON           equ	389	;# 
   483     0187                     BAUDCTL         equ	391	;# 
   484     0188                     ANSEL           equ	392	;# 
   485     0189                     ANSELH          equ	393	;# 
   486     018C                     EECON1          equ	396	;# 
   487     018D                     EECON2          equ	397	;# 
   488     0000                     INDF            equ	0	;# 
   489     0001                     TMR0            equ	1	;# 
   490     0002                     PCL             equ	2	;# 
   491     0003                     STATUS          equ	3	;# 
   492     0004                     FSR             equ	4	;# 
   493     0005                     PORTA           equ	5	;# 
   494     0006                     PORTB           equ	6	;# 
   495     0007                     PORTC           equ	7	;# 
   496     0008                     PORTD           equ	8	;# 
   497     0009                     PORTE           equ	9	;# 
   498     000A                     PCLATH          equ	10	;# 
   499     000B                     INTCON          equ	11	;# 
   500     000C                     PIR1            equ	12	;# 
   501     000D                     PIR2            equ	13	;# 
   502     000E                     TMR1            equ	14	;# 
   503     000E                     TMR1L           equ	14	;# 
   504     000F                     TMR1H           equ	15	;# 
   505     0010                     T1CON           equ	16	;# 
   506     0011                     TMR2            equ	17	;# 
   507     0012                     T2CON           equ	18	;# 
   508     0013                     SSPBUF          equ	19	;# 
   509     0014                     SSPCON          equ	20	;# 
   510     0015                     CCPR1           equ	21	;# 
   511     0015                     CCPR1L          equ	21	;# 
   512     0016                     CCPR1H          equ	22	;# 
   513     0017                     CCP1CON         equ	23	;# 
   514     0018                     RCSTA           equ	24	;# 
   515     0019                     TXREG           equ	25	;# 
   516     001A                     RCREG           equ	26	;# 
   517     001B                     CCPR2           equ	27	;# 
   518     001B                     CCPR2L          equ	27	;# 
   519     001C                     CCPR2H          equ	28	;# 
   520     001D                     CCP2CON         equ	29	;# 
   521     001E                     ADRESH          equ	30	;# 
   522     001F                     ADCON0          equ	31	;# 
   523     0081                     OPTION_REG      equ	129	;# 
   524     0085                     TRISA           equ	133	;# 
   525     0086                     TRISB           equ	134	;# 
   526     0087                     TRISC           equ	135	;# 
   527     0088                     TRISD           equ	136	;# 
   528     0089                     TRISE           equ	137	;# 
   529     008C                     PIE1            equ	140	;# 
   530     008D                     PIE2            equ	141	;# 
   531     008E                     PCON            equ	142	;# 
   532     008F                     OSCCON          equ	143	;# 
   533     0090                     OSCTUNE         equ	144	;# 
   534     0091                     SSPCON2         equ	145	;# 
   535     0092                     PR2             equ	146	;# 
   536     0093                     SSPADD          equ	147	;# 
   537     0093                     SSPMSK          equ	147	;# 
   538     0093                     MSK             equ	147	;# 
   539     0094                     SSPSTAT         equ	148	;# 
   540     0095                     WPUB            equ	149	;# 
   541     0096                     IOCB            equ	150	;# 
   542     0097                     VRCON           equ	151	;# 
   543     0098                     TXSTA           equ	152	;# 
   544     0099                     SPBRG           equ	153	;# 
   545     009A                     SPBRGH          equ	154	;# 
   546     009B                     PWM1CON         equ	155	;# 
   547     009C                     ECCPAS          equ	156	;# 
   548     009D                     PSTRCON         equ	157	;# 
   549     009E                     ADRESL          equ	158	;# 
   550     009F                     ADCON1          equ	159	;# 
   551     0105                     WDTCON          equ	261	;# 
   552     0107                     CM1CON0         equ	263	;# 
   553     0108                     CM2CON0         equ	264	;# 
   554     0109                     CM2CON1         equ	265	;# 
   555     010C                     EEDATA          equ	268	;# 
   556     010C                     EEDAT           equ	268	;# 
   557     010D                     EEADR           equ	269	;# 
   558     010E                     EEDATH          equ	270	;# 
   559     010F                     EEADRH          equ	271	;# 
   560     0185                     SRCON           equ	389	;# 
   561     0187                     BAUDCTL         equ	391	;# 
   562     0188                     ANSEL           equ	392	;# 
   563     0189                     ANSELH          equ	393	;# 
   564     018C                     EECON1          equ	396	;# 
   565     018D                     EECON2          equ	397	;# 
   566                           
   567                           	psect	idataBANK1
   568     08A5                     __pidataBANK1:
   569                           
   570                           ;initializer for _character5
   571     08A5  3400               	retlw	0
   572     08A6  340E               	retlw	14
   573     08A7  3411               	retlw	17
   574     08A8  3411               	retlw	17
   575     08A9  3411               	retlw	17
   576     08AA  340A               	retlw	10
   577     08AB  341B               	retlw	27
   578     08AC  3400               	retlw	0
   579                           
   580                           ;initializer for _character4
   581     08AD  3400               	retlw	0
   582     08AE  3404               	retlw	4
   583     08AF  3411               	retlw	17
   584     08B0  340E               	retlw	14
   585     08B1  3404               	retlw	4
   586     08B2  3404               	retlw	4
   587     08B3  340A               	retlw	10
   588     08B4  3411               	retlw	17
   589                           
   590                           ;initializer for _character3
   591     08B5  3400               	retlw	0
   592     08B6  3404               	retlw	4
   593     08B7  3400               	retlw	0
   594     08B8  340E               	retlw	14
   595     08B9  3415               	retlw	21
   596     08BA  3404               	retlw	4
   597     08BB  340A               	retlw	10
   598     08BC  3411               	retlw	17
   599                           
   600                           ;initializer for _character2
   601     08BD  341B               	retlw	27
   602     08BE  3400               	retlw	0
   603     08BF  340A               	retlw	10
   604     08C0  340A               	retlw	10
   605     08C1  3400               	retlw	0
   606     08C2  3400               	retlw	0
   607     08C3  340E               	retlw	14
   608     08C4  3411               	retlw	17
   609                           
   610                           ;initializer for _character1
   611     08C5  341B               	retlw	27
   612     08C6  3400               	retlw	0
   613     08C7  340A               	retlw	10
   614     08C8  340A               	retlw	10
   615     08C9  3400               	retlw	0
   616     08CA  3411               	retlw	17
   617     08CB  340E               	retlw	14
   618     08CC  3400               	retlw	0
   619                           
   620                           	psect	idataBANK3
   621     1743                     __pidataBANK3:
   622                           
   623                           ;initializer for keypad_getkey@F1424
   624     1743  3431               	retlw	49
   625     1744  3432               	retlw	50
   626     1745  3433               	retlw	51
   627     1746  3441               	retlw	65
   628     1747  3434               	retlw	52
   629     1748  3435               	retlw	53
   630     1749  3436               	retlw	54
   631     174A  3442               	retlw	66
   632     174B  3437               	retlw	55
   633     174C  3438               	retlw	56
   634     174D  3439               	retlw	57
   635     174E  3443               	retlw	67
   636     174F  342A               	retlw	42
   637     1750  3430               	retlw	48
   638     1751  3423               	retlw	35
   639     1752  3444               	retlw	68
   640                           
   641                           	psect	strings
   642     0800                     __pstrings:
   643     0800                     stringtab:
   644     0800                     __stringtab:
   645                           
   646                           ;	String table - string pointers are 1 byte each
   647     0800  1BFF               	btfsc	btemp+1,7
   648     0801  280A               	ljmp	stringcode
   649     0802  1383               	bcf	3,7
   650     0803  187F               	btfsc	btemp+1,0
   651     0804  1783               	bsf	3,7
   652     0805  0800               	movf	0,w
   653     0806  0A84               	incf	4,f
   654     0807  1903               	skipnz
   655     0808  0AFF               	incf	btemp+1,f
   656     0809  0008               	return
   657     080A                     stringcode:
   658     080A                     stringdir:
   659     080A  3008               	movlw	high stringdir
   660     080B  008A               	movwf	10
   661     080C  0804               	movf	4,w
   662     080D  0A84               	incf	4,f
   663     080E  0782               	addwf	2,f
   664     080F                     __stringbase:
   665     080F  3400               	retlw	0
   666     0810                     __end_of__stringtab:
   667     0810                     _password:
   668     0810  3432               	retlw	50
   669     0811  3430               	retlw	48
   670     0812  3432               	retlw	50
   671     0813  3431               	retlw	49
   672     0814  3431               	retlw	49
   673     0815  3400               	retlw	0
   674     0816                     __end_of_password:
   675     000E                     _TMR1           set	14
   676     0010                     _T1CON          set	16
   677     000C                     _PIR1bits       set	12
   678     0009                     _PORTEbits      set	9
   679     0003                     _STATUSbits     set	3
   680     0005                     _PORTAbits      set	5
   681     0008                     _PORTD          set	8
   682     0007                     _PORTCbits      set	7
   683     0007                     _PORTC          set	7
   684     0006                     _PORTB          set	6
   685     001E                     _ADRESH         set	30
   686     001F                     _ADCON0bits     set	31
   687     0080                     _TMR1ON         set	128
   688     0060                     _TMR1IF         set	96
   689     005E                     _PEIE           set	94
   690     005F                     _GIE            set	95
   691     0085                     _TRISAbits      set	133
   692     0088                     _TRISD          set	136
   693     0089                     _TRISE          set	137
   694     008F                     _OSCCON         set	143
   695     0087                     _TRISC          set	135
   696     0081                     _OPTION_REGbits set	129
   697     0086                     _TRISB          set	134
   698     009E                     _ADRESL         set	158
   699     009F                     _ADCON1bits     set	159
   700     0460                     _TMR1IE         set	1120
   701     0188                     _ANSEL          set	392
   702     0189                     _ANSELH         set	393
   703     0816                     STR_10:
   704     0816  3473               	retlw	115	;'s'
   705     0817  3469               	retlw	105	;'i'
   706     0818  3473               	retlw	115	;'s'
   707     0819  3474               	retlw	116	;'t'
   708     081A  3465               	retlw	101	;'e'
   709     081B  346D               	retlw	109	;'m'
   710     081C  3461               	retlw	97	;'a'
   711     081D  3420               	retlw	32	;' '
   712     081E  3462               	retlw	98	;'b'
   713     081F  346C               	retlw	108	;'l'
   714     0820  346F               	retlw	111	;'o'
   715     0821  3471               	retlw	113	;'q'
   716     0822  3475               	retlw	117	;'u'
   717     0823  3465               	retlw	101	;'e'
   718     0824  3461               	retlw	97	;'a'
   719     0825  3464               	retlw	100	;'d'
   720     0826  346F               	retlw	111	;'o'
   721     0827  3400               	retlw	0
   722     0828                     STR_9:
   723     0828  3443               	retlw	67	;'C'
   724     0829  346C               	retlw	108	;'l'
   725     082A  3461               	retlw	97	;'a'
   726     082B  3476               	retlw	118	;'v'
   727     082C  3465               	retlw	101	;'e'
   728     082D  3420               	retlw	32	;' '
   729     082E  3449               	retlw	73	;'I'
   730     082F  346E               	retlw	110	;'n'
   731     0830  3463               	retlw	99	;'c'
   732     0831  346F               	retlw	111	;'o'
   733     0832  3472               	retlw	114	;'r'
   734     0833  3472               	retlw	114	;'r'
   735     0834  3465               	retlw	101	;'e'
   736     0835  3463               	retlw	99	;'c'
   737     0836  3474               	retlw	116	;'t'
   738     0837  3461               	retlw	97	;'a'
   739     0838  3400               	retlw	0
   740     0839                     STR_1:
   741     0839  3450               	retlw	80	;'P'
   742     083A  3469               	retlw	105	;'i'
   743     083B  3420               	retlw	32	;' '
   744     083C  3444               	retlw	68	;'D'
   745     083D  3420               	retlw	32	;' '
   746     083E  3420               	retlw	32	;' '
   747     083F  3454               	retlw	84	;'T'
   748     0840  3420               	retlw	32	;' '
   749     0841  3420               	retlw	32	;' '
   750     0842  3443               	retlw	67	;'C'
   751     0843  3420               	retlw	32	;' '
   752     0844  3420               	retlw	32	;' '
   753     0845  346F               	retlw	111	;'o'
   754     0846  3468               	retlw	104	;'h'
   755     0847  346D               	retlw	109	;'m'
   756     0848  3400               	retlw	0
   757     0849                     STR_8:
   758     0849  3443               	retlw	67	;'C'
   759     084A  346C               	retlw	108	;'l'
   760     084B  3461               	retlw	97	;'a'
   761     084C  3476               	retlw	118	;'v'
   762     084D  3465               	retlw	101	;'e'
   763     084E  3420               	retlw	32	;' '
   764     084F  3443               	retlw	67	;'C'
   765     0850  346F               	retlw	111	;'o'
   766     0851  3472               	retlw	114	;'r'
   767     0852  3472               	retlw	114	;'r'
   768     0853  3465               	retlw	101	;'e'
   769     0854  3463               	retlw	99	;'c'
   770     0855  3474               	retlw	116	;'t'
   771     0856  3461               	retlw	97	;'a'
   772     0857  3400               	retlw	0
   773     0858                     STR_6:
   774     0858  3454               	retlw	84	;'T'
   775     0859  343A               	retlw	58	;':'
   776     085A  3420               	retlw	32	;' '
   777     085B  3425               	retlw	37	;'%'
   778     085C  3464               	retlw	100	;'d'
   779     085D  3420               	retlw	32	;' '
   780     085E  344C               	retlw	76	;'L'
   781     085F  343A               	retlw	58	;':'
   782     0860  3420               	retlw	32	;' '
   783     0861  3425               	retlw	37	;'%'
   784     0862  3464               	retlw	100	;'d'
   785     0863  3400               	retlw	0
   786     0864                     STR_7:
   787     0864  3450               	retlw	80	;'P'
   788     0865  3472               	retlw	114	;'r'
   789     0866  3465               	retlw	101	;'e'
   790     0867  3473               	retlw	115	;'s'
   791     0868  3473               	retlw	115	;'s'
   792     0869  3420               	retlw	32	;' '
   793     086A  3461               	retlw	97	;'a'
   794     086B  3420               	retlw	32	;' '
   795     086C  344B               	retlw	75	;'K'
   796     086D  3465               	retlw	101	;'e'
   797     086E  3479               	retlw	121	;'y'
   798     086F  3400               	retlw	0
   799     0870                     STR_3:
   800     0870  3442               	retlw	66	;'B'
   801     0871  344C               	retlw	76	;'L'
   802     0872  344F               	retlw	79	;'O'
   803     0873  3451               	retlw	81	;'Q'
   804     0874  3455               	retlw	85	;'U'
   805     0875  3445               	retlw	69	;'E'
   806     0876  3441               	retlw	65	;'A'
   807     0877  3444               	retlw	68	;'D'
   808     0878  344F               	retlw	79	;'O'
   809     0879  3400               	retlw	0
   810     087A                     STR_5:
   811     087A  344D               	retlw	77	;'M'
   812     087B  344F               	retlw	79	;'O'
   813     087C  344E               	retlw	78	;'N'
   814     087D  3449               	retlw	73	;'I'
   815     087E  3454               	retlw	84	;'T'
   816     087F  344F               	retlw	79	;'O'
   817     0880  3452               	retlw	82	;'R'
   818     0881  3445               	retlw	69	;'E'
   819     0882  344F               	retlw	79	;'O'
   820     0883  3400               	retlw	0
   821     0884                     STR_11:
   822     0884  3445               	retlw	69	;'E'
   823     0885  3456               	retlw	86	;'V'
   824     0886  3445               	retlw	69	;'E'
   825     0887  344E               	retlw	78	;'N'
   826     0888  3454               	retlw	84	;'T'
   827     0889  344F               	retlw	79	;'O'
   828     088A  3453               	retlw	83	;'S'
   829     088B  3400               	retlw	0
   830     088C                     STR_12:
   831     088C  3441               	retlw	65	;'A'
   832     088D  344C               	retlw	76	;'L'
   833     088E  3441               	retlw	65	;'A'
   834     088F  3452               	retlw	82	;'R'
   835     0890  344D               	retlw	77	;'M'
   836     0891  3441               	retlw	65	;'A'
   837     0892  3400               	retlw	0
   838     0893                     STR_4:
   839     0893  3441               	retlw	65	;'A'
   840     0894  344C               	retlw	76	;'L'
   841     0895  3445               	retlw	69	;'E'
   842     0896  3452               	retlw	82	;'R'
   843     0897  3454               	retlw	84	;'T'
   844     0898  3441               	retlw	65	;'A'
   845     0899  3400               	retlw	0
   846     089A                     STR_2:
   847     089A  3449               	retlw	73	;'I'
   848     089B  344E               	retlw	78	;'N'
   849     089C  3449               	retlw	73	;'I'
   850     089D  3454               	retlw	84	;'T'
   851     089E  3400               	retlw	0
   852                           
   853                           	psect	cinit
   854     0011                     start_initialization:	
   855                           ; #config settings
   856                           
   857     0011                     __initialization:
   858                           
   859                           ; Initialize objects allocated to BANK3
   860     0011  1783               	bsf	3,7	;select IRP bank2
   861     0012  30C0               	movlw	low (__pdataBANK3+16)
   862     0013  00FD               	movwf	btemp+-1
   863     0014  3017               	movlw	high __pidataBANK3
   864     0015  00FE               	movwf	btemp
   865     0016  3043               	movlw	low __pidataBANK3
   866     0017  00FF               	movwf	btemp+1
   867     0018  30B0               	movlw	low __pdataBANK3
   868     0019  0084               	movwf	4
   869     001A  160A  118A  276A  120A  118A  	fcall	init_ram0
   870                           
   871                           ; Initialize objects allocated to BANK1
   872     001F  1383               	bcf	3,7	;select IRP bank0
   873     0020  30C8               	movlw	low (__pdataBANK1+40)
   874     0021  00FD               	movwf	btemp+-1
   875     0022  3008               	movlw	high __pidataBANK1
   876     0023  00FE               	movwf	btemp
   877     0024  30A5               	movlw	low __pidataBANK1
   878     0025  00FF               	movwf	btemp+1
   879     0026  30A0               	movlw	low __pdataBANK1
   880     0027  0084               	movwf	4
   881     0028  160A  118A  276A  120A  118A  	fcall	init_ram0
   882                           
   883                           ; Clear objects allocated to BANK3
   884     002D  1783               	bsf	3,7	;select IRP bank2
   885     002E  3090               	movlw	low __pbssBANK3
   886     002F  0084               	movwf	4
   887     0030  30B0               	movlw	low (__pbssBANK3+32)
   888     0031  120A  118A  27F4  120A  118A  	fcall	clear_ram0
   889                           
   890                           ; Clear objects allocated to BANK1
   891     0036  1383               	bcf	3,7	;select IRP bank0
   892     0037  30C8               	movlw	low __pbssBANK1
   893     0038  0084               	movwf	4
   894     0039  30E3               	movlw	low (__pbssBANK1+27)
   895     003A  120A  118A  27F4  120A  118A  	fcall	clear_ram0
   896                           
   897                           ; Clear objects allocated to BANK0
   898     003F  01EF               	clrf	__pbssBANK0& (0+127)
   899                           
   900                           ; Clear objects allocated to COMMON
   901     0040  01F8               	clrf	__pbssCOMMON& (0+127)
   902     0041  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   903     0042  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   904     0043                     end_of_initialization:	
   905                           ;End of C runtime variable initialization code
   906                           
   907     0043                     __end_of__initialization:
   908     0043  0183               	clrf	3
   909     0044  120A  118A  2B89   	ljmp	_main	;jump to C main() function
   910                           
   911                           	psect	bssCOMMON
   912     0078                     __pbssCOMMON:
   913     0078                     _flag_count_5sec:
   914     0078                     	ds	1
   915     0079                     _idx:
   916     0079                     	ds	1
   917     007A                     _estadoactual:
   918     007A                     	ds	1
   919                           
   920                           	psect	bssBANK0
   921     006F                     __pbssBANK0:
   922     006F                     _flag_correcto:
   923     006F                     	ds	1
   924                           
   925                           	psect	bssBANK1
   926     00C8                     __pbssBANK1:
   927     00C8                     _width:
   928     00C8                     	ds	2
   929     00CA                     _prec:
   930     00CA                     	ds	2
   931     00CC                     _count_500ms:
   932     00CC                     	ds	2
   933     00CE                     _count_800ms:
   934     00CE                     	ds	2
   935     00D0                     _count_10sec:
   936     00D0                     	ds	2
   937     00D2                     _count_2sec:
   938     00D2                     	ds	2
   939     00D4                     _count_5sec:
   940     00D4                     	ds	2
   941     00D6                     _intentos:
   942     00D6                     	ds	2
   943     00D8                     _flags:
   944     00D8                     	ds	1
   945     00D9                     _flag_count_500ms:
   946     00D9                     	ds	1
   947     00DA                     _flag_count_800ms:
   948     00DA                     	ds	1
   949     00DB                     _flag_count_10sec:
   950     00DB                     	ds	1
   951     00DC                     _flag_count_2sec:
   952     00DC                     	ds	1
   953     00DD                     _pass_user:
   954     00DD                     	ds	6
   955                           
   956                           	psect	dataBANK1
   957     00A0                     __pdataBANK1:
   958     00A0                     _character5:
   959     00A0                     	ds	8
   960     00A8                     _character4:
   961     00A8                     	ds	8
   962     00B0                     _character3:
   963     00B0                     	ds	8
   964     00B8                     _character2:
   965     00B8                     	ds	8
   966     00C0                     _character1:
   967     00C0                     	ds	8
   968                           
   969                           	psect	bssBANK3
   970     0190                     __pbssBANK3:
   971     0190                     _dbuf:
   972     0190                     	ds	32
   973                           
   974                           	psect	dataBANK3
   975     01B0                     __pdataBANK3:
   976     01B0                     keypad_getkey@F1424:
   977     01B0                     	ds	16
   978                           
   979                           	psect	inittext
   980     1766                     init_fetch0:	
   981                           ;	Called with low address in FSR and high address in W
   982                           
   983     1766  087E               	movf	btemp,w
   984     1767  008A               	movwf	10
   985     1768  087F               	movf	btemp+1,w
   986     1769  0082               	movwf	2
   987     176A                     init_ram0:	
   988                           ;Called with:
   989                           ;	high address of idata address in btemp 
   990                           ;	low address of idata address in btemp+1 
   991                           ;	low address of data in FSR
   992                           ;	high address + 1 of data in btemp-1
   993                           
   994     176A  160A  118A  2766  160A  118A  	fcall	init_fetch0
   995     176F  0080               	movwf	0
   996     1770  0A84               	incf	4,f
   997     1771  0804               	movf	4,w
   998     1772  067D               	xorwf	btemp+-1,w
   999     1773  1903               	btfsc	3,2
  1000     1774  3400               	retlw	0
  1001     1775  0AFF               	incf	btemp+1,f
  1002     1776  1903               	btfsc	3,2
  1003     1777  0AFE               	incf	btemp,f
  1004     1778  2F6A               	goto	init_ram0
  1005                           
  1006                           	psect	clrtext
  1007     07F4                     clear_ram0:	
  1008                           ;	Called with FSR containing the base address, and
  1009                           ;	W with the last address+1
  1010                           
  1011     07F4  0064               	clrwdt	;clear the watchdog before getting into this loop
  1012     07F5                     clrloop0:
  1013     07F5  0180               	clrf	0	;clear RAM location pointed to by FSR
  1014     07F6  0A84               	incf	4,f	;increment pointer
  1015     07F7  0604               	xorwf	4,w	;XOR with final address
  1016     07F8  1903               	btfsc	3,2	;have we reached the end yet?
  1017     07F9  3400               	retlw	0	;all done for this memory range, return
  1018     07FA  0604               	xorwf	4,w	;XOR again to restore value
  1019     07FB  2FF5               	goto	clrloop0	;do the next byte
  1020                           
  1021                           	psect	cstackCOMMON
  1022     0070                     __pcstackCOMMON:
  1023     0070                     ?_LCD_Command:
  1024     0070                     ?_Timer1_start:	
  1025                           ; 1 bytes @ 0x0
  1026                           
  1027     0070                     ?_seguridad:	
  1028                           ; 1 bytes @ 0x0
  1029                           
  1030     0070                     ?_monitoreo:	
  1031                           ; 1 bytes @ 0x0
  1032                           
  1033     0070                     ?_alarma:	
  1034                           ; 1 bytes @ 0x0
  1035                           
  1036     0070                     ?_secuencia5:	
  1037                           ; 1 bytes @ 0x0
  1038                           
  1039     0070                     ?_eventos:	
  1040                           ; 1 bytes @ 0x0
  1041                           
  1042     0070                     ?_secuencia6:	
  1043                           ; 1 bytes @ 0x0
  1044                           
  1045     0070                     ?_putch:	
  1046                           ; 1 bytes @ 0x0
  1047                           
  1048     0070                     ?_adc_init:	
  1049                           ; 1 bytes @ 0x0
  1050                           
  1051     0070                     ?_keypad_init:	
  1052                           ; 1 bytes @ 0x0
  1053                           
  1054     0070                     ?_keypad_getkey:	
  1055                           ; 1 bytes @ 0x0
  1056                           
  1057     0070                     ?_LCD_Init:	
  1058                           ; 1 bytes @ 0x0
  1059                           
  1060     0070                     ?_LCD_Char:	
  1061                           ; 1 bytes @ 0x0
  1062                           
  1063     0070                     ?_LCD_Clear:	
  1064                           ; 1 bytes @ 0x0
  1065                           
  1066     0070                     ?_main:	
  1067                           ; 1 bytes @ 0x0
  1068                           
  1069     0070                     ?_Timer1_ISR:	
  1070                           ; 1 bytes @ 0x0
  1071                           
  1072     0070                     putch@c:	
  1073                           ; 1 bytes @ 0x0
  1074                           
  1075     0070                     ??_Timer1_ISR:	
  1076                           ; 1 bytes @ 0x0
  1077                           
  1078                           
  1079                           ; 1 bytes @ 0x0
  1080     0070                     	ds	3
  1081     0073                     ?_delay_ms_variable:
  1082     0073                     ?_strncmp:	
  1083                           ; 1 bytes @ 0x3
  1084                           
  1085     0073                     ?__Umul8_16:	
  1086                           ; 2 bytes @ 0x3
  1087                           
  1088     0073                     ?_fputc:	
  1089                           ; 2 bytes @ 0x3
  1090                           
  1091     0073                     ?_adc_read:	
  1092                           ; 2 bytes @ 0x3
  1093                           
  1094     0073                     ?___awdiv:	
  1095                           ; 2 bytes @ 0x3
  1096                           
  1097     0073                     ?___awmod:	
  1098                           ; 2 bytes @ 0x3
  1099                           
  1100     0073                     ?___xxtofl:	
  1101                           ; 2 bytes @ 0x3
  1102                           
  1103     0073                     __Umul8_16@multiplicand:	
  1104                           ; 4 bytes @ 0x3
  1105                           
  1106     0073                     strncmp@l:	
  1107                           ; 1 bytes @ 0x3
  1108                           
  1109     0073                     adc_read@channel:	
  1110                           ; 1 bytes @ 0x3
  1111                           
  1112     0073                     delay_ms_variable@ms:	
  1113                           ; 2 bytes @ 0x3
  1114                           
  1115     0073                     ___awdiv@divisor:	
  1116                           ; 2 bytes @ 0x3
  1117                           
  1118     0073                     ___awmod@divisor:	
  1119                           ; 2 bytes @ 0x3
  1120                           
  1121     0073                     fputc@c:	
  1122                           ; 2 bytes @ 0x3
  1123                           
  1124     0073                     ___xxtofl@val:	
  1125                           ; 2 bytes @ 0x3
  1126                           
  1127     0073                     ??_LCD_Command:	
  1128                           ; 4 bytes @ 0x3
  1129                           
  1130     0073                     ??_Timer1_start:	
  1131                           ; 1 bytes @ 0x3
  1132                           
  1133     0073                     ??_putch:	
  1134                           ; 1 bytes @ 0x3
  1135                           
  1136     0073                     ??_adc_init:	
  1137                           ; 1 bytes @ 0x3
  1138                           
  1139     0073                     ??_keypad_init:	
  1140                           ; 1 bytes @ 0x3
  1141                           
  1142     0073                     ??_keypad_getkey:	
  1143                           ; 1 bytes @ 0x3
  1144                           
  1145     0073                     ??_LCD_Char:	
  1146                           ; 1 bytes @ 0x3
  1147                           
  1148                           
  1149                           ; 1 bytes @ 0x3
  1150     0073                     	ds	1
  1151     0074                     strncmp@r:
  1152                           
  1153                           ; 1 bytes @ 0x4
  1154     0074                     	ds	1
  1155     0075                     LCD_Command@cmd:
  1156     0075                     LCD_Char@dat:	
  1157                           ; 1 bytes @ 0x5
  1158                           
  1159     0075                     adc_read@value_adc:	
  1160                           ; 1 bytes @ 0x5
  1161                           
  1162     0075                     ___awdiv@dividend:	
  1163                           ; 2 bytes @ 0x5
  1164                           
  1165     0075                     ___awmod@dividend:	
  1166                           ; 2 bytes @ 0x5
  1167                           
  1168     0075                     fputc@fp:	
  1169                           ; 2 bytes @ 0x5
  1170                           
  1171     0075                     strncmp@n:	
  1172                           ; 2 bytes @ 0x5
  1173                           
  1174     0075                     ??__Umul8_16:	
  1175                           ; 2 bytes @ 0x5
  1176                           
  1177     0075                     ??_delay_ms_variable:	
  1178                           ; 1 bytes @ 0x5
  1179                           
  1180                           
  1181                           ; 1 bytes @ 0x5
  1182     0075                     	ds	1
  1183     0076                     ?_LCD_String:
  1184     0076                     LCD_String@msg:	
  1185                           ; 1 bytes @ 0x6
  1186                           
  1187     0076                     ??_LCD_Init:	
  1188                           ; 2 bytes @ 0x6
  1189                           
  1190     0076                     ??_LCD_Clear:	
  1191                           ; 1 bytes @ 0x6
  1192                           
  1193                           
  1194                           ; 1 bytes @ 0x6
  1195     0076                     	ds	1
  1196     0077                     vfprintf@cfmt:
  1197     0077                     ??_vfprintf:	
  1198                           ; 1 bytes @ 0x7
  1199                           
  1200     0077                     ??___awdiv:	
  1201                           ; 1 bytes @ 0x7
  1202                           
  1203     0077                     ??___awmod:	
  1204                           ; 1 bytes @ 0x7
  1205                           
  1206                           
  1207                           ; 1 bytes @ 0x7
  1208     0077                     	ds	1
  1209     0078                     ??_seguridad:
  1210     0078                     ??_LCD_String:	
  1211                           ; 1 bytes @ 0x8
  1212                           
  1213     0078                     ??_LCD_String_xy:	
  1214                           ; 1 bytes @ 0x8
  1215                           
  1216                           
  1217                           	psect	cstackBANK0
  1218     0020                     __pcstackBANK0:	
  1219                           ; 1 bytes @ 0x8
  1220                           
  1221     0020                     ?_LCD_String_xy:
  1222     0020                     ?_blink_led:	
  1223                           ; 1 bytes @ 0x0
  1224                           
  1225     0020                     LCD_String_xy@pos:	
  1226                           ; 1 bytes @ 0x0
  1227                           
  1228     0020                     ___awdiv@counter:	
  1229                           ; 1 bytes @ 0x0
  1230                           
  1231     0020                     ___awmod@counter:	
  1232                           ; 1 bytes @ 0x0
  1233                           
  1234     0020                     blink_led@on_time:	
  1235                           ; 1 bytes @ 0x0
  1236                           
  1237     0020                     __Umul8_16@product:	
  1238                           ; 2 bytes @ 0x0
  1239                           
  1240     0020                     keypad_getkey@letras:	
  1241                           ; 2 bytes @ 0x0
  1242                           
  1243     0020                     ??_strncmp:	
  1244                           ; 16 bytes @ 0x0
  1245                           
  1246     0020                     ??_fputc:	
  1247                           ; 1 bytes @ 0x0
  1248                           
  1249     0020                     ??_adc_read:	
  1250                           ; 1 bytes @ 0x0
  1251                           
  1252     0020                     ??___xxtofl:	
  1253                           ; 1 bytes @ 0x0
  1254                           
  1255                           
  1256                           ; 1 bytes @ 0x0
  1257     0020                     	ds	1
  1258     0021                     LCD_String_xy@msg:
  1259     0021                     ___awdiv@sign:	
  1260                           ; 1 bytes @ 0x1
  1261                           
  1262     0021                     ___awmod@sign:	
  1263                           ; 1 bytes @ 0x1
  1264                           
  1265                           
  1266                           ; 1 bytes @ 0x1
  1267     0021                     	ds	1
  1268     0022                     ?_abs:
  1269     0022                     LCD_String_xy@row:	
  1270                           ; 2 bytes @ 0x2
  1271                           
  1272     0022                     blink_led@off_time:	
  1273                           ; 1 bytes @ 0x2
  1274                           
  1275     0022                     ___awdiv@quotient:	
  1276                           ; 2 bytes @ 0x2
  1277                           
  1278     0022                     __Umul8_16@word_mpld:	
  1279                           ; 2 bytes @ 0x2
  1280                           
  1281     0022                     abs@a:	
  1282                           ; 2 bytes @ 0x2
  1283                           
  1284                           
  1285                           ; 2 bytes @ 0x2
  1286     0022                     	ds	1
  1287     0023                     LCD_String_xy@location:
  1288                           
  1289                           ; 1 bytes @ 0x3
  1290     0023                     	ds	1
  1291     0024                     __Umul8_16@multiplier:
  1292     0024                     ___xxtofl@sign:	
  1293                           ; 1 bytes @ 0x4
  1294                           
  1295     0024                     blink_led@duration:	
  1296                           ; 1 bytes @ 0x4
  1297                           
  1298     0024                     ??_alarma:	
  1299                           ; 2 bytes @ 0x4
  1300                           
  1301     0024                     ??_secuencia5:	
  1302                           ; 1 bytes @ 0x4
  1303                           
  1304     0024                     ??_eventos:	
  1305                           ; 1 bytes @ 0x4
  1306                           
  1307     0024                     ??_abs:	
  1308                           ; 1 bytes @ 0x4
  1309                           
  1310                           
  1311                           ; 1 bytes @ 0x4
  1312     0024                     	ds	1
  1313     0025                     ___xxtofl@exp:
  1314                           
  1315                           ; 1 bytes @ 0x5
  1316     0025                     	ds	1
  1317     0026                     ___xxtofl@arg:
  1318     0026                     ??_blink_led:	
  1319                           ; 4 bytes @ 0x6
  1320                           
  1321                           
  1322                           ; 1 bytes @ 0x6
  1323     0026                     	ds	1
  1324     0027                     secuencia5@i:
  1325                           
  1326                           ; 2 bytes @ 0x7
  1327     0027                     	ds	1
  1328     0028                     blink_led@elapsed_time:
  1329                           
  1330                           ; 2 bytes @ 0x8
  1331     0028                     	ds	1
  1332     0029                     ?_vfpfcnvrt:
  1333     0029                     secuencia5@i_453:	
  1334                           ; 1 bytes @ 0x9
  1335                           
  1336     0029                     vfpfcnvrt@fp:	
  1337                           ; 2 bytes @ 0x9
  1338                           
  1339                           
  1340                           ; 2 bytes @ 0x9
  1341     0029                     	ds	1
  1342     002A                     ?___flmul:
  1343     002A                     blink_led@led:	
  1344                           ; 4 bytes @ 0xA
  1345                           
  1346     002A                     ___flmul@b:	
  1347                           ; 1 bytes @ 0xA
  1348                           
  1349                           
  1350                           ; 4 bytes @ 0xA
  1351     002A                     	ds	1
  1352     002B                     vfpfcnvrt@fmt:
  1353     002B                     secuencia5@var12:	
  1354                           ; 1 bytes @ 0xB
  1355                           
  1356     002B                     ??_secuencia6:	
  1357                           ; 2 bytes @ 0xB
  1358                           
  1359                           
  1360                           ; 1 bytes @ 0xB
  1361     002B                     	ds	1
  1362     002C                     vfpfcnvrt@ap:
  1363                           
  1364                           ; 1 bytes @ 0xC
  1365     002C                     	ds	1
  1366     002D                     secuencia5@var34:
  1367     002D                     ??_vfpfcnvrt:	
  1368                           ; 2 bytes @ 0xD
  1369                           
  1370                           
  1371                           ; 1 bytes @ 0xD
  1372     002D                     	ds	1
  1373     002E                     secuencia6@i:
  1374     002E                     ___flmul@a:	
  1375                           ; 2 bytes @ 0xE
  1376                           
  1377                           
  1378                           ; 4 bytes @ 0xE
  1379     002E                     	ds	1
  1380     002F                     vfpfcnvrt@done:
  1381     002F                     secuencia5@var4:	
  1382                           ; 1 bytes @ 0xF
  1383                           
  1384                           
  1385                           ; 2 bytes @ 0xF
  1386     002F                     	ds	1
  1387     0030                     keypad_getkey@valor:
  1388     0030                     vfpfcnvrt@cp:	
  1389                           ; 1 bytes @ 0x10
  1390                           
  1391     0030                     secuencia6@i_495:	
  1392                           ; 1 bytes @ 0x10
  1393                           
  1394                           
  1395                           ; 2 bytes @ 0x10
  1396     0030                     	ds	1
  1397     0031                     keypad_getkey@i:
  1398     0031                     secuencia5@var1:	
  1399                           ; 2 bytes @ 0x11
  1400                           
  1401     0031                     vfpfcnvrt@convarg:	
  1402                           ; 2 bytes @ 0x11
  1403                           
  1404                           
  1405                           ; 4 bytes @ 0x11
  1406     0031                     	ds	1
  1407     0032                     secuencia6@var12:
  1408     0032                     ??___flmul:	
  1409                           ; 2 bytes @ 0x12
  1410                           
  1411                           
  1412                           ; 1 bytes @ 0x12
  1413     0032                     	ds	1
  1414     0033                     seguridad@key:
  1415     0033                     secuencia5@var2:	
  1416                           ; 1 bytes @ 0x13
  1417                           
  1418                           
  1419                           ; 2 bytes @ 0x13
  1420     0033                     	ds	1
  1421     0034                     secuencia6@var1:
  1422                           
  1423                           ; 2 bytes @ 0x14
  1424     0034                     	ds	1
  1425     0035                     vfpfcnvrt@c:
  1426     0035                     secuencia5@var3:	
  1427                           ; 1 bytes @ 0x15
  1428                           
  1429                           
  1430                           ; 2 bytes @ 0x15
  1431     0035                     	ds	1
  1432     0036                     ?_vfprintf:
  1433     0036                     secuencia6@var2:	
  1434                           ; 2 bytes @ 0x16
  1435                           
  1436     0036                     vfprintf@fp:	
  1437                           ; 2 bytes @ 0x16
  1438                           
  1439                           
  1440                           ; 2 bytes @ 0x16
  1441     0036                     	ds	1
  1442     0037                     ___flmul@sign:
  1443                           
  1444                           ; 1 bytes @ 0x17
  1445     0037                     	ds	1
  1446     0038                     vfprintf@fmt:
  1447     0038                     secuencia6@var34:	
  1448                           ; 1 bytes @ 0x18
  1449                           
  1450     0038                     ___flmul@grs:	
  1451                           ; 2 bytes @ 0x18
  1452                           
  1453                           
  1454                           ; 4 bytes @ 0x18
  1455     0038                     	ds	1
  1456     0039                     vfprintf@ap:
  1457                           
  1458                           ; 1 bytes @ 0x19
  1459     0039                     	ds	1
  1460     003A                     ?_sprintf:
  1461     003A                     sprintf@s:	
  1462                           ; 2 bytes @ 0x1A
  1463                           
  1464     003A                     secuencia6@var3:	
  1465                           ; 1 bytes @ 0x1A
  1466                           
  1467                           
  1468                           ; 2 bytes @ 0x1A
  1469     003A                     	ds	1
  1470     003B                     sprintf@fmt:
  1471                           
  1472                           ; 1 bytes @ 0x1B
  1473     003B                     	ds	1
  1474     003C                     ___flmul@aexp:
  1475     003C                     secuencia6@var4:	
  1476                           ; 1 bytes @ 0x1C
  1477                           
  1478                           
  1479                           ; 2 bytes @ 0x1C
  1480     003C                     	ds	1
  1481     003D                     ___flmul@bexp:
  1482                           
  1483                           ; 1 bytes @ 0x1D
  1484     003D                     	ds	1
  1485     003E                     ___flmul@prod:
  1486                           
  1487                           ; 4 bytes @ 0x1E
  1488     003E                     	ds	2
  1489     0040                     ??_sprintf:
  1490                           
  1491                           ; 1 bytes @ 0x20
  1492     0040                     	ds	1
  1493     0041                     sprintf@ap:
  1494                           
  1495                           ; 1 bytes @ 0x21
  1496     0041                     	ds	1
  1497     0042                     ___flmul@temp:
  1498     0042                     sprintf@f:	
  1499                           ; 2 bytes @ 0x22
  1500                           
  1501                           
  1502                           ; 11 bytes @ 0x22
  1503     0042                     	ds	2
  1504     0044                     ?___fltol:
  1505     0044                     ___fltol@f1:	
  1506                           ; 4 bytes @ 0x24
  1507                           
  1508                           
  1509                           ; 4 bytes @ 0x24
  1510     0044                     	ds	4
  1511     0048                     ??___fltol:
  1512                           
  1513                           ; 1 bytes @ 0x28
  1514     0048                     	ds	4
  1515     004C                     ___fltol@sign1:
  1516                           
  1517                           ; 1 bytes @ 0x2C
  1518     004C                     	ds	1
  1519     004D                     ___fltol@exp1:
  1520                           
  1521                           ; 1 bytes @ 0x2D
  1522     004D                     	ds	1
  1523     004E                     ??_monitoreo:
  1524                           
  1525                           ; 1 bytes @ 0x2E
  1526     004E                     	ds	2
  1527     0050                     monitoreo@StringTemperature:
  1528                           
  1529                           ; 20 bytes @ 0x30
  1530     0050                     	ds	20
  1531     0064                     monitoreo@celsius:
  1532                           
  1533                           ; 2 bytes @ 0x44
  1534     0064                     	ds	2
  1535     0066                     monitoreo@temperatura:
  1536                           
  1537                           ; 2 bytes @ 0x46
  1538     0066                     	ds	2
  1539     0068                     monitoreo@value_adc:
  1540                           
  1541                           ; 2 bytes @ 0x48
  1542     0068                     	ds	2
  1543     006A                     monitoreo@luz:
  1544                           
  1545                           ; 2 bytes @ 0x4A
  1546     006A                     	ds	2
  1547     006C                     ??_main:
  1548                           
  1549                           ; 1 bytes @ 0x4C
  1550     006C                     	ds	3
  1551                           
  1552                           	psect	maintext
  1553     0389                     __pmaintext:	
  1554 ;;
  1555 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1556 ;;
  1557 ;; *************** function _main *****************
  1558 ;; Defined at:
  1559 ;;		line 97 in file "main.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;		None
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;		None
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  1    wreg      void 
  1566 ;; Registers used:
  1567 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1568 ;; Tracked objects:
  1569 ;;		On entry : B00/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1573 ;;      Params:         0       0       0       0       0
  1574 ;;      Locals:         0       0       0       0       0
  1575 ;;      Temps:          0       3       0       0       0
  1576 ;;      Totals:         0       3       0       0       0
  1577 ;;Total ram usage:        3 bytes
  1578 ;; Hardware stack levels required when called: 7
  1579 ;; This function calls:
  1580 ;;		_LCD_Clear
  1581 ;;		_LCD_Init
  1582 ;;		_LCD_String_xy
  1583 ;;		_Timer1_start
  1584 ;;		_adc_init
  1585 ;;		_alarma
  1586 ;;		_eventos
  1587 ;;		_keypad_init
  1588 ;;		_monitoreo
  1589 ;;		_secuencia5
  1590 ;;		_secuencia6
  1591 ;;		_seguridad
  1592 ;; This function is called by:
  1593 ;;		Startup code after reset
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597     0389                     _main:	
  1598                           ;psect for function _main
  1599                           
  1600     0389                     l4133:	
  1601                           ;incstack = 0
  1602                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1603                           
  1604                           
  1605                           ;main.c: 100:     OSCCON = 0x71;
  1606     0389  3071               	movlw	113
  1607     038A  1683               	bsf	3,5	;RP0=1, select bank1
  1608     038B  1303               	bcf	3,6	;RP1=0, select bank1
  1609     038C  008F               	movwf	15	;volatile
  1610     038D                     l4135:
  1611                           
  1612                           ;main.c: 102:     LCD_Init();
  1613     038D  120A  158A  211F  120A  118A  	fcall	_LCD_Init
  1614                           
  1615                           ;main.c: 104:     keypad_init();
  1616     0392  160A  118A  270C  120A  118A  	fcall	_keypad_init
  1617     0397                     l4137:
  1618                           
  1619                           ;main.c: 105:     TRISE = 0b00000000;
  1620     0397  1683               	bsf	3,5	;RP0=1, select bank1
  1621     0398  1303               	bcf	3,6	;RP1=0, select bank1
  1622     0399  0189               	clrf	9	;volatile
  1623     039A                     l4139:
  1624                           
  1625                           ;main.c: 106:     ANSELH = 0x00;
  1626     039A  1683               	bsf	3,5	;RP0=1, select bank3
  1627     039B  1703               	bsf	3,6	;RP1=1, select bank3
  1628     039C  0189               	clrf	9	;volatile
  1629     039D                     l4141:
  1630                           
  1631                           ;main.c: 108:     TRISD = 0b00000000;
  1632     039D  1683               	bsf	3,5	;RP0=1, select bank1
  1633     039E  1303               	bcf	3,6	;RP1=0, select bank1
  1634     039F  0188               	clrf	8	;volatile
  1635     03A0                     l4143:
  1636                           
  1637                           ;main.c: 111:     TRISAbits.TRISA0 = 1;
  1638     03A0  1405               	bsf	5,0	;volatile
  1639     03A1                     l4145:
  1640                           
  1641                           ;main.c: 112:     TRISAbits.TRISA1 = 0;
  1642     03A1  1085               	bcf	5,1	;volatile
  1643     03A2                     l4147:
  1644                           
  1645                           ;main.c: 113:     TRISAbits.TRISA2 = 1;
  1646     03A2  1505               	bsf	5,2	;volatile
  1647     03A3                     l4149:
  1648                           
  1649                           ;main.c: 114:     TRISAbits.TRISA3 = 1;
  1650     03A3  1585               	bsf	5,3	;volatile
  1651     03A4                     l4151:
  1652                           
  1653                           ;main.c: 116:     TRISAbits.TRISA5 = 1;
  1654     03A4  1685               	bsf	5,5	;volatile
  1655     03A5                     l4153:
  1656                           
  1657                           ;main.c: 117:     TRISAbits.TRISA7 = 1;
  1658     03A5  1785               	bsf	5,7	;volatile
  1659     03A6                     l4155:
  1660                           
  1661                           ;main.c: 118:     ANSEL = 0b00011000;
  1662     03A6  3018               	movlw	24
  1663     03A7  1683               	bsf	3,5	;RP0=1, select bank3
  1664     03A8  1703               	bsf	3,6	;RP1=1, select bank3
  1665     03A9  0088               	movwf	8	;volatile
  1666     03AA                     l4157:
  1667                           
  1668                           ;main.c: 119:     adc_init();
  1669     03AA  160A  118A  2723  120A  118A  	fcall	_adc_init
  1670     03AF                     l4159:
  1671                           
  1672                           ;main.c: 120:     Timer1_start();
  1673     03AF  160A  118A  2714  120A  118A  	fcall	_Timer1_start
  1674     03B4                     l4161:
  1675                           
  1676                           ;main.c: 122:     estadoactual = INIT;
  1677     03B4  01FA               	clrf	_estadoactual
  1678     03B5                     l4163:
  1679                           
  1680                           ;main.c: 123:     PORTD = 0;
  1681     03B5  1283               	bcf	3,5	;RP0=0, select bank0
  1682     03B6  1303               	bcf	3,6	;RP1=0, select bank0
  1683     03B7  0188               	clrf	8	;volatile
  1684     03B8  2C8A               	goto	l4245
  1685     03B9                     l4165:
  1686                           
  1687                           ;main.c: 129:                 LCD_Clear();
  1688     03B9  160A  118A  2733  120A  118A  	fcall	_LCD_Clear
  1689     03BE                     l4167:
  1690                           
  1691                           ;main.c: 130:                 LCD_String_xy(0,0,"INIT");
  1692     03BE  1283               	bcf	3,5	;RP0=0, select bank0
  1693     03BF  1303               	bcf	3,6	;RP1=0, select bank0
  1694     03C0  01A0               	clrf	LCD_String_xy@pos
  1695     03C1  308B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1696     03C2  00A1               	movwf	LCD_String_xy@msg
  1697     03C3  3000               	movlw	0
  1698     03C4  120A  158A  2149  120A  118A  	fcall	_LCD_String_xy
  1699     03C9                     l4169:
  1700                           
  1701                           ;main.c: 131:                 seguridad();
  1702     03C9  120A  158A  272D  120A  118A  	fcall	_seguridad
  1703     03CE                     l4171:
  1704                           
  1705                           ;main.c: 132:                 if(flag_correcto==1){
  1706     03CE  1283               	bcf	3,5	;RP0=0, select bank0
  1707     03CF  1303               	bcf	3,6	;RP1=0, select bank0
  1708     03D0  036F               	decf	_flag_correcto,w
  1709     03D1  1D03               	btfss	3,2
  1710     03D2  2BD4               	goto	u4581
  1711     03D3  2BD5               	goto	u4580
  1712     03D4                     u4581:
  1713     03D4  2BDC               	goto	l4177
  1714     03D5                     u4580:
  1715     03D5                     l4173:
  1716                           
  1717                           ;main.c: 133:                     estadoactual=MONITOREO;
  1718     03D5  3001               	movlw	1
  1719     03D6  00FA               	movwf	_estadoactual
  1720     03D7                     l4175:
  1721                           
  1722                           ;main.c: 134:                     count_5sec=0;
  1723     03D7  1683               	bsf	3,5	;RP0=1, select bank1
  1724     03D8  1303               	bcf	3,6	;RP1=0, select bank1
  1725     03D9  01D4               	clrf	_count_5sec^(0+128)
  1726     03DA  01D5               	clrf	(_count_5sec+1)^(0+128)
  1727                           
  1728                           ;main.c: 135:                 }
  1729     03DB  2BF1               	goto	l256
  1730     03DC                     l4177:
  1731     03DC  086F               	movf	_flag_correcto,w
  1732     03DD  1D03               	btfss	3,2
  1733     03DE  2BE0               	goto	u4591
  1734     03DF  2BE1               	goto	u4590
  1735     03E0                     u4591:
  1736     03E0  2BE3               	goto	l4181
  1737     03E1                     u4590:
  1738     03E1                     l4179:
  1739                           
  1740                           ;main.c: 137:                     estadoactual=INIT;
  1741     03E1  01FA               	clrf	_estadoactual
  1742                           
  1743                           ;main.c: 138:                 }
  1744     03E2  2BF1               	goto	l256
  1745     03E3                     l4181:
  1746     03E3  3002               	movlw	2
  1747     03E4  066F               	xorwf	_flag_correcto,w
  1748     03E5  1D03               	btfss	3,2
  1749     03E6  2BE8               	goto	u4601
  1750     03E7  2BE9               	goto	u4600
  1751     03E8                     u4601:
  1752     03E8  2BF1               	goto	l256
  1753     03E9                     u4600:
  1754     03E9                     l4183:
  1755                           
  1756                           ;main.c: 140:                     estadoactual=BLOQUEADO;
  1757     03E9  3005               	movlw	5
  1758     03EA  00FA               	movwf	_estadoactual
  1759     03EB                     l4185:
  1760                           
  1761                           ;main.c: 141:                     count_500ms = 0;
  1762     03EB  1683               	bsf	3,5	;RP0=1, select bank1
  1763     03EC  1303               	bcf	3,6	;RP1=0, select bank1
  1764     03ED  01CC               	clrf	_count_500ms^(0+128)
  1765     03EE  01CD               	clrf	(_count_500ms+1)^(0+128)
  1766                           
  1767                           ;main.c: 142:                     count_10sec = 0;
  1768     03EF  01D0               	clrf	_count_10sec^(0+128)
  1769     03F0  01D1               	clrf	(_count_10sec+1)^(0+128)
  1770     03F1                     l256:
  1771                           
  1772                           ;main.c: 144:                 flag_correcto=0;
  1773     03F1  1283               	bcf	3,5	;RP0=0, select bank0
  1774     03F2  01EF               	clrf	_flag_correcto
  1775                           
  1776                           ;main.c: 145:                 break;
  1777     03F3  2C8A               	goto	l4245
  1778     03F4                     l4187:
  1779                           
  1780                           ;main.c: 147:                 monitoreo();
  1781     03F4  120A  158A  250D  120A  118A  	fcall	_monitoreo
  1782     03F9                     l4189:
  1783                           
  1784                           ;main.c: 148:                 if(flag_correcto==4){
  1785     03F9  3004               	movlw	4
  1786     03FA  1283               	bcf	3,5	;RP0=0, select bank0
  1787     03FB  1303               	bcf	3,6	;RP1=0, select bank0
  1788     03FC  066F               	xorwf	_flag_correcto,w
  1789     03FD  1D03               	btfss	3,2
  1790     03FE  2C00               	goto	u4611
  1791     03FF  2C01               	goto	u4610
  1792     0400                     u4611:
  1793     0400  2C0E               	goto	l4195
  1794     0401                     u4610:
  1795     0401                     l4191:
  1796                           
  1797                           ;main.c: 149:                     estadoactual=ALARMA;
  1798     0401  3002               	movlw	2
  1799     0402  00FA               	movwf	_estadoactual
  1800     0403                     l4193:
  1801                           
  1802                           ;main.c: 150:                     count_800ms = 0;
  1803     0403  1683               	bsf	3,5	;RP0=1, select bank1
  1804     0404  1303               	bcf	3,6	;RP1=0, select bank1
  1805     0405  01CE               	clrf	_count_800ms^(0+128)
  1806     0406  01CF               	clrf	(_count_800ms+1)^(0+128)
  1807                           
  1808                           ;main.c: 151:                     count_5sec = 0;
  1809     0407  01D4               	clrf	_count_5sec^(0+128)
  1810     0408  01D5               	clrf	(_count_5sec+1)^(0+128)
  1811                           
  1812                           ;main.c: 152:                     flag_correcto=0;
  1813     0409  1283               	bcf	3,5	;RP0=0, select bank0
  1814     040A  1303               	bcf	3,6	;RP1=0, select bank0
  1815     040B  01EF               	clrf	_flag_correcto
  1816                           
  1817                           ;main.c: 153:                     flag_count_5sec=0;
  1818     040C  01F8               	clrf	_flag_count_5sec
  1819                           
  1820                           ;main.c: 154:                 }
  1821     040D  2C1A               	goto	l4201
  1822     040E                     l4195:
  1823     040E  0878               	movf	_flag_count_5sec,w
  1824     040F  1903               	btfsc	3,2
  1825     0410  2C12               	goto	u4621
  1826     0411  2C13               	goto	u4620
  1827     0412                     u4621:
  1828     0412  2C1A               	goto	l4201
  1829     0413                     u4620:
  1830     0413                     l4197:
  1831                           
  1832                           ;main.c: 156:                     estadoactual=EVENTOS;
  1833     0413  3004               	movlw	4
  1834     0414  00FA               	movwf	_estadoactual
  1835     0415                     l4199:
  1836                           
  1837                           ;main.c: 157:                     count_2sec = 0;
  1838     0415  1683               	bsf	3,5	;RP0=1, select bank1
  1839     0416  1303               	bcf	3,6	;RP1=0, select bank1
  1840     0417  01D2               	clrf	_count_2sec^(0+128)
  1841     0418  01D3               	clrf	(_count_2sec+1)^(0+128)
  1842                           
  1843                           ;main.c: 158:                     flag_count_5sec=0;
  1844     0419  01F8               	clrf	_flag_count_5sec
  1845     041A                     l4201:
  1846                           
  1847                           ;main.c: 160:                 _delay((unsigned long)((500)*(8000000/4000.0)));
  1848     041A  3006               	movlw	6
  1849     041B  1283               	bcf	3,5	;RP0=0, select bank0
  1850     041C  1303               	bcf	3,6	;RP1=0, select bank0
  1851     041D  00EE               	movwf	??_main+2
  1852     041E  3013               	movlw	19
  1853     041F  00ED               	movwf	??_main+1
  1854     0420  30AD               	movlw	173
  1855     0421  00EC               	movwf	??_main
  1856     0422                     u4697:
  1857     0422  0BEC               	decfsz	??_main,f
  1858     0423  2C22               	goto	u4697
  1859     0424  0BED               	decfsz	??_main+1,f
  1860     0425  2C22               	goto	u4697
  1861     0426  0BEE               	decfsz	??_main+2,f
  1862     0427  2C22               	goto	u4697
  1863                           
  1864                           ;main.c: 161:                 break;
  1865     0428  2C8A               	goto	l4245
  1866     0429                     l265:	
  1867                           ;main.c: 163:             case ALARMA:
  1868                           
  1869                           
  1870                           ;main.c: 164:                 PORTAbits.RA1 = 1;
  1871     0429  1485               	bsf	5,1	;volatile
  1872     042A                     l4203:
  1873                           
  1874                           ;main.c: 165:                 alarma();
  1875     042A  120A  158A  221A  120A  118A  	fcall	_alarma
  1876     042F                     l4205:
  1877                           
  1878                           ;main.c: 166:                 if(flag_count_5sec){
  1879     042F  0878               	movf	_flag_count_5sec,w
  1880     0430  1903               	btfsc	3,2
  1881     0431  2C33               	goto	u4631
  1882     0432  2C34               	goto	u4630
  1883     0433                     u4631:
  1884     0433  2C38               	goto	l266
  1885     0434                     u4630:
  1886     0434                     l4207:
  1887                           
  1888                           ;main.c: 167:                     estadoactual=MONITOREO;
  1889     0434  3001               	movlw	1
  1890     0435  00FA               	movwf	_estadoactual
  1891     0436                     l4209:
  1892                           
  1893                           ;main.c: 168:                     flag_count_5sec=0;
  1894     0436  01F8               	clrf	_flag_count_5sec
  1895                           
  1896                           ;main.c: 169:                 }
  1897     0437  2C8A               	goto	l4245
  1898     0438                     l266:	
  1899                           ;main.c: 170:                 else if(PORTAbits.RA7==1){
  1900                           
  1901     0438  1283               	bcf	3,5	;RP0=0, select bank0
  1902     0439  1303               	bcf	3,6	;RP1=0, select bank0
  1903     043A  1F85               	btfss	5,7	;volatile
  1904     043B  2C3D               	goto	u4641
  1905     043C  2C3E               	goto	u4640
  1906     043D                     u4641:
  1907     043D  2C8A               	goto	l253
  1908     043E                     u4640:
  1909     043E                     l4211:
  1910                           
  1911                           ;main.c: 171:                     estadoactual=INIT;
  1912     043E  01FA               	clrf	_estadoactual
  1913     043F  2C8A               	goto	l4245
  1914     0440                     l4213:
  1915                           
  1916                           ;main.c: 175:                 secuencia5();
  1917     0440  120A  118A  24AB  120A  118A  	fcall	_secuencia5
  1918     0445                     l4215:
  1919                           
  1920                           ;main.c: 176:                 if(flag_count_5sec){
  1921     0445  0878               	movf	_flag_count_5sec,w
  1922     0446  1903               	btfsc	3,2
  1923     0447  2C49               	goto	u4651
  1924     0448  2C4A               	goto	u4650
  1925     0449                     u4651:
  1926     0449  2C8A               	goto	l253
  1927     044A                     u4650:
  1928     044A                     l4217:
  1929                           
  1930                           ;main.c: 177:                     estadoactual=BLOQUEADO;
  1931     044A  3005               	movlw	5
  1932     044B  00FA               	movwf	_estadoactual
  1933     044C  2C36               	goto	l4209
  1934     044D                     l4221:
  1935                           
  1936                           ;main.c: 182:                 eventos();
  1937     044D  120A  158A  20CD  120A  118A  	fcall	_eventos
  1938     0452                     l4223:
  1939                           
  1940                           ;main.c: 183:                 if(flag_correcto==1){
  1941     0452  1283               	bcf	3,5	;RP0=0, select bank0
  1942     0453  1303               	bcf	3,6	;RP1=0, select bank0
  1943     0454  036F               	decf	_flag_correcto,w
  1944     0455  1D03               	btfss	3,2
  1945     0456  2C58               	goto	u4661
  1946     0457  2C59               	goto	u4660
  1947     0458                     u4661:
  1948     0458  2C5C               	goto	l4227
  1949     0459                     u4660:
  1950     0459                     l4225:
  1951                           
  1952                           ;main.c: 184:                     estadoactual=ALERTA;
  1953     0459  3003               	movlw	3
  1954     045A  00FA               	movwf	_estadoactual
  1955                           
  1956                           ;main.c: 185:                 }
  1957     045B  2BF1               	goto	l256
  1958     045C                     l4227:
  1959     045C  1683               	bsf	3,5	;RP0=1, select bank1
  1960     045D  1303               	bcf	3,6	;RP1=0, select bank1
  1961     045E  085C               	movf	_flag_count_2sec^(0+128),w
  1962     045F  1903               	btfsc	3,2
  1963     0460  2C62               	goto	u4671
  1964     0461  2C63               	goto	u4670
  1965     0462                     u4671:
  1966     0462  2BF1               	goto	l256
  1967     0463                     u4670:
  1968     0463                     l4229:
  1969                           
  1970                           ;main.c: 187:                     estadoactual=MONITOREO;
  1971     0463  3001               	movlw	1
  1972     0464  00FA               	movwf	_estadoactual
  1973     0465                     l4231:
  1974                           
  1975                           ;main.c: 188:                     count_5sec = 0;
  1976     0465  01D4               	clrf	_count_5sec^(0+128)
  1977     0466  01D5               	clrf	(_count_5sec+1)^(0+128)
  1978                           
  1979                           ;main.c: 189:                     flag_count_2sec=0;
  1980     0467  01DC               	clrf	_flag_count_2sec^(0+128)
  1981     0468  2BF1               	goto	l256
  1982     0469                     l4233:
  1983                           
  1984                           ;main.c: 194:                 LCD_Clear();
  1985     0469  160A  118A  2733  120A  118A  	fcall	_LCD_Clear
  1986     046E                     l4235:
  1987                           
  1988                           ;main.c: 195:                 LCD_String_xy(0,0,"BLOQUEADO");
  1989     046E  1283               	bcf	3,5	;RP0=0, select bank0
  1990     046F  1303               	bcf	3,6	;RP1=0, select bank0
  1991     0470  01A0               	clrf	LCD_String_xy@pos
  1992     0471  3061               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1993     0472  00A1               	movwf	LCD_String_xy@msg
  1994     0473  3000               	movlw	0
  1995     0474  120A  158A  2149  120A  118A  	fcall	_LCD_String_xy
  1996     0479                     l4237:
  1997                           
  1998                           ;main.c: 196:                 secuencia6();
  1999     0479  120A  158A  2668  120A  118A  	fcall	_secuencia6
  2000     047E                     l4239:
  2001                           
  2002                           ;main.c: 197:                 if(flag_count_10sec){
  2003     047E  1683               	bsf	3,5	;RP0=1, select bank1
  2004     047F  1303               	bcf	3,6	;RP1=0, select bank1
  2005     0480  085B               	movf	_flag_count_10sec^(0+128),w
  2006     0481  1903               	btfsc	3,2
  2007     0482  2C84               	goto	u4681
  2008     0483  2C85               	goto	u4680
  2009     0484                     u4681:
  2010     0484  2C8A               	goto	l253
  2011     0485                     u4680:
  2012     0485                     l4241:
  2013                           
  2014                           ;main.c: 198:                     estadoactual=INIT;
  2015     0485  01FA               	clrf	_estadoactual
  2016                           
  2017                           ;main.c: 199:                     count_10sec = 0;
  2018     0486  01D0               	clrf	_count_10sec^(0+128)
  2019     0487  01D1               	clrf	(_count_10sec+1)^(0+128)
  2020                           
  2021                           ;main.c: 200:                     flag_count_10sec=0;
  2022     0488  01DB               	clrf	_flag_count_10sec^(0+128)
  2023     0489  2C8A               	goto	l4245
  2024     048A                     l253:
  2025     048A                     l4245:
  2026     048A  087A               	movf	_estadoactual,w
  2027     048B  1283               	bcf	3,5	;RP0=0, select bank0
  2028     048C  1303               	bcf	3,6	;RP1=0, select bank0
  2029     048D  00EC               	movwf	??_main
  2030     048E  01ED               	clrf	??_main+1
  2031                           
  2032                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2033                           ; Switch size 1, requested type "simple"
  2034                           ; Number of cases is 1, Range of values is 0 to 0
  2035                           ; switch strategies available:
  2036                           ; Name         Instructions Cycles
  2037                           ; simple_byte            4     3 (average)
  2038                           ; direct_byte           11     8 (fixed)
  2039                           ; jumptable            260     6 (fixed)
  2040                           ;	Chosen strategy is simple_byte
  2041     048F  086D               	movf	??_main+1,w
  2042     0490  3A00               	xorlw	0	; case 0
  2043     0491  1903               	skipnz
  2044     0492  2C94               	goto	l4283
  2045     0493  2C8A               	goto	l4245
  2046     0494                     l4283:
  2047                           
  2048                           ; Switch size 1, requested type "simple"
  2049                           ; Number of cases is 6, Range of values is 0 to 5
  2050                           ; switch strategies available:
  2051                           ; Name         Instructions Cycles
  2052                           ; simple_byte           19    10 (average)
  2053                           ; direct_byte           26     8 (fixed)
  2054                           ; jumptable            260     6 (fixed)
  2055                           ;	Chosen strategy is simple_byte
  2056     0494  086C               	movf	??_main,w
  2057     0495  3A00               	xorlw	0	; case 0
  2058     0496  1903               	skipnz
  2059     0497  2BB9               	goto	l4165
  2060     0498  3A01               	xorlw	1	; case 1
  2061     0499  1903               	skipnz
  2062     049A  2BF4               	goto	l4187
  2063     049B  3A03               	xorlw	3	; case 2
  2064     049C  1903               	skipnz
  2065     049D  2C29               	goto	l265
  2066     049E  3A01               	xorlw	1	; case 3
  2067     049F  1903               	skipnz
  2068     04A0  2C40               	goto	l4213
  2069     04A1  3A07               	xorlw	7	; case 4
  2070     04A2  1903               	skipnz
  2071     04A3  2C4D               	goto	l4221
  2072     04A4  3A01               	xorlw	1	; case 5
  2073     04A5  1903               	skipnz
  2074     04A6  2C69               	goto	l4233
  2075     04A7  2C8A               	goto	l4245
  2076     04A8  120A  118A  280E   	ljmp	start
  2077     04AB                     __end_of_main:
  2078                           
  2079                           	psect	text1
  2080     0F2D                     __ptext1:	
  2081 ;; *************** function _seguridad *****************
  2082 ;; Defined at:
  2083 ;;		line 368 in file "main.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;		None
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;  key             1   19[BANK0 ] unsigned char 
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  1    wreg      void 
  2090 ;; Registers used:
  2091 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2097 ;;      Params:         0       0       0       0       0
  2098 ;;      Locals:         0       1       0       0       0
  2099 ;;      Temps:          0       0       0       0       0
  2100 ;;      Totals:         0       1       0       0       0
  2101 ;;Total ram usage:        1 bytes
  2102 ;; Hardware stack levels used: 1
  2103 ;; Hardware stack levels required when called: 4
  2104 ;; This function calls:
  2105 ;;		_LCD_Char
  2106 ;;		_LCD_Clear
  2107 ;;		_LCD_Command
  2108 ;;		_LCD_String_xy
  2109 ;;		_blink_led
  2110 ;;		_keypad_getkey
  2111 ;;		_strncmp
  2112 ;; This function is called by:
  2113 ;;		_main
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117     0F2D                     _seguridad:	
  2118                           ;psect for function _seguridad
  2119                           
  2120     0F2D                     l3889:	
  2121                           ;incstack = 0
  2122                           ; Regs used in _seguridad: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2123                           
  2124     0F2D                     l3891:
  2125                           
  2126                           ;main.c: 370:                 LCD_String_xy(0,0,"Press a Key");
  2127     0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  2128     0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  2129     0F2F  01A0               	clrf	LCD_String_xy@pos
  2130     0F30  3055               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2131     0F31  00A1               	movwf	LCD_String_xy@msg
  2132     0F32  3000               	movlw	0
  2133     0F33  120A  158A  2149  120A  158A  	fcall	_LCD_String_xy
  2134     0F38                     l3893:
  2135                           
  2136                           ;main.c: 371:                 LCD_Char(2);
  2137     0F38  3002               	movlw	2
  2138     0F39  120A  158A  21AB  120A  158A  	fcall	_LCD_Char
  2139     0F3E                     l3895:
  2140                           
  2141                           ;main.c: 372:                 LCD_Command(0xC0);
  2142     0F3E  30C0               	movlw	192
  2143     0F3F  120A  158A  2175  120A  158A  	fcall	_LCD_Command
  2144     0F44                     l324:	
  2145                           ;main.c: 375:                 do{
  2146                           
  2147                           
  2148                           ;main.c: 376:                     key = keypad_getkey();
  2149     0F44  120A  118A  269C  120A  158A  	fcall	_keypad_getkey
  2150     0F49  1283               	bcf	3,5	;RP0=0, select bank0
  2151     0F4A  1303               	bcf	3,6	;RP1=0, select bank0
  2152     0F4B  00B3               	movwf	seguridad@key
  2153     0F4C                     l3897:
  2154                           
  2155                           ;main.c: 377:                     if(key != 0){
  2156     0F4C  0833               	movf	seguridad@key,w
  2157     0F4D  1903               	btfsc	3,2
  2158     0F4E  2F50               	goto	u4441
  2159     0F4F  2F51               	goto	u4440
  2160     0F50                     u4441:
  2161     0F50  2F61               	goto	l3905
  2162     0F51                     u4440:
  2163     0F51                     l3899:
  2164                           
  2165                           ;main.c: 378:                         LCD_Char('*');
  2166     0F51  302A               	movlw	42
  2167     0F52  120A  158A  21AB  120A  158A  	fcall	_LCD_Char
  2168     0F57                     l3901:
  2169                           
  2170                           ;main.c: 380:                         pass_user[idx++] = key;
  2171     0F57  0879               	movf	_idx,w
  2172     0F58  3EDD               	addlw	(low (_pass_user| 0))& (0+255)
  2173     0F59  0084               	movwf	4
  2174     0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  2175     0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  2176     0F5C  0833               	movf	seguridad@key,w
  2177     0F5D  1383               	bcf	3,7	;select IRP bank1
  2178     0F5E  0080               	movwf	0
  2179     0F5F                     l3903:
  2180     0F5F  3001               	movlw	1
  2181     0F60  07F9               	addwf	_idx,f
  2182     0F61                     l3905:
  2183                           
  2184                           ;main.c: 383:                 }while(idx < 6);
  2185     0F61  3006               	movlw	6
  2186     0F62  0279               	subwf	_idx,w
  2187     0F63  1C03               	skipc
  2188     0F64  2F66               	goto	u4451
  2189     0F65  2F67               	goto	u4450
  2190     0F66                     u4451:
  2191     0F66  2F44               	goto	l324
  2192     0F67                     u4450:
  2193     0F67                     l3907:
  2194                           
  2195                           ;main.c: 385:                 if(strncmp(pass_user,password,4)==0){
  2196     0F67  30DD               	movlw	(low (_pass_user| 0))& (0+255)
  2197     0F68  00F3               	movwf	strncmp@l
  2198     0F69  3001               	movlw	(low ((_password-__stringbase)| (0+32768)))& (0+255)
  2199     0F6A  00F4               	movwf	strncmp@r
  2200     0F6B  3004               	movlw	4
  2201     0F6C  00F5               	movwf	strncmp@n
  2202     0F6D  3000               	movlw	0
  2203     0F6E  00F6               	movwf	strncmp@n+1
  2204     0F6F  120A  158A  22B0  120A  158A  	fcall	_strncmp
  2205     0F74  0873               	movf	?_strncmp,w
  2206     0F75  0474               	iorwf	?_strncmp+1,w
  2207     0F76  1D03               	btfss	3,2
  2208     0F77  2F79               	goto	u4461
  2209     0F78  2F7A               	goto	u4460
  2210     0F79                     u4461:
  2211     0F79  2FA7               	goto	l3919
  2212     0F7A                     u4460:
  2213     0F7A                     l3909:
  2214                           
  2215                           ;main.c: 386:                     LCD_Clear();
  2216     0F7A  160A  118A  2733  120A  158A  	fcall	_LCD_Clear
  2217     0F7F                     l3911:
  2218                           
  2219                           ;main.c: 387:                     LCD_String_xy(0,0,"Clave Correcta");
  2220     0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  2221     0F80  1303               	bcf	3,6	;RP1=0, select bank0
  2222     0F81  01A0               	clrf	LCD_String_xy@pos
  2223     0F82  303A               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2224     0F83  00A1               	movwf	LCD_String_xy@msg
  2225     0F84  3000               	movlw	0
  2226     0F85  120A  158A  2149  120A  158A  	fcall	_LCD_String_xy
  2227     0F8A                     l3913:
  2228                           
  2229                           ;main.c: 388:                     blink_led('V', 500, 500, 3000);
  2230     0F8A  30F4               	movlw	244
  2231     0F8B  1283               	bcf	3,5	;RP0=0, select bank0
  2232     0F8C  1303               	bcf	3,6	;RP1=0, select bank0
  2233     0F8D  00A0               	movwf	blink_led@on_time
  2234     0F8E  3001               	movlw	1
  2235     0F8F  00A1               	movwf	blink_led@on_time+1
  2236     0F90  30F4               	movlw	244
  2237     0F91  00A2               	movwf	blink_led@off_time
  2238     0F92  3001               	movlw	1
  2239     0F93  00A3               	movwf	blink_led@off_time+1
  2240     0F94  30B8               	movlw	184
  2241     0F95  00A4               	movwf	blink_led@duration
  2242     0F96  300B               	movlw	11
  2243     0F97  00A5               	movwf	blink_led@duration+1
  2244     0F98  3056               	movlw	86
  2245     0F99  120A  158A  230C  120A  158A  	fcall	_blink_led
  2246     0F9E                     l3915:
  2247                           
  2248                           ;main.c: 389:                     intentos = 0;
  2249     0F9E  1683               	bsf	3,5	;RP0=1, select bank1
  2250     0F9F  1303               	bcf	3,6	;RP1=0, select bank1
  2251     0FA0  01D6               	clrf	_intentos^(0+128)
  2252     0FA1  01D7               	clrf	(_intentos+1)^(0+128)
  2253     0FA2                     l3917:
  2254                           
  2255                           ;main.c: 390:                     flag_correcto = 1;
  2256     0FA2  3001               	movlw	1
  2257     0FA3  1283               	bcf	3,5	;RP0=0, select bank0
  2258     0FA4  1303               	bcf	3,6	;RP1=0, select bank0
  2259     0FA5  00EF               	movwf	_flag_correcto
  2260                           
  2261                           ;main.c: 391:                 }
  2262     0FA6  2FF9               	goto	l3939
  2263     0FA7                     l3919:
  2264                           
  2265                           ;main.c: 393:                     LCD_Clear();
  2266     0FA7  160A  118A  2733  120A  158A  	fcall	_LCD_Clear
  2267     0FAC                     l3921:
  2268                           
  2269                           ;main.c: 394:                     LCD_String_xy(0,0,"Clave Incorrecta");
  2270     0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  2271     0FAD  1303               	bcf	3,6	;RP1=0, select bank0
  2272     0FAE  01A0               	clrf	LCD_String_xy@pos
  2273     0FAF  3019               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2274     0FB0  00A1               	movwf	LCD_String_xy@msg
  2275     0FB1  3000               	movlw	0
  2276     0FB2  120A  158A  2149  120A  158A  	fcall	_LCD_String_xy
  2277     0FB7                     l3923:
  2278                           
  2279                           ;main.c: 395:                     blink_led('A', 300, 700, 2000);
  2280     0FB7  302C               	movlw	44
  2281     0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  2282     0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  2283     0FBA  00A0               	movwf	blink_led@on_time
  2284     0FBB  3001               	movlw	1
  2285     0FBC  00A1               	movwf	blink_led@on_time+1
  2286     0FBD  30BC               	movlw	188
  2287     0FBE  00A2               	movwf	blink_led@off_time
  2288     0FBF  3002               	movlw	2
  2289     0FC0  00A3               	movwf	blink_led@off_time+1
  2290     0FC1  30D0               	movlw	208
  2291     0FC2  00A4               	movwf	blink_led@duration
  2292     0FC3  3007               	movlw	7
  2293     0FC4  00A5               	movwf	blink_led@duration+1
  2294     0FC5  3041               	movlw	65
  2295     0FC6  120A  158A  230C  120A  158A  	fcall	_blink_led
  2296     0FCB                     l3925:
  2297                           
  2298                           ;main.c: 396:                     intentos = intentos + 1;
  2299     0FCB  1683               	bsf	3,5	;RP0=1, select bank1
  2300     0FCC  1303               	bcf	3,6	;RP1=0, select bank1
  2301     0FCD  0856               	movf	_intentos^(0+128),w
  2302     0FCE  3E01               	addlw	1
  2303     0FCF  00D6               	movwf	_intentos^(0+128)
  2304     0FD0  0857               	movf	(_intentos+1)^(0+128),w
  2305     0FD1  1803               	skipnc
  2306     0FD2  3E01               	addlw	1
  2307     0FD3  3E00               	addlw	0
  2308     0FD4  00D7               	movwf	(_intentos+1)^(0+128)
  2309     0FD5                     l3927:
  2310                           
  2311                           ;main.c: 397:                     flag_correcto = 0;
  2312     0FD5  1283               	bcf	3,5	;RP0=0, select bank0
  2313     0FD6  1303               	bcf	3,6	;RP1=0, select bank0
  2314     0FD7  01EF               	clrf	_flag_correcto
  2315     0FD8                     l3929:
  2316                           
  2317                           ;main.c: 398:                     if(intentos ==3){
  2318     0FD8  3003               	movlw	3
  2319     0FD9  1683               	bsf	3,5	;RP0=1, select bank1
  2320     0FDA  1303               	bcf	3,6	;RP1=0, select bank1
  2321     0FDB  0656               	xorwf	_intentos^(0+128),w
  2322     0FDC  0457               	iorwf	(_intentos+1)^(0+128),w
  2323     0FDD  1D03               	btfss	3,2
  2324     0FDE  2FE0               	goto	u4471
  2325     0FDF  2FE1               	goto	u4470
  2326     0FE0                     u4471:
  2327     0FE0  2FF9               	goto	l3939
  2328     0FE1                     u4470:
  2329     0FE1                     l3931:
  2330                           
  2331                           ;main.c: 399:                         LCD_Clear();
  2332     0FE1  160A  118A  2733  120A  158A  	fcall	_LCD_Clear
  2333     0FE6                     l3933:
  2334                           
  2335                           ;main.c: 400:                         LCD_String_xy(0,0,"sistema bloqueado");
  2336     0FE6  1283               	bcf	3,5	;RP0=0, select bank0
  2337     0FE7  1303               	bcf	3,6	;RP1=0, select bank0
  2338     0FE8  01A0               	clrf	LCD_String_xy@pos
  2339     0FE9  3007               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2340     0FEA  00A1               	movwf	LCD_String_xy@msg
  2341     0FEB  3000               	movlw	0
  2342     0FEC  120A  158A  2149  120A  158A  	fcall	_LCD_String_xy
  2343     0FF1                     l3935:
  2344                           
  2345                           ;main.c: 402:                         flag_correcto = 2;
  2346     0FF1  3002               	movlw	2
  2347     0FF2  1283               	bcf	3,5	;RP0=0, select bank0
  2348     0FF3  1303               	bcf	3,6	;RP1=0, select bank0
  2349     0FF4  00EF               	movwf	_flag_correcto
  2350     0FF5                     l3937:
  2351                           
  2352                           ;main.c: 403:                         intentos = 0;
  2353     0FF5  1683               	bsf	3,5	;RP0=1, select bank1
  2354     0FF6  1303               	bcf	3,6	;RP1=0, select bank1
  2355     0FF7  01D6               	clrf	_intentos^(0+128)
  2356     0FF8  01D7               	clrf	(_intentos+1)^(0+128)
  2357     0FF9                     l3939:
  2358                           
  2359                           ;main.c: 409:                 LCD_Clear();
  2360     0FF9  160A  118A  2733  120A  158A  	fcall	_LCD_Clear
  2361     0FFE                     l3941:
  2362                           
  2363                           ;main.c: 410:                 idx = 0;
  2364     0FFE  01F9               	clrf	_idx
  2365     0FFF                     l330:
  2366     0FFF  0008               	return
  2367     1000                     __end_of_seguridad:
  2368                           
  2369                           	psect	text2
  2370     0AB0                     __ptext2:	
  2371 ;; *************** function _strncmp *****************
  2372 ;; Defined at:
  2373 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strncmp.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;  l               1    3[COMMON] PTR const unsigned char 
  2376 ;;		 -> pass_user(6), 
  2377 ;;  r               1    4[COMMON] PTR const unsigned char 
  2378 ;;		 -> password(6), 
  2379 ;;  n               2    5[COMMON] unsigned int 
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;		None
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  2    3[COMMON] int 
  2384 ;; Registers used:
  2385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2391 ;;      Params:         4       0       0       0       0
  2392 ;;      Locals:         0       0       0       0       0
  2393 ;;      Temps:          0       2       0       0       0
  2394 ;;      Totals:         4       2       0       0       0
  2395 ;;Total ram usage:        6 bytes
  2396 ;; Hardware stack levels used: 2
  2397 ;; Hardware stack levels required when called: 1
  2398 ;; This function calls:
  2399 ;;		Nothing
  2400 ;; This function is called by:
  2401 ;;		_seguridad
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405     0AB0                     _strncmp:	
  2406                           ;psect for function _strncmp
  2407                           
  2408     0AB0                     l3795:	
  2409                           ;incstack = 0
  2410                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  2411                           
  2412     0AB0  3001               	movlw	1
  2413     0AB1  02F5               	subwf	strncmp@n,f
  2414     0AB2  3000               	movlw	0
  2415     0AB3  1C03               	skipc
  2416     0AB4  03F6               	decf	strncmp@n+1,f
  2417     0AB5  02F6               	subwf	strncmp@n+1,f
  2418     0AB6  0A75               	incf	strncmp@n,w
  2419     0AB7  1D03               	skipz
  2420     0AB8  2ABD               	goto	u4221
  2421     0AB9  0A76               	incf	strncmp@n+1,w
  2422     0ABA  1D03               	btfss	3,2
  2423     0ABB  2ABD               	goto	u4221
  2424     0ABC  2ABE               	goto	u4220
  2425     0ABD                     u4221:
  2426     0ABD  2ACB               	goto	l3805
  2427     0ABE                     u4220:
  2428     0ABE                     l3797:
  2429     0ABE  01F3               	clrf	?_strncmp
  2430     0ABF  01F4               	clrf	?_strncmp+1
  2431     0AC0  2B0B               	goto	l996
  2432     0AC1                     l3801:
  2433     0AC1  3001               	movlw	1
  2434     0AC2  07F3               	addwf	strncmp@l,f
  2435     0AC3  3001               	movlw	1
  2436     0AC4  07F4               	addwf	strncmp@r,f
  2437     0AC5                     l3803:
  2438     0AC5  3001               	movlw	1
  2439     0AC6  02F5               	subwf	strncmp@n,f
  2440     0AC7  3000               	movlw	0
  2441     0AC8  1C03               	skipc
  2442     0AC9  03F6               	decf	strncmp@n+1,f
  2443     0ACA  02F6               	subwf	strncmp@n+1,f
  2444     0ACB                     l3805:
  2445     0ACB  0873               	movf	strncmp@l,w
  2446     0ACC  0084               	movwf	4
  2447     0ACD  1383               	bcf	3,7	;select IRP bank0
  2448     0ACE  0800               	movf	0,w
  2449     0ACF  1903               	btfsc	3,2
  2450     0AD0  2AD2               	goto	u4231
  2451     0AD1  2AD3               	goto	u4230
  2452     0AD2                     u4231:
  2453     0AD2  2AF7               	goto	l3813
  2454     0AD3                     u4230:
  2455     0AD3                     l3807:
  2456     0AD3  0874               	movf	strncmp@r,w
  2457     0AD4  0084               	movwf	4
  2458     0AD5  120A  158A  200A  120A  158A  	fcall	stringdir
  2459     0ADA  3A00               	xorlw	0
  2460     0ADB  1903               	skipnz
  2461     0ADC  2ADE               	goto	u4241
  2462     0ADD  2ADF               	goto	u4240
  2463     0ADE                     u4241:
  2464     0ADE  2AF7               	goto	l3813
  2465     0ADF                     u4240:
  2466     0ADF                     l3809:
  2467     0ADF  0875               	movf	strncmp@n,w
  2468     0AE0  0476               	iorwf	strncmp@n+1,w
  2469     0AE1  1903               	btfsc	3,2
  2470     0AE2  2AE4               	goto	u4251
  2471     0AE3  2AE5               	goto	u4250
  2472     0AE4                     u4251:
  2473     0AE4  2AF7               	goto	l3813
  2474     0AE5                     u4250:
  2475     0AE5                     l3811:
  2476     0AE5  0874               	movf	strncmp@r,w
  2477     0AE6  0084               	movwf	4
  2478     0AE7  120A  158A  200A  120A  158A  	fcall	stringdir
  2479     0AEC  1283               	bcf	3,5	;RP0=0, select bank0
  2480     0AED  1303               	bcf	3,6	;RP1=0, select bank0
  2481     0AEE  00A0               	movwf	??_strncmp
  2482     0AEF  0873               	movf	strncmp@l,w
  2483     0AF0  0084               	movwf	4
  2484     0AF1  0800               	movf	0,w
  2485     0AF2  0620               	xorwf	??_strncmp,w
  2486     0AF3  1903               	skipnz
  2487     0AF4  2AF6               	goto	u4261
  2488     0AF5  2AF7               	goto	u4260
  2489     0AF6                     u4261:
  2490     0AF6  2AC1               	goto	l3801
  2491     0AF7                     u4260:
  2492     0AF7                     l3813:
  2493     0AF7  0874               	movf	strncmp@r,w
  2494     0AF8  0084               	movwf	4
  2495     0AF9  120A  158A  200A  120A  158A  	fcall	stringdir
  2496     0AFE  1283               	bcf	3,5	;RP0=0, select bank0
  2497     0AFF  1303               	bcf	3,6	;RP1=0, select bank0
  2498     0B00  00A0               	movwf	??_strncmp
  2499     0B01  0873               	movf	strncmp@l,w
  2500     0B02  0084               	movwf	4
  2501     0B03  0800               	movf	0,w
  2502     0B04  00A1               	movwf	??_strncmp+1
  2503     0B05  0820               	movf	??_strncmp,w
  2504     0B06  0221               	subwf	??_strncmp+1,w
  2505     0B07  00F3               	movwf	?_strncmp
  2506     0B08  01F4               	clrf	?_strncmp+1
  2507     0B09  1C03               	skipc
  2508     0B0A  03F4               	decf	?_strncmp+1,f
  2509     0B0B                     l996:
  2510     0B0B  0008               	return
  2511     0B0C                     __end_of_strncmp:
  2512                           
  2513                           	psect	text3
  2514     069C                     __ptext3:	
  2515 ;; *************** function _keypad_getkey *****************
  2516 ;; Defined at:
  2517 ;;		line 57 in file "KEYPAD.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;		None
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;  letras         16    0[BANK0 ] unsigned char [4][4]
  2522 ;;  i               2   17[BANK0 ] int 
  2523 ;;  valor           1   16[BANK0 ] unsigned char 
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  1    wreg      unsigned char 
  2526 ;; Registers used:
  2527 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2533 ;;      Params:         0       0       0       0       0
  2534 ;;      Locals:         0      19       0       0       0
  2535 ;;      Temps:          4       0       0       0       0
  2536 ;;      Totals:         4      19       0       0       0
  2537 ;;Total ram usage:       23 bytes
  2538 ;; Hardware stack levels used: 1
  2539 ;; Hardware stack levels required when called: 1
  2540 ;; This function calls:
  2541 ;;		Nothing
  2542 ;; This function is called by:
  2543 ;;		_seguridad
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547     069C                     _keypad_getkey:	
  2548                           ;psect for function _keypad_getkey
  2549                           
  2550     069C                     l3621:	
  2551                           ;incstack = 0
  2552                           ; Regs used in _keypad_getkey: [wreg-fsr0h+status,2+status,0+btemp+1]
  2553                           
  2554                           
  2555                           ;KEYPAD.c: 59: char letras[4][4]={ {'1','2','3','A'},
  2556     069C  30B0               	movlw	keypad_getkey@F1424& (0+255)
  2557     069D  0084               	movwf	4
  2558     069E  3020               	movlw	low keypad_getkey@letras
  2559     069F  00F3               	movwf	??_keypad_getkey
  2560     06A0  3010               	movlw	16
  2561     06A1  00F4               	movwf	??_keypad_getkey+1
  2562     06A2                     u3920:
  2563     06A2  1783               	bsf	3,7	;select IRP bank3
  2564     06A3  0800               	movf	0,w
  2565     06A4  00F5               	movwf	??_keypad_getkey+2
  2566     06A5  0A04               	incf	4,w
  2567     06A6  00F6               	movwf	??_keypad_getkey+3
  2568     06A7  0873               	movf	??_keypad_getkey,w
  2569     06A8  0084               	movwf	4
  2570     06A9  1383               	bcf	3,7	;select IRP bank0
  2571     06AA  0875               	movf	??_keypad_getkey+2,w
  2572     06AB  0080               	movwf	0
  2573     06AC  0A04               	incf	4,w
  2574     06AD  00F3               	movwf	??_keypad_getkey
  2575     06AE  0876               	movf	??_keypad_getkey+3,w
  2576     06AF  0084               	movwf	4
  2577     06B0  0BF4               	decfsz	??_keypad_getkey+1,f
  2578     06B1  2EA2               	goto	u3920
  2579     06B2                     l3623:
  2580     06B2                     l3625:
  2581                           
  2582                           ;KEYPAD.c: 64: char valor=0;
  2583     06B2  1283               	bcf	3,5	;RP0=0, select bank0
  2584     06B3  1303               	bcf	3,6	;RP1=0, select bank0
  2585     06B4  01B0               	clrf	keypad_getkey@valor
  2586     06B5                     l3627:
  2587                           
  2588                           ;KEYPAD.c: 66: for(i=0;i<4;i++){
  2589     06B5  01B1               	clrf	keypad_getkey@i
  2590     06B6  01B2               	clrf	keypad_getkey@i+1
  2591     06B7                     l3633:
  2592                           
  2593                           ;KEYPAD.c: 68:    if(i==0){
  2594     06B7  1283               	bcf	3,5	;RP0=0, select bank0
  2595     06B8  1303               	bcf	3,6	;RP1=0, select bank0
  2596     06B9  0831               	movf	keypad_getkey@i,w
  2597     06BA  0432               	iorwf	keypad_getkey@i+1,w
  2598     06BB  1D03               	btfss	3,2
  2599     06BC  2EBE               	goto	u3931
  2600     06BD  2EBF               	goto	u3930
  2601     06BE                     u3931:
  2602     06BE  2EE4               	goto	l3655
  2603     06BF                     u3930:
  2604     06BF                     l3635:
  2605                           
  2606                           ;KEYPAD.c: 70:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(1<<1)|(0<<0);
  2607     06BF  30FE               	movlw	254
  2608     06C0  0086               	movwf	6	;volatile
  2609     06C1                     l3637:
  2610                           
  2611                           ;KEYPAD.c: 71:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  2612     06C1  3042               	movlw	66
  2613     06C2  00F3               	movwf	??_keypad_getkey
  2614     06C3                     u4707:
  2615     06C3  0BF3               	decfsz	??_keypad_getkey,f
  2616     06C4  2EC3               	goto	u4707
  2617     06C5  0000               	nop
  2618                           
  2619                           ;KEYPAD.c: 72:       while (!(PORTB & (1<<4))){valor=letras[0][0];}
  2620     06C6  2EC9               	goto	l3641
  2621     06C7                     l3639:
  2622     06C7  0820               	movf	keypad_getkey@letras,w
  2623     06C8  00B0               	movwf	keypad_getkey@valor
  2624     06C9                     l3641:
  2625     06C9  1283               	bcf	3,5	;RP0=0, select bank0
  2626     06CA  1303               	bcf	3,6	;RP1=0, select bank0
  2627     06CB  1E06               	btfss	6,4	;volatile
  2628     06CC  2ECE               	goto	u3941
  2629     06CD  2ECF               	goto	u3940
  2630     06CE                     u3941:
  2631     06CE  2EC7               	goto	l3639
  2632     06CF                     u3940:
  2633     06CF  2ED2               	goto	l3645
  2634     06D0                     l3643:
  2635     06D0  0821               	movf	keypad_getkey@letras+1,w
  2636     06D1  00B0               	movwf	keypad_getkey@valor
  2637     06D2                     l3645:
  2638     06D2  1E86               	btfss	6,5	;volatile
  2639     06D3  2ED5               	goto	u3951
  2640     06D4  2ED6               	goto	u3950
  2641     06D5                     u3951:
  2642     06D5  2ED0               	goto	l3643
  2643     06D6                     u3950:
  2644     06D6  2ED9               	goto	l3649
  2645     06D7                     l3647:
  2646     06D7  0822               	movf	keypad_getkey@letras+2,w
  2647     06D8  00B0               	movwf	keypad_getkey@valor
  2648     06D9                     l3649:
  2649     06D9  1F06               	btfss	6,6	;volatile
  2650     06DA  2EDC               	goto	u3961
  2651     06DB  2EDD               	goto	u3960
  2652     06DC                     u3961:
  2653     06DC  2ED7               	goto	l3647
  2654     06DD                     u3960:
  2655     06DD  2EE0               	goto	l3653
  2656     06DE                     l3651:
  2657     06DE  0823               	movf	keypad_getkey@letras+3,w
  2658     06DF  00B0               	movwf	keypad_getkey@valor
  2659     06E0                     l3653:
  2660     06E0  1F86               	btfss	6,7	;volatile
  2661     06E1  2EE3               	goto	u3971
  2662     06E2  2EE4               	goto	u3970
  2663     06E3                     u3971:
  2664     06E3  2EDE               	goto	l3651
  2665     06E4                     u3970:
  2666     06E4                     l3655:
  2667                           
  2668                           ;KEYPAD.c: 78:    if(i==1){
  2669     06E4  0331               	decf	keypad_getkey@i,w
  2670     06E5  0432               	iorwf	keypad_getkey@i+1,w
  2671     06E6  1D03               	btfss	3,2
  2672     06E7  2EE9               	goto	u3981
  2673     06E8  2EEA               	goto	u3980
  2674     06E9                     u3981:
  2675     06E9  2F0F               	goto	l3677
  2676     06EA                     u3980:
  2677     06EA                     l3657:
  2678                           
  2679                           ;KEYPAD.c: 79:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(0<<1)|(1<<0);
  2680     06EA  30FD               	movlw	253
  2681     06EB  0086               	movwf	6	;volatile
  2682     06EC                     l3659:
  2683                           
  2684                           ;KEYPAD.c: 80:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  2685     06EC  3042               	movlw	66
  2686     06ED  00F3               	movwf	??_keypad_getkey
  2687     06EE                     u4717:
  2688     06EE  0BF3               	decfsz	??_keypad_getkey,f
  2689     06EF  2EEE               	goto	u4717
  2690     06F0  0000               	nop
  2691                           
  2692                           ;KEYPAD.c: 81:       while (!(PORTB & (1<<4))){valor=letras[1][0];}
  2693     06F1  2EF4               	goto	l3663
  2694     06F2                     l3661:
  2695     06F2  0824               	movf	keypad_getkey@letras+4,w
  2696     06F3  00B0               	movwf	keypad_getkey@valor
  2697     06F4                     l3663:
  2698     06F4  1283               	bcf	3,5	;RP0=0, select bank0
  2699     06F5  1303               	bcf	3,6	;RP1=0, select bank0
  2700     06F6  1E06               	btfss	6,4	;volatile
  2701     06F7  2EF9               	goto	u3991
  2702     06F8  2EFA               	goto	u3990
  2703     06F9                     u3991:
  2704     06F9  2EF2               	goto	l3661
  2705     06FA                     u3990:
  2706     06FA  2EFD               	goto	l3667
  2707     06FB                     l3665:
  2708     06FB  0825               	movf	keypad_getkey@letras+5,w
  2709     06FC  00B0               	movwf	keypad_getkey@valor
  2710     06FD                     l3667:
  2711     06FD  1E86               	btfss	6,5	;volatile
  2712     06FE  2F00               	goto	u4001
  2713     06FF  2F01               	goto	u4000
  2714     0700                     u4001:
  2715     0700  2EFB               	goto	l3665
  2716     0701                     u4000:
  2717     0701  2F04               	goto	l3671
  2718     0702                     l3669:
  2719     0702  0826               	movf	keypad_getkey@letras+6,w
  2720     0703  00B0               	movwf	keypad_getkey@valor
  2721     0704                     l3671:
  2722     0704  1F06               	btfss	6,6	;volatile
  2723     0705  2F07               	goto	u4011
  2724     0706  2F08               	goto	u4010
  2725     0707                     u4011:
  2726     0707  2F02               	goto	l3669
  2727     0708                     u4010:
  2728     0708  2F0B               	goto	l3675
  2729     0709                     l3673:
  2730     0709  0827               	movf	keypad_getkey@letras+7,w
  2731     070A  00B0               	movwf	keypad_getkey@valor
  2732     070B                     l3675:
  2733     070B  1F86               	btfss	6,7	;volatile
  2734     070C  2F0E               	goto	u4021
  2735     070D  2F0F               	goto	u4020
  2736     070E                     u4021:
  2737     070E  2F09               	goto	l3673
  2738     070F                     u4020:
  2739     070F                     l3677:
  2740                           
  2741                           ;KEYPAD.c: 87:    if(i==2){
  2742     070F  3002               	movlw	2
  2743     0710  0631               	xorwf	keypad_getkey@i,w
  2744     0711  0432               	iorwf	keypad_getkey@i+1,w
  2745     0712  1D03               	btfss	3,2
  2746     0713  2F15               	goto	u4031
  2747     0714  2F16               	goto	u4030
  2748     0715                     u4031:
  2749     0715  2F3B               	goto	l3699
  2750     0716                     u4030:
  2751     0716                     l3679:
  2752                           
  2753                           ;KEYPAD.c: 88:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(0<<2)|(1<<1)|(1<<0);
  2754     0716  30FB               	movlw	251
  2755     0717  0086               	movwf	6	;volatile
  2756     0718                     l3681:
  2757                           
  2758                           ;KEYPAD.c: 89:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  2759     0718  3042               	movlw	66
  2760     0719  00F3               	movwf	??_keypad_getkey
  2761     071A                     u4727:
  2762     071A  0BF3               	decfsz	??_keypad_getkey,f
  2763     071B  2F1A               	goto	u4727
  2764     071C  0000               	nop
  2765                           
  2766                           ;KEYPAD.c: 90:       while (!(PORTB & (1<<4))){valor=letras[2][0];}
  2767     071D  2F20               	goto	l3685
  2768     071E                     l3683:
  2769     071E  0828               	movf	keypad_getkey@letras+8,w
  2770     071F  00B0               	movwf	keypad_getkey@valor
  2771     0720                     l3685:
  2772     0720  1283               	bcf	3,5	;RP0=0, select bank0
  2773     0721  1303               	bcf	3,6	;RP1=0, select bank0
  2774     0722  1E06               	btfss	6,4	;volatile
  2775     0723  2F25               	goto	u4041
  2776     0724  2F26               	goto	u4040
  2777     0725                     u4041:
  2778     0725  2F1E               	goto	l3683
  2779     0726                     u4040:
  2780     0726  2F29               	goto	l3689
  2781     0727                     l3687:
  2782     0727  0829               	movf	keypad_getkey@letras+9,w
  2783     0728  00B0               	movwf	keypad_getkey@valor
  2784     0729                     l3689:
  2785     0729  1E86               	btfss	6,5	;volatile
  2786     072A  2F2C               	goto	u4051
  2787     072B  2F2D               	goto	u4050
  2788     072C                     u4051:
  2789     072C  2F27               	goto	l3687
  2790     072D                     u4050:
  2791     072D  2F30               	goto	l3693
  2792     072E                     l3691:
  2793     072E  082A               	movf	keypad_getkey@letras+10,w
  2794     072F  00B0               	movwf	keypad_getkey@valor
  2795     0730                     l3693:
  2796     0730  1F06               	btfss	6,6	;volatile
  2797     0731  2F33               	goto	u4061
  2798     0732  2F34               	goto	u4060
  2799     0733                     u4061:
  2800     0733  2F2E               	goto	l3691
  2801     0734                     u4060:
  2802     0734  2F37               	goto	l3697
  2803     0735                     l3695:
  2804     0735  082B               	movf	keypad_getkey@letras+11,w
  2805     0736  00B0               	movwf	keypad_getkey@valor
  2806     0737                     l3697:
  2807     0737  1F86               	btfss	6,7	;volatile
  2808     0738  2F3A               	goto	u4071
  2809     0739  2F3B               	goto	u4070
  2810     073A                     u4071:
  2811     073A  2F35               	goto	l3695
  2812     073B                     u4070:
  2813     073B                     l3699:
  2814                           
  2815                           ;KEYPAD.c: 96:    if(i==3){
  2816     073B  3003               	movlw	3
  2817     073C  0631               	xorwf	keypad_getkey@i,w
  2818     073D  0432               	iorwf	keypad_getkey@i+1,w
  2819     073E  1D03               	btfss	3,2
  2820     073F  2F41               	goto	u4081
  2821     0740  2F42               	goto	u4080
  2822     0741                     u4081:
  2823     0741  2F67               	goto	l3721
  2824     0742                     u4080:
  2825     0742                     l3701:
  2826                           
  2827                           ;KEYPAD.c: 97:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(0<<3)|(1<<2)|(1<<1)|(1<<0);
  2828     0742  30F7               	movlw	247
  2829     0743  0086               	movwf	6	;volatile
  2830     0744                     l3703:
  2831                           
  2832                           ;KEYPAD.c: 98:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  2833     0744  3042               	movlw	66
  2834     0745  00F3               	movwf	??_keypad_getkey
  2835     0746                     u4737:
  2836     0746  0BF3               	decfsz	??_keypad_getkey,f
  2837     0747  2F46               	goto	u4737
  2838     0748  0000               	nop
  2839                           
  2840                           ;KEYPAD.c: 99:       while (!(PORTB & (1<<4))){valor=letras[3][0];}
  2841     0749  2F4C               	goto	l3707
  2842     074A                     l3705:
  2843     074A  082C               	movf	keypad_getkey@letras+12,w
  2844     074B  00B0               	movwf	keypad_getkey@valor
  2845     074C                     l3707:
  2846     074C  1283               	bcf	3,5	;RP0=0, select bank0
  2847     074D  1303               	bcf	3,6	;RP1=0, select bank0
  2848     074E  1E06               	btfss	6,4	;volatile
  2849     074F  2F51               	goto	u4091
  2850     0750  2F52               	goto	u4090
  2851     0751                     u4091:
  2852     0751  2F4A               	goto	l3705
  2853     0752                     u4090:
  2854     0752  2F55               	goto	l3711
  2855     0753                     l3709:
  2856     0753  082D               	movf	keypad_getkey@letras+13,w
  2857     0754  00B0               	movwf	keypad_getkey@valor
  2858     0755                     l3711:
  2859     0755  1E86               	btfss	6,5	;volatile
  2860     0756  2F58               	goto	u4101
  2861     0757  2F59               	goto	u4100
  2862     0758                     u4101:
  2863     0758  2F53               	goto	l3709
  2864     0759                     u4100:
  2865     0759  2F5C               	goto	l3715
  2866     075A                     l3713:
  2867     075A  082E               	movf	keypad_getkey@letras+14,w
  2868     075B  00B0               	movwf	keypad_getkey@valor
  2869     075C                     l3715:
  2870     075C  1F06               	btfss	6,6	;volatile
  2871     075D  2F5F               	goto	u4111
  2872     075E  2F60               	goto	u4110
  2873     075F                     u4111:
  2874     075F  2F5A               	goto	l3713
  2875     0760                     u4110:
  2876     0760  2F63               	goto	l3719
  2877     0761                     l3717:
  2878     0761  082F               	movf	keypad_getkey@letras+15,w
  2879     0762  00B0               	movwf	keypad_getkey@valor
  2880     0763                     l3719:
  2881     0763  1F86               	btfss	6,7	;volatile
  2882     0764  2F66               	goto	u4121
  2883     0765  2F67               	goto	u4120
  2884     0766                     u4121:
  2885     0766  2F61               	goto	l3717
  2886     0767                     u4120:
  2887     0767                     l3721:
  2888                           
  2889                           ;KEYPAD.c: 104:    }
  2890     0767  3001               	movlw	1
  2891     0768  07B1               	addwf	keypad_getkey@i,f
  2892     0769  1803               	skipnc
  2893     076A  0AB2               	incf	keypad_getkey@i+1,f
  2894     076B  3000               	movlw	0
  2895     076C  07B2               	addwf	keypad_getkey@i+1,f
  2896     076D                     l3723:
  2897     076D  0832               	movf	keypad_getkey@i+1,w
  2898     076E  3A80               	xorlw	128
  2899     076F  00FF               	movwf	btemp+1
  2900     0770  3080               	movlw	128
  2901     0771  027F               	subwf	btemp+1,w
  2902     0772  1D03               	skipz
  2903     0773  2F76               	goto	u4135
  2904     0774  3004               	movlw	4
  2905     0775  0231               	subwf	keypad_getkey@i,w
  2906     0776                     u4135:
  2907     0776  1C03               	skipc
  2908     0777  2F79               	goto	u4131
  2909     0778  2F7A               	goto	u4130
  2910     0779                     u4131:
  2911     0779  2EB7               	goto	l3633
  2912     077A                     u4130:
  2913     077A                     l3725:
  2914                           
  2915                           ;KEYPAD.c: 106:    return valor;
  2916     077A  1283               	bcf	3,5	;RP0=0, select bank0
  2917     077B  1303               	bcf	3,6	;RP1=0, select bank0
  2918     077C  0830               	movf	keypad_getkey@valor,w
  2919     077D                     l89:
  2920     077D  0008               	return
  2921     077E                     __end_of_keypad_getkey:
  2922                           
  2923                           	psect	text4
  2924     0E68                     __ptext4:	
  2925 ;; *************** function _secuencia6 *****************
  2926 ;; Defined at:
  2927 ;;		line 340 in file "main.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;		None
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;  i               2   16[BANK0 ] int 
  2932 ;;  i               2   14[BANK0 ] int 
  2933 ;;  var4            2   28[BANK0 ] volatile unsigned int 
  2934 ;;  var3            2   26[BANK0 ] volatile unsigned int 
  2935 ;;  var34           2   24[BANK0 ] volatile unsigned int 
  2936 ;;  var2            2   22[BANK0 ] volatile unsigned int 
  2937 ;;  var1            2   20[BANK0 ] volatile unsigned int 
  2938 ;;  var12           2   18[BANK0 ] volatile unsigned int 
  2939 ;; Return value:  Size  Location     Type
  2940 ;;                  1    wreg      void 
  2941 ;; Registers used:
  2942 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2948 ;;      Params:         0       0       0       0       0
  2949 ;;      Locals:         0      16       0       0       0
  2950 ;;      Temps:          0       3       0       0       0
  2951 ;;      Totals:         0      19       0       0       0
  2952 ;;Total ram usage:       19 bytes
  2953 ;; Hardware stack levels used: 1
  2954 ;; Hardware stack levels required when called: 3
  2955 ;; This function calls:
  2956 ;;		_blink_led
  2957 ;; This function is called by:
  2958 ;;		_main
  2959 ;; This function uses a non-reentrant model
  2960 ;;
  2961                           
  2962     0E68                     _secuencia6:	
  2963                           ;psect for function _secuencia6
  2964                           
  2965     0E68                     l4059:	
  2966                           ;incstack = 0
  2967                           ; Regs used in _secuencia6: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2968                           
  2969                           
  2970                           ;main.c: 341:     blink_led('R', 300, 500, 8000);
  2971     0E68  302C               	movlw	44
  2972     0E69  1283               	bcf	3,5	;RP0=0, select bank0
  2973     0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  2974     0E6B  00A0               	movwf	blink_led@on_time
  2975     0E6C  3001               	movlw	1
  2976     0E6D  00A1               	movwf	blink_led@on_time+1
  2977     0E6E  30F4               	movlw	244
  2978     0E6F  00A2               	movwf	blink_led@off_time
  2979     0E70  3001               	movlw	1
  2980     0E71  00A3               	movwf	blink_led@off_time+1
  2981     0E72  3040               	movlw	64
  2982     0E73  00A4               	movwf	blink_led@duration
  2983     0E74  301F               	movlw	31
  2984     0E75  00A5               	movwf	blink_led@duration+1
  2985     0E76  3052               	movlw	82
  2986     0E77  120A  158A  230C  120A  158A  	fcall	_blink_led
  2987     0E7C                     l4061:
  2988                           
  2989                           ;main.c: 342: volatile unsigned int var1=0x01,var2=0x80,var12 = 0;
  2990     0E7C  3001               	movlw	1
  2991     0E7D  1283               	bcf	3,5	;RP0=0, select bank0
  2992     0E7E  1303               	bcf	3,6	;RP1=0, select bank0
  2993     0E7F  00B4               	movwf	secuencia6@var1	;volatile
  2994     0E80  3000               	movlw	0
  2995     0E81  00B5               	movwf	secuencia6@var1+1	;volatile
  2996     0E82                     l4063:
  2997     0E82  3080               	movlw	128
  2998     0E83  00B6               	movwf	secuencia6@var2	;volatile
  2999     0E84  3000               	movlw	0
  3000     0E85  00B7               	movwf	secuencia6@var2+1	;volatile
  3001     0E86                     l4065:
  3002     0E86  01B2               	clrf	secuencia6@var12	;volatile
  3003     0E87  01B3               	clrf	secuencia6@var12+1	;volatile
  3004     0E88                     l4067:
  3005                           
  3006                           ;main.c: 343:     for (int i = 1; i < 5; i++) {
  3007     0E88  3001               	movlw	1
  3008     0E89  00AE               	movwf	secuencia6@i
  3009     0E8A  3000               	movlw	0
  3010     0E8B  00AF               	movwf	secuencia6@i+1
  3011     0E8C                     l4073:
  3012                           
  3013                           ;main.c: 345:             var12 = var2 | var1;
  3014     0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  3015     0E8D  1303               	bcf	3,6	;RP1=0, select bank0
  3016     0E8E  0834               	movf	secuencia6@var1,w	;volatile
  3017     0E8F  0436               	iorwf	secuencia6@var2,w	;volatile
  3018     0E90  00B2               	movwf	secuencia6@var12	;volatile
  3019     0E91  0835               	movf	secuencia6@var1+1,w	;volatile
  3020     0E92  0437               	iorwf	secuencia6@var2+1,w	;volatile
  3021     0E93  00B3               	movwf	secuencia6@var12+1	;volatile
  3022                           
  3023                           ;main.c: 346:             PORTD = (unsigned char)(var12);
  3024     0E94  0832               	movf	secuencia6@var12,w	;volatile
  3025     0E95  0088               	movwf	8	;volatile
  3026                           
  3027                           ;main.c: 347:              _delay((unsigned long)((500)*(8000000/4000.0)));
  3028     0E96  3006               	movlw	6
  3029     0E97  1283               	bcf	3,5	;RP0=0, select bank0
  3030     0E98  1303               	bcf	3,6	;RP1=0, select bank0
  3031     0E99  00AD               	movwf	??_secuencia6+2
  3032     0E9A  3013               	movlw	19
  3033     0E9B  00AC               	movwf	??_secuencia6+1
  3034     0E9C  30AD               	movlw	173
  3035     0E9D  00AB               	movwf	??_secuencia6
  3036     0E9E                     u4747:
  3037     0E9E  0BAB               	decfsz	??_secuencia6,f
  3038     0E9F  2E9E               	goto	u4747
  3039     0EA0  0BAC               	decfsz	??_secuencia6+1,f
  3040     0EA1  2E9E               	goto	u4747
  3041     0EA2  0BAD               	decfsz	??_secuencia6+2,f
  3042     0EA3  2E9E               	goto	u4747
  3043     0EA4                     l4075:
  3044                           
  3045                           ;main.c: 348:             var1 = var1 + 2;
  3046     0EA4  1283               	bcf	3,5	;RP0=0, select bank0
  3047     0EA5  1303               	bcf	3,6	;RP1=0, select bank0
  3048     0EA6  0834               	movf	secuencia6@var1,w	;volatile
  3049     0EA7  3E02               	addlw	2
  3050     0EA8  00B4               	movwf	secuencia6@var1	;volatile
  3051     0EA9  0835               	movf	secuencia6@var1+1,w	;volatile
  3052     0EAA  1803               	skipnc
  3053     0EAB  3E01               	addlw	1
  3054     0EAC  3E00               	addlw	0
  3055     0EAD  00B5               	movwf	secuencia6@var1+1	;volatile
  3056     0EAE                     l4077:
  3057                           
  3058                           ;main.c: 349:             var2= var2 >> 1;
  3059     0EAE  0837               	movf	secuencia6@var2+1,w	;volatile
  3060     0EAF  00AC               	movwf	??_secuencia6+1
  3061     0EB0  0836               	movf	secuencia6@var2,w	;volatile
  3062     0EB1  00AB               	movwf	??_secuencia6
  3063     0EB2  1003               	clrc
  3064     0EB3  0CAC               	rrf	??_secuencia6+1,f
  3065     0EB4  0CAB               	rrf	??_secuencia6,f
  3066     0EB5  082B               	movf	??_secuencia6,w
  3067     0EB6  00B6               	movwf	secuencia6@var2	;volatile
  3068     0EB7  082C               	movf	??_secuencia6+1,w
  3069     0EB8  00B7               	movwf	secuencia6@var2+1	;volatile
  3070                           
  3071                           ;main.c: 350:            }
  3072     0EB9  3001               	movlw	1
  3073     0EBA  07AE               	addwf	secuencia6@i,f
  3074     0EBB  1803               	skipnc
  3075     0EBC  0AAF               	incf	secuencia6@i+1,f
  3076     0EBD  3000               	movlw	0
  3077     0EBE  07AF               	addwf	secuencia6@i+1,f
  3078     0EBF                     l4079:
  3079     0EBF  082F               	movf	secuencia6@i+1,w
  3080     0EC0  3A80               	xorlw	128
  3081     0EC1  00FF               	movwf	btemp+1
  3082     0EC2  3080               	movlw	128
  3083     0EC3  027F               	subwf	btemp+1,w
  3084     0EC4  1D03               	skipz
  3085     0EC5  2EC8               	goto	u4555
  3086     0EC6  3005               	movlw	5
  3087     0EC7  022E               	subwf	secuencia6@i,w
  3088     0EC8                     u4555:
  3089     0EC8  1C03               	skipc
  3090     0EC9  2ECB               	goto	u4551
  3091     0ECA  2ECC               	goto	u4550
  3092     0ECB                     u4551:
  3093     0ECB  2E8C               	goto	l4073
  3094     0ECC                     u4550:
  3095     0ECC                     l4081:
  3096                           
  3097                           ;main.c: 351: volatile unsigned int var3=0x09,var4=0x10,var34 = 0;
  3098     0ECC  3009               	movlw	9
  3099     0ECD  1283               	bcf	3,5	;RP0=0, select bank0
  3100     0ECE  1303               	bcf	3,6	;RP1=0, select bank0
  3101     0ECF  00BA               	movwf	secuencia6@var3	;volatile
  3102     0ED0  3000               	movlw	0
  3103     0ED1  00BB               	movwf	secuencia6@var3+1	;volatile
  3104     0ED2  3010               	movlw	16
  3105     0ED3  00BC               	movwf	secuencia6@var4	;volatile
  3106     0ED4  3000               	movlw	0
  3107     0ED5  00BD               	movwf	secuencia6@var4+1	;volatile
  3108     0ED6                     l4083:
  3109     0ED6  01B8               	clrf	secuencia6@var34	;volatile
  3110     0ED7  01B9               	clrf	secuencia6@var34+1	;volatile
  3111     0ED8                     l4085:
  3112                           
  3113                           ;main.c: 352:     var34 = var4 | var3;
  3114     0ED8  083A               	movf	secuencia6@var3,w	;volatile
  3115     0ED9  043C               	iorwf	secuencia6@var4,w	;volatile
  3116     0EDA  00B8               	movwf	secuencia6@var34	;volatile
  3117     0EDB  083B               	movf	secuencia6@var3+1,w	;volatile
  3118     0EDC  043D               	iorwf	secuencia6@var4+1,w	;volatile
  3119     0EDD  00B9               	movwf	secuencia6@var34+1	;volatile
  3120     0EDE                     l4087:
  3121                           
  3122                           ;main.c: 353:     PORTD = (unsigned char)(var34);
  3123     0EDE  0838               	movf	secuencia6@var34,w	;volatile
  3124     0EDF  0088               	movwf	8	;volatile
  3125     0EE0                     l4089:
  3126                           
  3127                           ;main.c: 354:      _delay((unsigned long)((500)*(8000000/4000.0)));
  3128     0EE0  3006               	movlw	6
  3129     0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  3130     0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  3131     0EE3  00AD               	movwf	??_secuencia6+2
  3132     0EE4  3013               	movlw	19
  3133     0EE5  00AC               	movwf	??_secuencia6+1
  3134     0EE6  30AD               	movlw	173
  3135     0EE7  00AB               	movwf	??_secuencia6
  3136     0EE8                     u4757:
  3137     0EE8  0BAB               	decfsz	??_secuencia6,f
  3138     0EE9  2EE8               	goto	u4757
  3139     0EEA  0BAC               	decfsz	??_secuencia6+1,f
  3140     0EEB  2EE8               	goto	u4757
  3141     0EEC  0BAD               	decfsz	??_secuencia6+2,f
  3142     0EED  2EE8               	goto	u4757
  3143                           
  3144                           ;main.c: 355:     for (int i = 0; i < 3; i++){
  3145     0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  3146     0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  3147     0EF0  01B0               	clrf	secuencia6@i_495
  3148     0EF1  01B1               	clrf	secuencia6@i_495+1
  3149     0EF2                     l4095:
  3150                           
  3151                           ;main.c: 356:         var3= var3 + 2;
  3152     0EF2  1283               	bcf	3,5	;RP0=0, select bank0
  3153     0EF3  1303               	bcf	3,6	;RP1=0, select bank0
  3154     0EF4  083A               	movf	secuencia6@var3,w	;volatile
  3155     0EF5  3E02               	addlw	2
  3156     0EF6  00BA               	movwf	secuencia6@var3	;volatile
  3157     0EF7  083B               	movf	secuencia6@var3+1,w	;volatile
  3158     0EF8  1803               	skipnc
  3159     0EF9  3E01               	addlw	1
  3160     0EFA  3E00               	addlw	0
  3161     0EFB  00BB               	movwf	secuencia6@var3+1	;volatile
  3162     0EFC                     l4097:
  3163                           
  3164                           ;main.c: 357:         var4= var4 << 1;
  3165     0EFC  1003               	clrc
  3166     0EFD  0D3C               	rlf	secuencia6@var4,w	;volatile
  3167     0EFE  00BC               	movwf	secuencia6@var4	;volatile
  3168     0EFF  0D3D               	rlf	secuencia6@var4+1,w	;volatile
  3169     0F00  00BD               	movwf	secuencia6@var4+1	;volatile
  3170     0F01                     l4099:
  3171                           
  3172                           ;main.c: 358:         var34 = var4 | var3;
  3173     0F01  083A               	movf	secuencia6@var3,w	;volatile
  3174     0F02  043C               	iorwf	secuencia6@var4,w	;volatile
  3175     0F03  00B8               	movwf	secuencia6@var34	;volatile
  3176     0F04  083B               	movf	secuencia6@var3+1,w	;volatile
  3177     0F05  043D               	iorwf	secuencia6@var4+1,w	;volatile
  3178     0F06  00B9               	movwf	secuencia6@var34+1	;volatile
  3179     0F07                     l4101:
  3180                           
  3181                           ;main.c: 359:         PORTD = (unsigned char)(var34);
  3182     0F07  0838               	movf	secuencia6@var34,w	;volatile
  3183     0F08  0088               	movwf	8	;volatile
  3184     0F09                     l4103:
  3185                           
  3186                           ;main.c: 360:          _delay((unsigned long)((500)*(8000000/4000.0)));
  3187     0F09  3006               	movlw	6
  3188     0F0A  1283               	bcf	3,5	;RP0=0, select bank0
  3189     0F0B  1303               	bcf	3,6	;RP1=0, select bank0
  3190     0F0C  00AD               	movwf	??_secuencia6+2
  3191     0F0D  3013               	movlw	19
  3192     0F0E  00AC               	movwf	??_secuencia6+1
  3193     0F0F  30AD               	movlw	173
  3194     0F10  00AB               	movwf	??_secuencia6
  3195     0F11                     u4767:
  3196     0F11  0BAB               	decfsz	??_secuencia6,f
  3197     0F12  2F11               	goto	u4767
  3198     0F13  0BAC               	decfsz	??_secuencia6+1,f
  3199     0F14  2F11               	goto	u4767
  3200     0F15  0BAD               	decfsz	??_secuencia6+2,f
  3201     0F16  2F11               	goto	u4767
  3202     0F17                     l4105:
  3203                           
  3204                           ;main.c: 361:     }
  3205     0F17  3001               	movlw	1
  3206     0F18  1283               	bcf	3,5	;RP0=0, select bank0
  3207     0F19  1303               	bcf	3,6	;RP1=0, select bank0
  3208     0F1A  07B0               	addwf	secuencia6@i_495,f
  3209     0F1B  1803               	skipnc
  3210     0F1C  0AB1               	incf	secuencia6@i_495+1,f
  3211     0F1D  3000               	movlw	0
  3212     0F1E  07B1               	addwf	secuencia6@i_495+1,f
  3213     0F1F                     l4107:
  3214     0F1F  0831               	movf	secuencia6@i_495+1,w
  3215     0F20  3A80               	xorlw	128
  3216     0F21  00FF               	movwf	btemp+1
  3217     0F22  3080               	movlw	128
  3218     0F23  027F               	subwf	btemp+1,w
  3219     0F24  1D03               	skipz
  3220     0F25  2F28               	goto	u4565
  3221     0F26  3003               	movlw	3
  3222     0F27  0230               	subwf	secuencia6@i_495,w
  3223     0F28                     u4565:
  3224     0F28  1C03               	skipc
  3225     0F29  2F2B               	goto	u4561
  3226     0F2A  2F2C               	goto	u4560
  3227     0F2B                     u4561:
  3228     0F2B  2EF2               	goto	l4095
  3229     0F2C                     u4560:
  3230     0F2C                     l321:
  3231     0F2C  0008               	return
  3232     0F2D                     __end_of_secuencia6:
  3233                           
  3234                           	psect	text5
  3235     0B0C                     __ptext5:	
  3236 ;; *************** function _blink_led *****************
  3237 ;; Defined at:
  3238 ;;		line 313 in file "main.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;  led             1    wreg     unsigned char 
  3241 ;;  on_time         2    0[BANK0 ] unsigned int 
  3242 ;;  off_time        2    2[BANK0 ] unsigned int 
  3243 ;;  duration        2    4[BANK0 ] unsigned int 
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;  led             1   10[BANK0 ] unsigned char 
  3246 ;;  elapsed_time    2    8[BANK0 ] unsigned int 
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  1    wreg      void 
  3249 ;; Registers used:
  3250 ;;		wreg, status,2, status,0, pclath, cstack
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3256 ;;      Params:         0       6       0       0       0
  3257 ;;      Locals:         0       3       0       0       0
  3258 ;;      Temps:          0       2       0       0       0
  3259 ;;      Totals:         0      11       0       0       0
  3260 ;;Total ram usage:       11 bytes
  3261 ;; Hardware stack levels used: 1
  3262 ;; Hardware stack levels required when called: 2
  3263 ;; This function calls:
  3264 ;;		_delay_ms_variable
  3265 ;; This function is called by:
  3266 ;;		_secuencia6
  3267 ;;		_seguridad
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271     0B0C                     _blink_led:	
  3272                           ;psect for function _blink_led
  3273                           
  3274                           
  3275                           ;incstack = 0
  3276                           ; Regs used in _blink_led: [wreg+status,2+status,0+pclath+cstack]
  3277                           ;blink_led@led stored from wreg
  3278     0B0C  1283               	bcf	3,5	;RP0=0, select bank0
  3279     0B0D  1303               	bcf	3,6	;RP1=0, select bank0
  3280     0B0E  00AA               	movwf	blink_led@led
  3281     0B0F                     l3761:
  3282                           
  3283                           ;main.c: 314:     unsigned int elapsed_time = 0;
  3284     0B0F  01A8               	clrf	blink_led@elapsed_time
  3285     0B10  01A9               	clrf	blink_led@elapsed_time+1
  3286                           
  3287                           ;main.c: 316:     while (elapsed_time < duration) {
  3288     0B11  2B64               	goto	l3793
  3289     0B12                     l3763:
  3290                           
  3291                           ;main.c: 317:         if (led == 'V') {
  3292     0B12  3056               	movlw	86
  3293     0B13  062A               	xorwf	blink_led@led,w
  3294     0B14  1D03               	btfss	3,2
  3295     0B15  2B17               	goto	u4151
  3296     0B16  2B18               	goto	u4150
  3297     0B17                     u4151:
  3298     0B17  2B1A               	goto	l3767
  3299     0B18                     u4150:
  3300     0B18                     l3765:
  3301                           
  3302                           ;main.c: 318:             PORTEbits.RE0 = 1;
  3303     0B18  1409               	bsf	9,0	;volatile
  3304                           
  3305                           ;main.c: 319:         } else if (led == 'A') {
  3306     0B19  2B29               	goto	l3775
  3307     0B1A                     l3767:
  3308     0B1A  3041               	movlw	65
  3309     0B1B  062A               	xorwf	blink_led@led,w
  3310     0B1C  1D03               	btfss	3,2
  3311     0B1D  2B1F               	goto	u4161
  3312     0B1E  2B20               	goto	u4160
  3313     0B1F                     u4161:
  3314     0B1F  2B22               	goto	l3771
  3315     0B20                     u4160:
  3316     0B20                     l3769:
  3317                           
  3318                           ;main.c: 320:             PORTEbits.RE1 = 1;
  3319     0B20  1489               	bsf	9,1	;volatile
  3320                           
  3321                           ;main.c: 321:         } else if (led == 'R') {
  3322     0B21  2B29               	goto	l3775
  3323     0B22                     l3771:
  3324     0B22  3052               	movlw	82
  3325     0B23  062A               	xorwf	blink_led@led,w
  3326     0B24  1D03               	btfss	3,2
  3327     0B25  2B27               	goto	u4171
  3328     0B26  2B28               	goto	u4170
  3329     0B27                     u4171:
  3330     0B27  2B29               	goto	l3775
  3331     0B28                     u4170:
  3332     0B28                     l3773:
  3333                           
  3334                           ;main.c: 322:             PORTEbits.RE2 = 1;
  3335     0B28  1509               	bsf	9,2	;volatile
  3336     0B29                     l3775:
  3337                           
  3338                           ;main.c: 324:         delay_ms_variable(on_time);
  3339     0B29  0821               	movf	blink_led@on_time+1,w
  3340     0B2A  00F4               	movwf	delay_ms_variable@ms+1
  3341     0B2B  0820               	movf	blink_led@on_time,w
  3342     0B2C  00F3               	movwf	delay_ms_variable@ms
  3343     0B2D  160A  118A  2779  120A  158A  	fcall	_delay_ms_variable
  3344     0B32                     l3777:
  3345                           
  3346                           ;main.c: 327:         if (led == 'V') {
  3347     0B32  3056               	movlw	86
  3348     0B33  1283               	bcf	3,5	;RP0=0, select bank0
  3349     0B34  1303               	bcf	3,6	;RP1=0, select bank0
  3350     0B35  062A               	xorwf	blink_led@led,w
  3351     0B36  1D03               	btfss	3,2
  3352     0B37  2B39               	goto	u4181
  3353     0B38  2B3A               	goto	u4180
  3354     0B39                     u4181:
  3355     0B39  2B3C               	goto	l3781
  3356     0B3A                     u4180:
  3357     0B3A                     l3779:
  3358                           
  3359                           ;main.c: 328:             PORTEbits.RE0 = 0;
  3360     0B3A  1009               	bcf	9,0	;volatile
  3361                           
  3362                           ;main.c: 329:         } else if (led == 'A') {
  3363     0B3B  2B4B               	goto	l3789
  3364     0B3C                     l3781:
  3365     0B3C  3041               	movlw	65
  3366     0B3D  062A               	xorwf	blink_led@led,w
  3367     0B3E  1D03               	btfss	3,2
  3368     0B3F  2B41               	goto	u4191
  3369     0B40  2B42               	goto	u4190
  3370     0B41                     u4191:
  3371     0B41  2B44               	goto	l3785
  3372     0B42                     u4190:
  3373     0B42                     l3783:
  3374                           
  3375                           ;main.c: 330:             PORTEbits.RE1 = 0;
  3376     0B42  1089               	bcf	9,1	;volatile
  3377                           
  3378                           ;main.c: 331:         } else if (led == 'R') {
  3379     0B43  2B4B               	goto	l3789
  3380     0B44                     l3785:
  3381     0B44  3052               	movlw	82
  3382     0B45  062A               	xorwf	blink_led@led,w
  3383     0B46  1D03               	btfss	3,2
  3384     0B47  2B49               	goto	u4201
  3385     0B48  2B4A               	goto	u4200
  3386     0B49                     u4201:
  3387     0B49  2B4B               	goto	l3789
  3388     0B4A                     u4200:
  3389     0B4A                     l3787:
  3390                           
  3391                           ;main.c: 332:             PORTEbits.RE2 = 0;
  3392     0B4A  1109               	bcf	9,2	;volatile
  3393     0B4B                     l3789:
  3394                           
  3395                           ;main.c: 334:         delay_ms_variable(off_time);
  3396     0B4B  0823               	movf	blink_led@off_time+1,w
  3397     0B4C  00F4               	movwf	delay_ms_variable@ms+1
  3398     0B4D  0822               	movf	blink_led@off_time,w
  3399     0B4E  00F3               	movwf	delay_ms_variable@ms
  3400     0B4F  160A  118A  2779  120A  158A  	fcall	_delay_ms_variable
  3401     0B54                     l3791:
  3402                           
  3403                           ;main.c: 336:         elapsed_time += on_time + off_time;
  3404     0B54  1283               	bcf	3,5	;RP0=0, select bank0
  3405     0B55  1303               	bcf	3,6	;RP1=0, select bank0
  3406     0B56  0822               	movf	blink_led@off_time,w
  3407     0B57  0720               	addwf	blink_led@on_time,w
  3408     0B58  00A6               	movwf	??_blink_led
  3409     0B59  0823               	movf	blink_led@off_time+1,w
  3410     0B5A  1803               	skipnc
  3411     0B5B  0A23               	incf	blink_led@off_time+1,w
  3412     0B5C  0721               	addwf	blink_led@on_time+1,w
  3413     0B5D  00A7               	movwf	??_blink_led+1
  3414     0B5E  0826               	movf	??_blink_led,w
  3415     0B5F  07A8               	addwf	blink_led@elapsed_time,f
  3416     0B60  1803               	skipnc
  3417     0B61  0AA9               	incf	blink_led@elapsed_time+1,f
  3418     0B62  0827               	movf	??_blink_led+1,w
  3419     0B63  07A9               	addwf	blink_led@elapsed_time+1,f
  3420     0B64                     l3793:
  3421                           
  3422                           ;main.c: 316:     while (elapsed_time < duration) {
  3423     0B64  0825               	movf	blink_led@duration+1,w
  3424     0B65  0229               	subwf	blink_led@elapsed_time+1,w
  3425     0B66  1D03               	skipz
  3426     0B67  2B6A               	goto	u4215
  3427     0B68  0824               	movf	blink_led@duration,w
  3428     0B69  0228               	subwf	blink_led@elapsed_time,w
  3429     0B6A                     u4215:
  3430     0B6A  1C03               	skipc
  3431     0B6B  2B6D               	goto	u4211
  3432     0B6C  2B6E               	goto	u4210
  3433     0B6D                     u4211:
  3434     0B6D  2B12               	goto	l3763
  3435     0B6E                     u4210:
  3436     0B6E                     l314:
  3437     0B6E  0008               	return
  3438     0B6F                     __end_of_blink_led:
  3439                           
  3440                           	psect	text6
  3441     1779                     __ptext6:	
  3442 ;; *************** function _delay_ms_variable *****************
  3443 ;; Defined at:
  3444 ;;		line 76 in file "main.c"
  3445 ;; Parameters:    Size  Location     Type
  3446 ;;  ms              2    3[COMMON] unsigned int 
  3447 ;; Auto vars:     Size  Location     Type
  3448 ;;		None
  3449 ;; Return value:  Size  Location     Type
  3450 ;;                  1    wreg      void 
  3451 ;; Registers used:
  3452 ;;		wreg, status,2, status,0
  3453 ;; Tracked objects:
  3454 ;;		On entry : 0/0
  3455 ;;		On exit  : 0/0
  3456 ;;		Unchanged: 0/0
  3457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3458 ;;      Params:         2       0       0       0       0
  3459 ;;      Locals:         0       0       0       0       0
  3460 ;;      Temps:          2       0       0       0       0
  3461 ;;      Totals:         4       0       0       0       0
  3462 ;;Total ram usage:        4 bytes
  3463 ;; Hardware stack levels used: 1
  3464 ;; Hardware stack levels required when called: 1
  3465 ;; This function calls:
  3466 ;;		Nothing
  3467 ;; This function is called by:
  3468 ;;		_blink_led
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472     1779                     _delay_ms_variable:	
  3473                           ;psect for function _delay_ms_variable
  3474                           
  3475     1779                     l3589:	
  3476                           ;incstack = 0
  3477                           ; Regs used in _delay_ms_variable: [wreg+status,2+status,0]
  3478                           
  3479                           
  3480                           ;main.c: 77:     while (ms--) {
  3481     1779  2F83               	goto	l3593
  3482     177A                     l3591:
  3483                           
  3484                           ;main.c: 78:         _delay((unsigned long)((1)*(8000000/4000.0)));
  3485     177A  3003               	movlw	3
  3486     177B  00F6               	movwf	??_delay_ms_variable+1
  3487     177C  3097               	movlw	151
  3488     177D  00F5               	movwf	??_delay_ms_variable
  3489     177E                     u4777:
  3490     177E  0BF5               	decfsz	??_delay_ms_variable,f
  3491     177F  2F7E               	goto	u4777
  3492     1780  0BF6               	decfsz	??_delay_ms_variable+1,f
  3493     1781  2F7E               	goto	u4777
  3494     1782  2F83               	nop2
  3495     1783                     l3593:
  3496                           
  3497                           ;main.c: 77:     while (ms--) {
  3498     1783  3001               	movlw	1
  3499     1784  02F3               	subwf	delay_ms_variable@ms,f
  3500     1785  3000               	movlw	0
  3501     1786  1C03               	skipc
  3502     1787  03F4               	decf	delay_ms_variable@ms+1,f
  3503     1788  02F4               	subwf	delay_ms_variable@ms+1,f
  3504     1789  0A73               	incf	delay_ms_variable@ms,w
  3505     178A  1D03               	skipz
  3506     178B  2F90               	goto	u3891
  3507     178C  0A74               	incf	delay_ms_variable@ms+1,w
  3508     178D  1D03               	btfss	3,2
  3509     178E  2F90               	goto	u3891
  3510     178F  2F91               	goto	u3890
  3511     1790                     u3891:
  3512     1790  2F7A               	goto	l3591
  3513     1791                     u3890:
  3514     1791                     l245:
  3515     1791  0008               	return
  3516     1792                     __end_of_delay_ms_variable:
  3517                           
  3518                           	psect	text7
  3519     04AB                     __ptext7:	
  3520 ;; *************** function _secuencia5 *****************
  3521 ;; Defined at:
  3522 ;;		line 207 in file "main.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;		None
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;  i               2    9[BANK0 ] int 
  3527 ;;  i               2    7[BANK0 ] int 
  3528 ;;  var3            2   21[BANK0 ] volatile unsigned int 
  3529 ;;  var2            2   19[BANK0 ] volatile unsigned int 
  3530 ;;  var1            2   17[BANK0 ] volatile unsigned int 
  3531 ;;  var4            2   15[BANK0 ] volatile unsigned int 
  3532 ;;  var34           2   13[BANK0 ] volatile unsigned int 
  3533 ;;  var12           2   11[BANK0 ] volatile unsigned int 
  3534 ;; Return value:  Size  Location     Type
  3535 ;;                  1    wreg      void 
  3536 ;; Registers used:
  3537 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3543 ;;      Params:         0       0       0       0       0
  3544 ;;      Locals:         0      16       0       0       0
  3545 ;;      Temps:          0       3       0       0       0
  3546 ;;      Totals:         0      19       0       0       0
  3547 ;;Total ram usage:       19 bytes
  3548 ;; Hardware stack levels used: 1
  3549 ;; Hardware stack levels required when called: 4
  3550 ;; This function calls:
  3551 ;;		_LCD_Clear
  3552 ;;		_LCD_String_xy
  3553 ;; This function is called by:
  3554 ;;		_main
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558     04AB                     _secuencia5:	
  3559                           ;psect for function _secuencia5
  3560                           
  3561     04AB                     l3989:	
  3562                           ;incstack = 0
  3563                           ; Regs used in _secuencia5: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3564                           
  3565                           
  3566                           ;main.c: 208: volatile unsigned int var1=0xA0,var2=0x01,var12 = 0;
  3567     04AB  30A0               	movlw	160
  3568     04AC  1283               	bcf	3,5	;RP0=0, select bank0
  3569     04AD  1303               	bcf	3,6	;RP1=0, select bank0
  3570     04AE  00B1               	movwf	secuencia5@var1	;volatile
  3571     04AF  3000               	movlw	0
  3572     04B0  00B2               	movwf	secuencia5@var1+1	;volatile
  3573     04B1  3001               	movlw	1
  3574     04B2  00B3               	movwf	secuencia5@var2	;volatile
  3575     04B3  3000               	movlw	0
  3576     04B4  00B4               	movwf	secuencia5@var2+1	;volatile
  3577     04B5                     l3991:
  3578     04B5  01AB               	clrf	secuencia5@var12	;volatile
  3579     04B6  01AC               	clrf	secuencia5@var12+1	;volatile
  3580     04B7                     l3993:
  3581                           
  3582                           ;main.c: 209:     LCD_Clear();
  3583     04B7  160A  118A  2733  120A  118A  	fcall	_LCD_Clear
  3584     04BC                     l3995:
  3585                           
  3586                           ;main.c: 210:     LCD_String_xy(0,0,"ALERTA");
  3587     04BC  1283               	bcf	3,5	;RP0=0, select bank0
  3588     04BD  1303               	bcf	3,6	;RP1=0, select bank0
  3589     04BE  01A0               	clrf	LCD_String_xy@pos
  3590     04BF  3084               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  3591     04C0  00A1               	movwf	LCD_String_xy@msg
  3592     04C1  3000               	movlw	0
  3593     04C2  120A  158A  2149  120A  118A  	fcall	_LCD_String_xy
  3594     04C7                     l3997:
  3595                           
  3596                           ;main.c: 212:     for (int i = 0; i < 2; i++) {
  3597     04C7  1283               	bcf	3,5	;RP0=0, select bank0
  3598     04C8  1303               	bcf	3,6	;RP1=0, select bank0
  3599     04C9  01A7               	clrf	secuencia5@i
  3600     04CA  01A8               	clrf	secuencia5@i+1
  3601     04CB                     l4003:
  3602                           
  3603                           ;main.c: 213:         var12 = var1 | var2;
  3604     04CB  1283               	bcf	3,5	;RP0=0, select bank0
  3605     04CC  1303               	bcf	3,6	;RP1=0, select bank0
  3606     04CD  0833               	movf	secuencia5@var2,w	;volatile
  3607     04CE  0431               	iorwf	secuencia5@var1,w	;volatile
  3608     04CF  00AB               	movwf	secuencia5@var12	;volatile
  3609     04D0  0834               	movf	secuencia5@var2+1,w	;volatile
  3610     04D1  0432               	iorwf	secuencia5@var1+1,w	;volatile
  3611     04D2  00AC               	movwf	secuencia5@var12+1	;volatile
  3612                           
  3613                           ;main.c: 214:         PORTD = (unsigned char)(var12);
  3614     04D3  082B               	movf	secuencia5@var12,w	;volatile
  3615     04D4  0088               	movwf	8	;volatile
  3616                           
  3617                           ;main.c: 215:         _delay((unsigned long)((500)*(8000000/4000.0)));
  3618     04D5  3006               	movlw	6
  3619     04D6  1283               	bcf	3,5	;RP0=0, select bank0
  3620     04D7  1303               	bcf	3,6	;RP1=0, select bank0
  3621     04D8  00A6               	movwf	??_secuencia5+2
  3622     04D9  3013               	movlw	19
  3623     04DA  00A5               	movwf	??_secuencia5+1
  3624     04DB  30AD               	movlw	173
  3625     04DC  00A4               	movwf	??_secuencia5
  3626     04DD                     u4787:
  3627     04DD  0BA4               	decfsz	??_secuencia5,f
  3628     04DE  2CDD               	goto	u4787
  3629     04DF  0BA5               	decfsz	??_secuencia5+1,f
  3630     04E0  2CDD               	goto	u4787
  3631     04E1  0BA6               	decfsz	??_secuencia5+2,f
  3632     04E2  2CDD               	goto	u4787
  3633     04E3                     l4005:
  3634                           
  3635                           ;main.c: 216:         var1 = var1 >> 1;
  3636     04E3  1283               	bcf	3,5	;RP0=0, select bank0
  3637     04E4  1303               	bcf	3,6	;RP1=0, select bank0
  3638     04E5  0832               	movf	secuencia5@var1+1,w	;volatile
  3639     04E6  00A5               	movwf	??_secuencia5+1
  3640     04E7  0831               	movf	secuencia5@var1,w	;volatile
  3641     04E8  00A4               	movwf	??_secuencia5
  3642     04E9  1003               	clrc
  3643     04EA  0CA5               	rrf	??_secuencia5+1,f
  3644     04EB  0CA4               	rrf	??_secuencia5,f
  3645     04EC  0824               	movf	??_secuencia5,w
  3646     04ED  00B1               	movwf	secuencia5@var1	;volatile
  3647     04EE  0825               	movf	??_secuencia5+1,w
  3648     04EF  00B2               	movwf	secuencia5@var1+1	;volatile
  3649     04F0                     l4007:
  3650                           
  3651                           ;main.c: 217:         var2 = var2 << 1;
  3652     04F0  1003               	clrc
  3653     04F1  0D33               	rlf	secuencia5@var2,w	;volatile
  3654     04F2  00B3               	movwf	secuencia5@var2	;volatile
  3655     04F3  0D34               	rlf	secuencia5@var2+1,w	;volatile
  3656     04F4  00B4               	movwf	secuencia5@var2+1	;volatile
  3657     04F5                     l4009:
  3658                           
  3659                           ;main.c: 218:         var12 = var1 | var2;
  3660     04F5  0833               	movf	secuencia5@var2,w	;volatile
  3661     04F6  0431               	iorwf	secuencia5@var1,w	;volatile
  3662     04F7  00AB               	movwf	secuencia5@var12	;volatile
  3663     04F8  0834               	movf	secuencia5@var2+1,w	;volatile
  3664     04F9  0432               	iorwf	secuencia5@var1+1,w	;volatile
  3665     04FA  00AC               	movwf	secuencia5@var12+1	;volatile
  3666     04FB                     l4011:
  3667                           
  3668                           ;main.c: 219:         PORTD = (unsigned char)(var12);
  3669     04FB  082B               	movf	secuencia5@var12,w	;volatile
  3670     04FC  0088               	movwf	8	;volatile
  3671     04FD                     l4013:
  3672                           
  3673                           ;main.c: 220:         _delay((unsigned long)((500)*(8000000/4000.0)));
  3674     04FD  3006               	movlw	6
  3675     04FE  1283               	bcf	3,5	;RP0=0, select bank0
  3676     04FF  1303               	bcf	3,6	;RP1=0, select bank0
  3677     0500  00A6               	movwf	??_secuencia5+2
  3678     0501  3013               	movlw	19
  3679     0502  00A5               	movwf	??_secuencia5+1
  3680     0503  30AD               	movlw	173
  3681     0504  00A4               	movwf	??_secuencia5
  3682     0505                     u4797:
  3683     0505  0BA4               	decfsz	??_secuencia5,f
  3684     0506  2D05               	goto	u4797
  3685     0507  0BA5               	decfsz	??_secuencia5+1,f
  3686     0508  2D05               	goto	u4797
  3687     0509  0BA6               	decfsz	??_secuencia5+2,f
  3688     050A  2D05               	goto	u4797
  3689     050B                     l4015:
  3690                           
  3691                           ;main.c: 221:         var12 = var1 | var2;
  3692     050B  1283               	bcf	3,5	;RP0=0, select bank0
  3693     050C  1303               	bcf	3,6	;RP1=0, select bank0
  3694     050D  0833               	movf	secuencia5@var2,w	;volatile
  3695     050E  0431               	iorwf	secuencia5@var1,w	;volatile
  3696     050F  00AB               	movwf	secuencia5@var12	;volatile
  3697     0510  0834               	movf	secuencia5@var2+1,w	;volatile
  3698     0511  0432               	iorwf	secuencia5@var1+1,w	;volatile
  3699     0512  00AC               	movwf	secuencia5@var12+1	;volatile
  3700     0513                     l4017:
  3701                           
  3702                           ;main.c: 222:         var1 = var1 << 1;
  3703     0513  1003               	clrc
  3704     0514  0D31               	rlf	secuencia5@var1,w	;volatile
  3705     0515  00B1               	movwf	secuencia5@var1	;volatile
  3706     0516  0D32               	rlf	secuencia5@var1+1,w	;volatile
  3707     0517  00B2               	movwf	secuencia5@var1+1	;volatile
  3708     0518                     l4019:
  3709                           
  3710                           ;main.c: 223:         var2 = var2 << 1;
  3711     0518  1003               	clrc
  3712     0519  0D33               	rlf	secuencia5@var2,w	;volatile
  3713     051A  00B3               	movwf	secuencia5@var2	;volatile
  3714     051B  0D34               	rlf	secuencia5@var2+1,w	;volatile
  3715     051C  00B4               	movwf	secuencia5@var2+1	;volatile
  3716     051D                     l4021:
  3717                           
  3718                           ;main.c: 225:     }
  3719     051D  3001               	movlw	1
  3720     051E  07A7               	addwf	secuencia5@i,f
  3721     051F  1803               	skipnc
  3722     0520  0AA8               	incf	secuencia5@i+1,f
  3723     0521  3000               	movlw	0
  3724     0522  07A8               	addwf	secuencia5@i+1,f
  3725     0523                     l4023:
  3726     0523  0828               	movf	secuencia5@i+1,w
  3727     0524  3A80               	xorlw	128
  3728     0525  00FF               	movwf	btemp+1
  3729     0526  3080               	movlw	128
  3730     0527  027F               	subwf	btemp+1,w
  3731     0528  1D03               	skipz
  3732     0529  2D2C               	goto	u4525
  3733     052A  3002               	movlw	2
  3734     052B  0227               	subwf	secuencia5@i,w
  3735     052C                     u4525:
  3736     052C  1C03               	skipc
  3737     052D  2D2F               	goto	u4521
  3738     052E  2D30               	goto	u4520
  3739     052F                     u4521:
  3740     052F  2CCB               	goto	l4003
  3741     0530                     u4520:
  3742     0530                     l4025:
  3743                           
  3744                           ;main.c: 227: volatile unsigned int var3=0xA0,var4=0x08,var34 = 0;
  3745     0530  30A0               	movlw	160
  3746     0531  1283               	bcf	3,5	;RP0=0, select bank0
  3747     0532  1303               	bcf	3,6	;RP1=0, select bank0
  3748     0533  00B5               	movwf	secuencia5@var3	;volatile
  3749     0534  3000               	movlw	0
  3750     0535  00B6               	movwf	secuencia5@var3+1	;volatile
  3751     0536  3008               	movlw	8
  3752     0537  00AF               	movwf	secuencia5@var4	;volatile
  3753     0538  3000               	movlw	0
  3754     0539  00B0               	movwf	secuencia5@var4+1	;volatile
  3755     053A                     l4027:
  3756     053A  01AD               	clrf	secuencia5@var34	;volatile
  3757     053B  01AE               	clrf	secuencia5@var34+1	;volatile
  3758     053C                     l4029:
  3759                           
  3760                           ;main.c: 228:     for (int i = 0; i < 2; i++){
  3761     053C  01A9               	clrf	secuencia5@i_453
  3762     053D  01AA               	clrf	secuencia5@i_453+1
  3763     053E                     l4035:
  3764                           
  3765                           ;main.c: 229:         var34 = var3 | var4;
  3766     053E  1283               	bcf	3,5	;RP0=0, select bank0
  3767     053F  1303               	bcf	3,6	;RP1=0, select bank0
  3768     0540  082F               	movf	secuencia5@var4,w	;volatile
  3769     0541  0435               	iorwf	secuencia5@var3,w	;volatile
  3770     0542  00AD               	movwf	secuencia5@var34	;volatile
  3771     0543  0830               	movf	secuencia5@var4+1,w	;volatile
  3772     0544  0436               	iorwf	secuencia5@var3+1,w	;volatile
  3773     0545  00AE               	movwf	secuencia5@var34+1	;volatile
  3774                           
  3775                           ;main.c: 230:         PORTD = (unsigned char)(var34);
  3776     0546  082D               	movf	secuencia5@var34,w	;volatile
  3777     0547  0088               	movwf	8	;volatile
  3778                           
  3779                           ;main.c: 231:         _delay((unsigned long)((500)*(8000000/4000.0)));
  3780     0548  3006               	movlw	6
  3781     0549  1283               	bcf	3,5	;RP0=0, select bank0
  3782     054A  1303               	bcf	3,6	;RP1=0, select bank0
  3783     054B  00A6               	movwf	??_secuencia5+2
  3784     054C  3013               	movlw	19
  3785     054D  00A5               	movwf	??_secuencia5+1
  3786     054E  30AD               	movlw	173
  3787     054F  00A4               	movwf	??_secuencia5
  3788     0550                     u4807:
  3789     0550  0BA4               	decfsz	??_secuencia5,f
  3790     0551  2D50               	goto	u4807
  3791     0552  0BA5               	decfsz	??_secuencia5+1,f
  3792     0553  2D50               	goto	u4807
  3793     0554  0BA6               	decfsz	??_secuencia5+2,f
  3794     0555  2D50               	goto	u4807
  3795     0556                     l4037:
  3796                           
  3797                           ;main.c: 232:         var3 = var3 >> 1;
  3798     0556  1283               	bcf	3,5	;RP0=0, select bank0
  3799     0557  1303               	bcf	3,6	;RP1=0, select bank0
  3800     0558  0836               	movf	secuencia5@var3+1,w	;volatile
  3801     0559  00A5               	movwf	??_secuencia5+1
  3802     055A  0835               	movf	secuencia5@var3,w	;volatile
  3803     055B  00A4               	movwf	??_secuencia5
  3804     055C  1003               	clrc
  3805     055D  0CA5               	rrf	??_secuencia5+1,f
  3806     055E  0CA4               	rrf	??_secuencia5,f
  3807     055F  0824               	movf	??_secuencia5,w
  3808     0560  00B5               	movwf	secuencia5@var3	;volatile
  3809     0561  0825               	movf	??_secuencia5+1,w
  3810     0562  00B6               	movwf	secuencia5@var3+1	;volatile
  3811     0563                     l4039:
  3812                           
  3813                           ;main.c: 233:         var4 = var4 >> 1;
  3814     0563  0830               	movf	secuencia5@var4+1,w	;volatile
  3815     0564  00A5               	movwf	??_secuencia5+1
  3816     0565  082F               	movf	secuencia5@var4,w	;volatile
  3817     0566  00A4               	movwf	??_secuencia5
  3818     0567  1003               	clrc
  3819     0568  0CA5               	rrf	??_secuencia5+1,f
  3820     0569  0CA4               	rrf	??_secuencia5,f
  3821     056A  0824               	movf	??_secuencia5,w
  3822     056B  00AF               	movwf	secuencia5@var4	;volatile
  3823     056C  0825               	movf	??_secuencia5+1,w
  3824     056D  00B0               	movwf	secuencia5@var4+1	;volatile
  3825                           
  3826                           ;main.c: 234:         var34 = var3 | var4;
  3827     056E  082F               	movf	secuencia5@var4,w	;volatile
  3828     056F  0435               	iorwf	secuencia5@var3,w	;volatile
  3829     0570  00AD               	movwf	secuencia5@var34	;volatile
  3830     0571  0830               	movf	secuencia5@var4+1,w	;volatile
  3831     0572  0436               	iorwf	secuencia5@var3+1,w	;volatile
  3832     0573  00AE               	movwf	secuencia5@var34+1	;volatile
  3833                           
  3834                           ;main.c: 235:         PORTD = (unsigned char)(var34);
  3835     0574  082D               	movf	secuencia5@var34,w	;volatile
  3836     0575  0088               	movwf	8	;volatile
  3837                           
  3838                           ;main.c: 236:         _delay((unsigned long)((500)*(8000000/4000.0)));
  3839     0576  3006               	movlw	6
  3840     0577  1283               	bcf	3,5	;RP0=0, select bank0
  3841     0578  1303               	bcf	3,6	;RP1=0, select bank0
  3842     0579  00A6               	movwf	??_secuencia5+2
  3843     057A  3013               	movlw	19
  3844     057B  00A5               	movwf	??_secuencia5+1
  3845     057C  30AD               	movlw	173
  3846     057D  00A4               	movwf	??_secuencia5
  3847     057E                     u4817:
  3848     057E  0BA4               	decfsz	??_secuencia5,f
  3849     057F  2D7E               	goto	u4817
  3850     0580  0BA5               	decfsz	??_secuencia5+1,f
  3851     0581  2D7E               	goto	u4817
  3852     0582  0BA6               	decfsz	??_secuencia5+2,f
  3853     0583  2D7E               	goto	u4817
  3854                           
  3855                           ;main.c: 237:         var34 = var3 | var3;
  3856     0584  1283               	bcf	3,5	;RP0=0, select bank0
  3857     0585  1303               	bcf	3,6	;RP1=0, select bank0
  3858     0586  0835               	movf	secuencia5@var3,w	;volatile
  3859     0587  0435               	iorwf	secuencia5@var3,w	;volatile
  3860     0588  00AD               	movwf	secuencia5@var34	;volatile
  3861     0589  0836               	movf	secuencia5@var3+1,w	;volatile
  3862     058A  0436               	iorwf	secuencia5@var3+1,w	;volatile
  3863     058B  00AE               	movwf	secuencia5@var34+1	;volatile
  3864                           
  3865                           ;main.c: 238:         var3 = var3 << 1;
  3866     058C  1003               	clrc
  3867     058D  0D35               	rlf	secuencia5@var3,w	;volatile
  3868     058E  00B5               	movwf	secuencia5@var3	;volatile
  3869     058F  0D36               	rlf	secuencia5@var3+1,w	;volatile
  3870     0590  00B6               	movwf	secuencia5@var3+1	;volatile
  3871     0591                     l4041:
  3872                           
  3873                           ;main.c: 239:         var4 = var4 >> 1;
  3874     0591  0830               	movf	secuencia5@var4+1,w	;volatile
  3875     0592  00A5               	movwf	??_secuencia5+1
  3876     0593  082F               	movf	secuencia5@var4,w	;volatile
  3877     0594  00A4               	movwf	??_secuencia5
  3878     0595  1003               	clrc
  3879     0596  0CA5               	rrf	??_secuencia5+1,f
  3880     0597  0CA4               	rrf	??_secuencia5,f
  3881     0598  0824               	movf	??_secuencia5,w
  3882     0599  00AF               	movwf	secuencia5@var4	;volatile
  3883     059A  0825               	movf	??_secuencia5+1,w
  3884     059B  00B0               	movwf	secuencia5@var4+1	;volatile
  3885     059C                     l4043:
  3886                           
  3887                           ;main.c: 241:     }
  3888     059C  3001               	movlw	1
  3889     059D  07A9               	addwf	secuencia5@i_453,f
  3890     059E  1803               	skipnc
  3891     059F  0AAA               	incf	secuencia5@i_453+1,f
  3892     05A0  3000               	movlw	0
  3893     05A1  07AA               	addwf	secuencia5@i_453+1,f
  3894     05A2                     l4045:
  3895     05A2  082A               	movf	secuencia5@i_453+1,w
  3896     05A3  3A80               	xorlw	128
  3897     05A4  00FF               	movwf	btemp+1
  3898     05A5  3080               	movlw	128
  3899     05A6  027F               	subwf	btemp+1,w
  3900     05A7  1D03               	skipz
  3901     05A8  2DAB               	goto	u4535
  3902     05A9  3002               	movlw	2
  3903     05AA  0229               	subwf	secuencia5@i_453,w
  3904     05AB                     u4535:
  3905     05AB  1C03               	skipc
  3906     05AC  2DAE               	goto	u4531
  3907     05AD  2DAF               	goto	u4530
  3908     05AE                     u4531:
  3909     05AE  2D3E               	goto	l4035
  3910     05AF                     u4530:
  3911     05AF                     l286:
  3912     05AF  0008               	return
  3913     05B0                     __end_of_secuencia5:
  3914                           
  3915                           	psect	text8
  3916     0D0D                     __ptext8:	
  3917 ;; *************** function _monitoreo *****************
  3918 ;; Defined at:
  3919 ;;		line 245 in file "main.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;		None
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;  StringTemper   20   48[BANK0 ] unsigned char [20]
  3924 ;;  luz             2   74[BANK0 ] unsigned int 
  3925 ;;  value_adc       2   72[BANK0 ] int 
  3926 ;;  temperatura     2   70[BANK0 ] unsigned int 
  3927 ;;  celsius         2   68[BANK0 ] int 
  3928 ;; Return value:  Size  Location     Type
  3929 ;;                  1    wreg      void 
  3930 ;; Registers used:
  3931 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3937 ;;      Params:         0       0       0       0       0
  3938 ;;      Locals:         0      28       0       0       0
  3939 ;;      Temps:          0       2       0       0       0
  3940 ;;      Totals:         0      30       0       0       0
  3941 ;;Total ram usage:       30 bytes
  3942 ;; Hardware stack levels used: 1
  3943 ;; Hardware stack levels required when called: 6
  3944 ;; This function calls:
  3945 ;;		_LCD_Clear
  3946 ;;		_LCD_Command
  3947 ;;		_LCD_String
  3948 ;;		_LCD_String_xy
  3949 ;;		___flmul
  3950 ;;		___fltol
  3951 ;;		___xxtofl
  3952 ;;		_adc_read
  3953 ;;		_sprintf
  3954 ;; This function is called by:
  3955 ;;		_main
  3956 ;; This function uses a non-reentrant model
  3957 ;;
  3958                           
  3959     0D0D                     _monitoreo:	
  3960                           ;psect for function _monitoreo
  3961                           
  3962     0D0D                     l3943:	
  3963                           ;incstack = 0
  3964                           ; Regs used in _monitoreo: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3965                           
  3966                           
  3967                           ;main.c: 247:     int celsius;;main.c: 248:     char StringTemperature[20];;main.c: 250:
      +                               LCD_Clear();
  3968     0D0D  160A  118A  2733  120A  158A  	fcall	_LCD_Clear
  3969     0D12                     l3945:
  3970                           
  3971                           ;main.c: 251:     LCD_String_xy(0,0,"MONITOREO");
  3972     0D12  1283               	bcf	3,5	;RP0=0, select bank0
  3973     0D13  1303               	bcf	3,6	;RP1=0, select bank0
  3974     0D14  01A0               	clrf	LCD_String_xy@pos
  3975     0D15  306B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  3976     0D16  00A1               	movwf	LCD_String_xy@msg
  3977     0D17  3000               	movlw	0
  3978     0D18  120A  158A  2149  120A  158A  	fcall	_LCD_String_xy
  3979     0D1D                     l3947:
  3980                           
  3981                           ;main.c: 252:     LCD_Command(0xC0);
  3982     0D1D  30C0               	movlw	192
  3983     0D1E  120A  158A  2175  120A  158A  	fcall	_LCD_Command
  3984     0D23                     l3949:
  3985                           
  3986                           ;main.c: 254:     unsigned int temperatura = adc_read(3);
  3987     0D23  3003               	movlw	3
  3988     0D24  00F3               	movwf	adc_read@channel
  3989     0D25  3000               	movlw	0
  3990     0D26  00F4               	movwf	adc_read@channel+1
  3991     0D27  120A  158A  21E1  120A  158A  	fcall	_adc_read
  3992     0D2C  0874               	movf	?_adc_read+1,w
  3993     0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  3994     0D2E  1303               	bcf	3,6	;RP1=0, select bank0
  3995     0D2F  00E7               	movwf	monitoreo@temperatura+1
  3996     0D30  0873               	movf	?_adc_read,w
  3997     0D31  00E6               	movwf	monitoreo@temperatura
  3998     0D32                     l3951:
  3999                           
  4000                           ;main.c: 255:     unsigned int luz = adc_read(4);
  4001     0D32  3004               	movlw	4
  4002     0D33  00F3               	movwf	adc_read@channel
  4003     0D34  3000               	movlw	0
  4004     0D35  00F4               	movwf	adc_read@channel+1
  4005     0D36  120A  158A  21E1  120A  158A  	fcall	_adc_read
  4006     0D3B  0874               	movf	?_adc_read+1,w
  4007     0D3C  1283               	bcf	3,5	;RP0=0, select bank0
  4008     0D3D  1303               	bcf	3,6	;RP1=0, select bank0
  4009     0D3E  00EB               	movwf	monitoreo@luz+1
  4010     0D3F  0873               	movf	?_adc_read,w
  4011     0D40  00EA               	movwf	monitoreo@luz
  4012     0D41                     l3953:
  4013                           
  4014                           ;main.c: 261:     int value_adc = 1023 - (int)temperatura;
  4015     0D41  30FF               	movlw	255
  4016     0D42  00CE               	movwf	??_monitoreo
  4017     0D43  3003               	movlw	3
  4018     0D44  00CF               	movwf	??_monitoreo+1
  4019     0D45  0866               	movf	monitoreo@temperatura,w
  4020     0D46  024E               	subwf	??_monitoreo,w
  4021     0D47  00E8               	movwf	monitoreo@value_adc
  4022     0D48  0867               	movf	monitoreo@temperatura+1,w
  4023     0D49  1C03               	skipc
  4024     0D4A  0A67               	incf	monitoreo@temperatura+1,w
  4025     0D4B  024F               	subwf	??_monitoreo+1,w
  4026     0D4C  00E9               	movwf	monitoreo@value_adc+1
  4027     0D4D                     l3955:
  4028                           
  4029                           ;main.c: 262:     celsius = (int)(value_adc * 0.04058);
  4030     0D4D  0868               	movf	monitoreo@value_adc,w
  4031     0D4E  00F3               	movwf	___xxtofl@val
  4032     0D4F  0869               	movf	monitoreo@value_adc+1,w
  4033     0D50  00F4               	movwf	___xxtofl@val+1
  4034     0D51  3000               	movlw	0
  4035     0D52  1BF4               	btfsc	___xxtofl@val+1,7
  4036     0D53  30FF               	movlw	255
  4037     0D54  00F5               	movwf	___xxtofl@val+2
  4038     0D55  00F6               	movwf	___xxtofl@val+3
  4039     0D56  3001               	movlw	1
  4040     0D57  120A  158A  25B2  120A  158A  	fcall	___xxtofl
  4041     0D5C  0876               	movf	?___xxtofl+3,w
  4042     0D5D  1283               	bcf	3,5	;RP0=0, select bank0
  4043     0D5E  1303               	bcf	3,6	;RP1=0, select bank0
  4044     0D5F  00B1               	movwf	___flmul@a+3
  4045     0D60  0875               	movf	?___xxtofl+2,w
  4046     0D61  00B0               	movwf	___flmul@a+2
  4047     0D62  0874               	movf	?___xxtofl+1,w
  4048     0D63  00AF               	movwf	___flmul@a+1
  4049     0D64  0873               	movf	?___xxtofl,w
  4050     0D65  00AE               	movwf	___flmul@a
  4051     0D66  303D               	movlw	61
  4052     0D67  00AD               	movwf	___flmul@b+3
  4053     0D68  3026               	movlw	38
  4054     0D69  00AC               	movwf	___flmul@b+2
  4055     0D6A  3037               	movlw	55
  4056     0D6B  00AB               	movwf	___flmul@b+1
  4057     0D6C  3037               	movlw	55
  4058     0D6D  00AA               	movwf	___flmul@b
  4059     0D6E  120A  118A  2047  120A  158A  	fcall	___flmul
  4060     0D73  1283               	bcf	3,5	;RP0=0, select bank0
  4061     0D74  1303               	bcf	3,6	;RP1=0, select bank0
  4062     0D75  082D               	movf	?___flmul+3,w
  4063     0D76  00C7               	movwf	___fltol@f1+3
  4064     0D77  082C               	movf	?___flmul+2,w
  4065     0D78  00C6               	movwf	___fltol@f1+2
  4066     0D79  082B               	movf	?___flmul+1,w
  4067     0D7A  00C5               	movwf	___fltol@f1+1
  4068     0D7B  082A               	movf	?___flmul,w
  4069     0D7C  00C4               	movwf	___fltol@f1
  4070     0D7D  120A  118A  277E  120A  158A  	fcall	___fltol
  4071     0D82  1283               	bcf	3,5	;RP0=0, select bank0
  4072     0D83  1303               	bcf	3,6	;RP1=0, select bank0
  4073     0D84  0845               	movf	?___fltol+1,w
  4074     0D85  00E5               	movwf	monitoreo@celsius+1
  4075     0D86  0844               	movf	?___fltol,w
  4076     0D87  00E4               	movwf	monitoreo@celsius
  4077     0D88                     l3957:
  4078                           
  4079                           ;main.c: 263:     sprintf(StringTemperature, "T: %d L: %d", celsius, luz);
  4080     0D88  3050               	movlw	(low (monitoreo@StringTemperature| 0))& (0+255)
  4081     0D89  00BA               	movwf	sprintf@s
  4082     0D8A  3049               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  4083     0D8B  00BB               	movwf	sprintf@fmt
  4084     0D8C  0865               	movf	monitoreo@celsius+1,w
  4085     0D8D  00BD               	movwf	?_sprintf+3
  4086     0D8E  0864               	movf	monitoreo@celsius,w
  4087     0D8F  00BC               	movwf	?_sprintf+2
  4088     0D90  086B               	movf	monitoreo@luz+1,w
  4089     0D91  00BF               	movwf	?_sprintf+5
  4090     0D92  086A               	movf	monitoreo@luz,w
  4091     0D93  00BE               	movwf	?_sprintf+4
  4092     0D94  160A  118A  2792  120A  158A  	fcall	_sprintf
  4093     0D99                     l3959:
  4094                           
  4095                           ;main.c: 265:     LCD_String(StringTemperature);
  4096     0D99  3050               	movlw	(low (monitoreo@StringTemperature| 0))& (0+255)
  4097     0D9A  00F6               	movwf	LCD_String@msg
  4098     0D9B  3000               	movlw	0
  4099     0D9C  00F7               	movwf	LCD_String@msg+1
  4100     0D9D  160A  118A  27DA  120A  158A  	fcall	_LCD_String
  4101     0DA2                     l3961:
  4102                           
  4103                           ;main.c: 266:     if(luz > 900){
  4104     0DA2  3003               	movlw	3
  4105     0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  4106     0DA4  1303               	bcf	3,6	;RP1=0, select bank0
  4107     0DA5  026B               	subwf	monitoreo@luz+1,w
  4108     0DA6  3085               	movlw	133
  4109     0DA7  1903               	skipnz
  4110     0DA8  026A               	subwf	monitoreo@luz,w
  4111     0DA9  1C03               	skipc
  4112     0DAA  2DAC               	goto	u4481
  4113     0DAB  2DAD               	goto	u4480
  4114     0DAC                     u4481:
  4115     0DAC  2DB0               	goto	l3965
  4116     0DAD                     u4480:
  4117     0DAD                     l3963:
  4118                           
  4119                           ;main.c: 267:         flag_correcto =4;
  4120     0DAD  3004               	movlw	4
  4121     0DAE  00EF               	movwf	_flag_correcto
  4122                           
  4123                           ;main.c: 268:     }
  4124     0DAF  2DB1               	goto	l291
  4125     0DB0                     l3965:
  4126                           
  4127                           ;main.c: 270:         flag_correcto = 0;
  4128     0DB0  01EF               	clrf	_flag_correcto
  4129     0DB1                     l291:
  4130     0DB1  0008               	return
  4131     0DB2                     __end_of_monitoreo:
  4132                           
  4133                           	psect	text9
  4134     1792                     __ptext9:	
  4135 ;; *************** function _sprintf *****************
  4136 ;; Defined at:
  4137 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;  s               1   26[BANK0 ] PTR unsigned char 
  4140 ;;		 -> monitoreo@StringTemperature(20), 
  4141 ;;  fmt             1   27[BANK0 ] PTR const unsigned char 
  4142 ;;		 -> STR_6(12), 
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;  f              11   34[BANK0 ] struct _IO_FILE
  4145 ;;  ret             2    0        int 
  4146 ;;  ap              1   33[BANK0 ] PTR void [1]
  4147 ;;		 -> ?_sprintf(2), 
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  2   26[BANK0 ] int 
  4150 ;; Registers used:
  4151 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4157 ;;      Params:         0       6       0       0       0
  4158 ;;      Locals:         0      12       0       0       0
  4159 ;;      Temps:          0       1       0       0       0
  4160 ;;      Totals:         0      19       0       0       0
  4161 ;;Total ram usage:       19 bytes
  4162 ;; Hardware stack levels used: 1
  4163 ;; Hardware stack levels required when called: 5
  4164 ;; This function calls:
  4165 ;;		_vfprintf
  4166 ;; This function is called by:
  4167 ;;		_monitoreo
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170                           
  4171     1792                     _sprintf:	
  4172                           ;psect for function _sprintf
  4173                           
  4174     1792                     l3747:	
  4175                           ;incstack = 0
  4176                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4177                           
  4178     1792  303C               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  4179     1793  1283               	bcf	3,5	;RP0=0, select bank0
  4180     1794  1303               	bcf	3,6	;RP1=0, select bank0
  4181     1795  00C1               	movwf	sprintf@ap
  4182     1796                     l3749:
  4183     1796  083A               	movf	sprintf@s,w
  4184     1797  00C2               	movwf	sprintf@f
  4185     1798  3000               	movlw	0
  4186     1799  00C3               	movwf	sprintf@f+1
  4187     179A                     l3751:
  4188     179A  01C4               	clrf	sprintf@f+2
  4189     179B  01C5               	clrf	sprintf@f+3
  4190     179C                     l3753:
  4191     179C  01CB               	clrf	sprintf@f+9
  4192     179D  01CC               	clrf	sprintf@f+10
  4193     179E                     l3755:
  4194     179E  3042               	movlw	low sprintf@f
  4195     179F  00B6               	movwf	vfprintf@fp
  4196     17A0  3000               	movlw	high sprintf@f
  4197     17A1  00B7               	movwf	vfprintf@fp+1
  4198     17A2  083B               	movf	sprintf@fmt,w
  4199     17A3  00B8               	movwf	vfprintf@fmt
  4200     17A4  3041               	movlw	(low (sprintf@ap| 0))& (0+255)
  4201     17A5  00B9               	movwf	vfprintf@ap
  4202     17A6  160A  118A  27B5  160A  118A  	fcall	_vfprintf
  4203     17AB                     l3757:
  4204     17AB  1283               	bcf	3,5	;RP0=0, select bank0
  4205     17AC  1303               	bcf	3,6	;RP1=0, select bank0
  4206     17AD  0844               	movf	sprintf@f+2,w
  4207     17AE  073A               	addwf	sprintf@s,w
  4208     17AF  00C0               	movwf	??_sprintf
  4209     17B0  0840               	movf	??_sprintf,w
  4210     17B1  0084               	movwf	4
  4211     17B2  1383               	bcf	3,7	;select IRP bank0
  4212     17B3  0180               	clrf	0
  4213     17B4                     l918:
  4214     17B4  0008               	return
  4215     17B5                     __end_of_sprintf:
  4216                           
  4217                           	psect	text10
  4218     17B5                     __ptext10:	
  4219 ;; *************** function _vfprintf *****************
  4220 ;; Defined at:
  4221 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;  fp              2   22[BANK0 ] PTR struct _IO_FILE
  4224 ;;		 -> sprintf@f(11), 
  4225 ;;  fmt             1   24[BANK0 ] PTR const unsigned char 
  4226 ;;		 -> STR_6(12), 
  4227 ;;  ap              1   25[BANK0 ] PTR PTR void 
  4228 ;;		 -> sprintf@ap(1), 
  4229 ;; Auto vars:     Size  Location     Type
  4230 ;;  cfmt            1    7[COMMON] PTR unsigned char 
  4231 ;;		 -> STR_6(12), 
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  2   22[BANK0 ] int 
  4234 ;; Registers used:
  4235 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4241 ;;      Params:         0       4       0       0       0
  4242 ;;      Locals:         1       0       0       0       0
  4243 ;;      Temps:          0       0       0       0       0
  4244 ;;      Totals:         1       4       0       0       0
  4245 ;;Total ram usage:        5 bytes
  4246 ;; Hardware stack levels used: 1
  4247 ;; Hardware stack levels required when called: 4
  4248 ;; This function calls:
  4249 ;;		_vfpfcnvrt
  4250 ;; This function is called by:
  4251 ;;		_sprintf
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254                           
  4255     17B5                     _vfprintf:	
  4256                           ;psect for function _vfprintf
  4257                           
  4258     17B5                     l3595:	
  4259                           ;incstack = 0
  4260                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4261                           
  4262                           
  4263                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  4264     17B5  1283               	bcf	3,5	;RP0=0, select bank0
  4265     17B6  1303               	bcf	3,6	;RP1=0, select bank0
  4266     17B7  0838               	movf	vfprintf@fmt,w
  4267     17B8  00F7               	movwf	vfprintf@cfmt
  4268                           
  4269                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  4270     17B9  2FC9               	goto	l3599
  4271     17BA                     l3597:
  4272                           
  4273                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  4274     17BA  1283               	bcf	3,5	;RP0=0, select bank0
  4275     17BB  1303               	bcf	3,6	;RP1=0, select bank0
  4276     17BC  0836               	movf	vfprintf@fp,w
  4277     17BD  00A9               	movwf	vfpfcnvrt@fp
  4278     17BE  0837               	movf	vfprintf@fp+1,w
  4279     17BF  00AA               	movwf	vfpfcnvrt@fp+1
  4280     17C0  3077               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  4281     17C1  00AB               	movwf	vfpfcnvrt@fmt
  4282     17C2  0839               	movf	vfprintf@ap,w
  4283     17C3  00AC               	movwf	vfpfcnvrt@ap
  4284     17C4  120A  118A  25B0  160A  118A  	fcall	_vfpfcnvrt
  4285     17C9                     l3599:
  4286                           
  4287                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  4288     17C9  0877               	movf	vfprintf@cfmt,w
  4289     17CA  0084               	movwf	4
  4290     17CB  120A  158A  200A  160A  118A  	fcall	stringdir
  4291     17D0  3A00               	xorlw	0
  4292     17D1  1D03               	skipz
  4293     17D2  2FD4               	goto	u3901
  4294     17D3  2FD5               	goto	u3900
  4295     17D4                     u3901:
  4296     17D4  2FBA               	goto	l3597
  4297     17D5                     u3900:
  4298     17D5                     l3601:
  4299                           
  4300                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  4301     17D5  1283               	bcf	3,5	;RP0=0, select bank0
  4302     17D6  1303               	bcf	3,6	;RP1=0, select bank0
  4303     17D7  01B6               	clrf	?_vfprintf
  4304     17D8  01B7               	clrf	?_vfprintf+1
  4305     17D9                     l962:
  4306     17D9  0008               	return
  4307     17DA                     __end_of_vfprintf:
  4308                           
  4309                           	psect	text11
  4310     05B0                     __ptext11:	
  4311 ;; *************** function _vfpfcnvrt *****************
  4312 ;; Defined at:
  4313 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;  fp              2    9[BANK0 ] PTR struct _IO_FILE
  4316 ;;		 -> sprintf@f(11), 
  4317 ;;  fmt             1   11[BANK0 ] PTR PTR unsigned char 
  4318 ;;		 -> vfprintf@cfmt(1), 
  4319 ;;  ap              1   12[BANK0 ] PTR PTR void 
  4320 ;;		 -> sprintf@ap(1), 
  4321 ;; Auto vars:     Size  Location     Type
  4322 ;;  convarg         4   17[BANK0 ] struct .
  4323 ;;  c               1   21[BANK0 ] unsigned char 
  4324 ;;  cp              1   16[BANK0 ] PTR unsigned char 
  4325 ;;		 -> STR_6(12), 
  4326 ;;  done            1   15[BANK0 ] _Bool 
  4327 ;; Return value:  Size  Location     Type
  4328 ;;                  1    wreg      void 
  4329 ;; Registers used:
  4330 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4331 ;; Tracked objects:
  4332 ;;		On entry : 0/0
  4333 ;;		On exit  : 0/0
  4334 ;;		Unchanged: 0/0
  4335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4336 ;;      Params:         0       4       0       0       0
  4337 ;;      Locals:         0       7       0       0       0
  4338 ;;      Temps:          0       2       0       0       0
  4339 ;;      Totals:         0      13       0       0       0
  4340 ;;Total ram usage:       13 bytes
  4341 ;; Hardware stack levels used: 1
  4342 ;; Hardware stack levels required when called: 3
  4343 ;; This function calls:
  4344 ;;		___awdiv
  4345 ;;		___awmod
  4346 ;;		_abs
  4347 ;;		_fputc
  4348 ;; This function is called by:
  4349 ;;		_vfprintf
  4350 ;; This function uses a non-reentrant model
  4351 ;;
  4352                           
  4353     05B0                     _vfpfcnvrt:	
  4354                           ;psect for function _vfpfcnvrt
  4355                           
  4356     05B0                     l3509:	
  4357                           ;incstack = 0
  4358                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4359                           
  4360                           
  4361                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  4362     05B0  1283               	bcf	3,5	;RP0=0, select bank0
  4363     05B1  1303               	bcf	3,6	;RP1=0, select bank0
  4364     05B2  082B               	movf	vfpfcnvrt@fmt,w
  4365     05B3  0084               	movwf	4
  4366     05B4  0800               	movf	0,w
  4367     05B5  0084               	movwf	4
  4368     05B6  120A  158A  200A  120A  118A  	fcall	stringdir
  4369     05BB  3A25               	xorlw	37
  4370     05BC  1D03               	skipz
  4371     05BD  2DBF               	goto	u3771
  4372     05BE  2DC0               	goto	u3770
  4373     05BF                     u3771:
  4374     05BF  2E82               	goto	l3555
  4375     05C0                     u3770:
  4376     05C0                     l3511:
  4377                           
  4378                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  4379     05C0  082B               	movf	vfpfcnvrt@fmt,w
  4380     05C1  0084               	movwf	4
  4381     05C2  3001               	movlw	1
  4382     05C3  0780               	addwf	0,f
  4383     05C4                     l3513:
  4384                           
  4385                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  4386     05C4  1683               	bsf	3,5	;RP0=1, select bank1
  4387     05C5  1303               	bcf	3,6	;RP1=0, select bank1
  4388     05C6  01C8               	clrf	_width^(0+128)
  4389     05C7  01C9               	clrf	(_width+1)^(0+128)
  4390     05C8  3000               	movlw	0
  4391     05C9  00D8               	movwf	_flags^(0+128)
  4392     05CA                     l3515:
  4393                           
  4394                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  4395     05CA  30FF               	movlw	255
  4396     05CB  00CA               	movwf	_prec^(0+128)
  4397     05CC  30FF               	movlw	255
  4398     05CD  00CB               	movwf	(_prec^(0+128)+1)
  4399     05CE                     l3517:
  4400                           
  4401                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  4402     05CE  1283               	bcf	3,5	;RP0=0, select bank0
  4403     05CF  1303               	bcf	3,6	;RP1=0, select bank0
  4404     05D0  082B               	movf	vfpfcnvrt@fmt,w
  4405     05D1  0084               	movwf	4
  4406     05D2  0800               	movf	0,w
  4407     05D3  00B0               	movwf	vfpfcnvrt@cp
  4408     05D4                     l3519:
  4409                           
  4410                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  4411     05D4  0830               	movf	vfpfcnvrt@cp,w
  4412     05D5  0084               	movwf	4
  4413     05D6  120A  158A  200A  120A  118A  	fcall	stringdir
  4414     05DB  3A64               	xorlw	100
  4415     05DC  1903               	skipnz
  4416     05DD  2DDF               	goto	u3781
  4417     05DE  2DE0               	goto	u3780
  4418     05DF                     u3781:
  4419     05DF  2DEC               	goto	l3523
  4420     05E0                     u3780:
  4421     05E0                     l3521:
  4422     05E0  0830               	movf	vfpfcnvrt@cp,w
  4423     05E1  0084               	movwf	4
  4424     05E2  120A  158A  200A  120A  118A  	fcall	stringdir
  4425     05E7  3A69               	xorlw	105
  4426     05E8  1D03               	skipz
  4427     05E9  2DEB               	goto	u3791
  4428     05EA  2DEC               	goto	u3790
  4429     05EB                     u3791:
  4430     05EB  2E7B               	goto	l3551
  4431     05EC                     u3790:
  4432     05EC                     l3523:
  4433                           
  4434                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  4435     05EC  082C               	movf	vfpfcnvrt@ap,w
  4436     05ED  0084               	movwf	4
  4437     05EE  1383               	bcf	3,7	;select IRP bank0
  4438     05EF  0800               	movf	0,w
  4439     05F0  00FF               	movwf	btemp+1
  4440     05F1  3002               	movlw	2
  4441     05F2  0780               	addwf	0,f
  4442     05F3  087F               	movf	btemp+1,w
  4443     05F4  0084               	movwf	4
  4444     05F5  0800               	movf	0,w
  4445     05F6  00B1               	movwf	vfpfcnvrt@convarg
  4446     05F7  0A84               	incf	4,f
  4447     05F8  0800               	movf	0,w
  4448     05F9  00B2               	movwf	vfpfcnvrt@convarg+1
  4449     05FA                     l3525:
  4450                           
  4451                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  4452     05FA  082B               	movf	vfpfcnvrt@fmt,w
  4453     05FB  0084               	movwf	4
  4454     05FC  0830               	movf	vfpfcnvrt@cp,w
  4455     05FD  3E01               	addlw	1
  4456     05FE  0080               	movwf	0
  4457     05FF                     l3527:
  4458                           
  4459                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  4460     05FF  3020               	movlw	32
  4461     0600  00B5               	movwf	vfpfcnvrt@c
  4462     0601                     l3529:
  4463                           
  4464                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  4465     0601  1BB2               	btfsc	vfpfcnvrt@convarg+1,7
  4466     0602  2E04               	goto	u3801
  4467     0603  2E06               	goto	u3800
  4468     0604                     u3801:
  4469     0604  3001               	movlw	1
  4470     0605  2E07               	goto	u3810
  4471     0606                     u3800:
  4472     0606  3000               	movlw	0
  4473     0607                     u3810:
  4474     0607  00AF               	movwf	vfpfcnvrt@done
  4475     0608                     l3531:
  4476                           
  4477                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  4478     0608  3001               	movlw	1
  4479     0609  02B5               	subwf	vfpfcnvrt@c,f
  4480     060A  0835               	movf	vfpfcnvrt@c,w
  4481     060B  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4482     060C  0084               	movwf	4
  4483     060D  300A               	movlw	10
  4484     060E  00F3               	movwf	___awmod@divisor
  4485     060F  3000               	movlw	0
  4486     0610  00F4               	movwf	___awmod@divisor+1
  4487     0611  0832               	movf	vfpfcnvrt@convarg+1,w
  4488     0612  00F6               	movwf	___awmod@dividend+1
  4489     0613  0831               	movf	vfpfcnvrt@convarg,w
  4490     0614  00F5               	movwf	___awmod@dividend
  4491     0615  120A  158A  2257  120A  118A  	fcall	___awmod
  4492     061A  0874               	movf	?___awmod+1,w
  4493     061B  1283               	bcf	3,5	;RP0=0, select bank0
  4494     061C  1303               	bcf	3,6	;RP1=0, select bank0
  4495     061D  00A3               	movwf	abs@a+1
  4496     061E  0873               	movf	?___awmod,w
  4497     061F  00A2               	movwf	abs@a
  4498     0620  160A  118A  2753  120A  118A  	fcall	_abs
  4499     0625  1283               	bcf	3,5	;RP0=0, select bank0
  4500     0626  1303               	bcf	3,6	;RP1=0, select bank0
  4501     0627  0822               	movf	?_abs,w
  4502     0628  3E30               	addlw	48
  4503     0629  1783               	bsf	3,7	;select IRP bank3
  4504     062A  0080               	movwf	0
  4505     062B                     l3533:
  4506                           
  4507                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  4508     062B  300A               	movlw	10
  4509     062C  00F3               	movwf	___awdiv@divisor
  4510     062D  3000               	movlw	0
  4511     062E  00F4               	movwf	___awdiv@divisor+1
  4512     062F  0832               	movf	vfpfcnvrt@convarg+1,w
  4513     0630  00F6               	movwf	___awdiv@dividend+1
  4514     0631  0831               	movf	vfpfcnvrt@convarg,w
  4515     0632  00F5               	movwf	___awdiv@dividend
  4516     0633  120A  158A  236F  120A  118A  	fcall	___awdiv
  4517     0638  0874               	movf	?___awdiv+1,w
  4518     0639  1283               	bcf	3,5	;RP0=0, select bank0
  4519     063A  1303               	bcf	3,6	;RP1=0, select bank0
  4520     063B  00B2               	movwf	vfpfcnvrt@convarg+1
  4521     063C  0873               	movf	?___awdiv,w
  4522     063D  00B1               	movwf	vfpfcnvrt@convarg
  4523     063E                     l3535:
  4524                           
  4525                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  4526     063E  0831               	movf	vfpfcnvrt@convarg,w
  4527     063F  0432               	iorwf	vfpfcnvrt@convarg+1,w
  4528     0640  1903               	btfsc	3,2
  4529     0641  2E43               	goto	u3821
  4530     0642  2E44               	goto	u3820
  4531     0643                     u3821:
  4532     0643  2E49               	goto	l3539
  4533     0644                     u3820:
  4534     0644                     l3537:
  4535     0644  0835               	movf	vfpfcnvrt@c,w
  4536     0645  1D03               	btfss	3,2
  4537     0646  2E48               	goto	u3831
  4538     0647  2E49               	goto	u3830
  4539     0648                     u3831:
  4540     0648  2E08               	goto	l3531
  4541     0649                     u3830:
  4542     0649                     l3539:
  4543                           
  4544                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  4545     0649  0835               	movf	vfpfcnvrt@c,w
  4546     064A  1903               	btfsc	3,2
  4547     064B  2E4D               	goto	u3841
  4548     064C  2E4E               	goto	u3840
  4549     064D                     u3841:
  4550     064D  2E74               	goto	l3549
  4551     064E                     u3840:
  4552     064E                     l3541:
  4553     064E  082F               	movf	vfpfcnvrt@done,w
  4554     064F  1903               	btfsc	3,2
  4555     0650  2E52               	goto	u3851
  4556     0651  2E53               	goto	u3850
  4557     0652                     u3851:
  4558     0652  2E74               	goto	l3549
  4559     0653                     u3850:
  4560     0653                     l3543:
  4561                           
  4562                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  4563     0653  3001               	movlw	1
  4564     0654  02B5               	subwf	vfpfcnvrt@c,f
  4565     0655  0835               	movf	vfpfcnvrt@c,w
  4566     0656  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4567     0657  0084               	movwf	4
  4568     0658  302D               	movlw	45
  4569     0659  1783               	bsf	3,7	;select IRP bank3
  4570     065A  0080               	movwf	0
  4571     065B  2E74               	goto	l3549
  4572     065C                     l3545:
  4573                           
  4574                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  4575     065C  0835               	movf	vfpfcnvrt@c,w
  4576     065D  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4577     065E  0084               	movwf	4
  4578     065F  1783               	bsf	3,7	;select IRP bank3
  4579     0660  0800               	movf	0,w
  4580     0661  00AD               	movwf	??_vfpfcnvrt
  4581     0662  01AE               	clrf	??_vfpfcnvrt+1
  4582     0663  082D               	movf	??_vfpfcnvrt,w
  4583     0664  00F3               	movwf	fputc@c
  4584     0665  082E               	movf	??_vfpfcnvrt+1,w
  4585     0666  00F4               	movwf	fputc@c+1
  4586     0667  0829               	movf	vfpfcnvrt@fp,w
  4587     0668  00F5               	movwf	fputc@fp
  4588     0669  082A               	movf	vfpfcnvrt@fp+1,w
  4589     066A  00F6               	movwf	fputc@fp+1
  4590     066B  120A  158A  246D  120A  118A  	fcall	_fputc
  4591     0670                     l3547:
  4592     0670  3001               	movlw	1
  4593     0671  1283               	bcf	3,5	;RP0=0, select bank0
  4594     0672  1303               	bcf	3,6	;RP1=0, select bank0
  4595     0673  07B5               	addwf	vfpfcnvrt@c,f
  4596     0674                     l3549:
  4597                           
  4598                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  4599     0674  3020               	movlw	32
  4600     0675  0635               	xorwf	vfpfcnvrt@c,w
  4601     0676  1D03               	btfss	3,2
  4602     0677  2E79               	goto	u3861
  4603     0678  2E7A               	goto	u3860
  4604     0679                     u3861:
  4605     0679  2E5C               	goto	l3545
  4606     067A                     u3860:
  4607     067A  2E9B               	goto	l956
  4608     067B                     l3551:
  4609                           
  4610                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  4611     067B  1283               	bcf	3,5	;RP0=0, select bank0
  4612     067C  1303               	bcf	3,6	;RP1=0, select bank0
  4613     067D  082B               	movf	vfpfcnvrt@fmt,w
  4614     067E  0084               	movwf	4
  4615     067F  3001               	movlw	1
  4616     0680  0780               	addwf	0,f
  4617     0681  2E9B               	goto	l956
  4618     0682                     l3555:
  4619                           
  4620                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  4621     0682  082B               	movf	vfpfcnvrt@fmt,w
  4622     0683  0084               	movwf	4
  4623     0684  0800               	movf	0,w
  4624     0685  0084               	movwf	4
  4625     0686  120A  158A  200A  120A  118A  	fcall	stringdir
  4626     068B  00AD               	movwf	??_vfpfcnvrt
  4627     068C  01AE               	clrf	??_vfpfcnvrt+1
  4628     068D  082D               	movf	??_vfpfcnvrt,w
  4629     068E  00F3               	movwf	fputc@c
  4630     068F  082E               	movf	??_vfpfcnvrt+1,w
  4631     0690  00F4               	movwf	fputc@c+1
  4632     0691  0829               	movf	vfpfcnvrt@fp,w
  4633     0692  00F5               	movwf	fputc@fp
  4634     0693  082A               	movf	vfpfcnvrt@fp+1,w
  4635     0694  00F6               	movwf	fputc@fp+1
  4636     0695  120A  158A  246D  120A  118A  	fcall	_fputc
  4637     069A  2E7B               	goto	l3551
  4638     069B                     l956:
  4639     069B  0008               	return
  4640     069C                     __end_of_vfpfcnvrt:
  4641                           
  4642                           	psect	text12
  4643     0C6D                     __ptext12:	
  4644 ;; *************** function _fputc *****************
  4645 ;; Defined at:
  4646 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;  c               2    3[COMMON] int 
  4649 ;;  fp              2    5[COMMON] PTR struct _IO_FILE
  4650 ;;		 -> sprintf@f(11), 
  4651 ;; Auto vars:     Size  Location     Type
  4652 ;;		None
  4653 ;; Return value:  Size  Location     Type
  4654 ;;                  2    3[COMMON] int 
  4655 ;; Registers used:
  4656 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4662 ;;      Params:         4       0       0       0       0
  4663 ;;      Locals:         0       0       0       0       0
  4664 ;;      Temps:          0       9       0       0       0
  4665 ;;      Totals:         4       9       0       0       0
  4666 ;;Total ram usage:       13 bytes
  4667 ;; Hardware stack levels used: 1
  4668 ;; Hardware stack levels required when called: 2
  4669 ;; This function calls:
  4670 ;;		_putch
  4671 ;; This function is called by:
  4672 ;;		_vfpfcnvrt
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           
  4676     0C6D                     _fputc:	
  4677                           ;psect for function _fputc
  4678                           
  4679     0C6D                     l3467:	
  4680                           ;incstack = 0
  4681                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4682                           
  4683     0C6D  0875               	movf	fputc@fp,w
  4684     0C6E  0476               	iorwf	fputc@fp+1,w
  4685     0C6F  1903               	btfsc	3,2
  4686     0C70  2C72               	goto	u3701
  4687     0C71  2C73               	goto	u3700
  4688     0C72                     u3701:
  4689     0C72  2C79               	goto	l3471
  4690     0C73                     u3700:
  4691     0C73                     l3469:
  4692     0C73  0875               	movf	fputc@fp,w
  4693     0C74  0476               	iorwf	fputc@fp+1,w
  4694     0C75  1D03               	btfss	3,2
  4695     0C76  2C78               	goto	u3711
  4696     0C77  2C79               	goto	u3710
  4697     0C78                     u3711:
  4698     0C78  2C80               	goto	l3473
  4699     0C79                     u3710:
  4700     0C79                     l3471:
  4701     0C79  0873               	movf	fputc@c,w
  4702     0C7A  120A  118A  27FC  120A  158A  	fcall	_putch
  4703     0C7F  2D0C               	goto	l981
  4704     0C80                     l3473:
  4705     0C80  0875               	movf	fputc@fp,w
  4706     0C81  3E09               	addlw	9
  4707     0C82  1283               	bcf	3,5	;RP0=0, select bank0
  4708     0C83  1303               	bcf	3,6	;RP1=0, select bank0
  4709     0C84  00A0               	movwf	??_fputc
  4710     0C85  0876               	movf	fputc@fp+1,w
  4711     0C86  1803               	skipnc
  4712     0C87  3E01               	addlw	1
  4713     0C88  3E00               	addlw	0
  4714     0C89  00A1               	movwf	??_fputc+1
  4715     0C8A  0820               	movf	??_fputc,w
  4716     0C8B  0084               	movwf	4
  4717     0C8C  1783               	bsf	3,7
  4718     0C8D  1C21               	btfss	??_fputc+1,0
  4719     0C8E  1383               	bcf	3,7
  4720     0C8F  0800               	movf	0,w
  4721     0C90  00A2               	movwf	??_fputc+2
  4722     0C91  0A84               	incf	4,f
  4723     0C92  0800               	movf	0,w
  4724     0C93  00A3               	movwf	??_fputc+3
  4725     0C94  0822               	movf	??_fputc+2,w
  4726     0C95  0423               	iorwf	??_fputc+3,w
  4727     0C96  1903               	btfsc	3,2
  4728     0C97  2C99               	goto	u3721
  4729     0C98  2C9A               	goto	u3720
  4730     0C99                     u3721:
  4731     0C99  2CCC               	goto	l3477
  4732     0C9A                     u3720:
  4733     0C9A                     l3475:
  4734     0C9A  0875               	movf	fputc@fp,w
  4735     0C9B  3E09               	addlw	9
  4736     0C9C  00A0               	movwf	??_fputc
  4737     0C9D  0876               	movf	fputc@fp+1,w
  4738     0C9E  1803               	skipnc
  4739     0C9F  3E01               	addlw	1
  4740     0CA0  3E00               	addlw	0
  4741     0CA1  00A1               	movwf	??_fputc+1
  4742     0CA2  0820               	movf	??_fputc,w
  4743     0CA3  0084               	movwf	4
  4744     0CA4  1783               	bsf	3,7
  4745     0CA5  1C21               	btfss	??_fputc+1,0
  4746     0CA6  1383               	bcf	3,7
  4747     0CA7  0800               	movf	0,w
  4748     0CA8  00A2               	movwf	??_fputc+2
  4749     0CA9  0A84               	incf	4,f
  4750     0CAA  0800               	movf	0,w
  4751     0CAB  00A3               	movwf	??_fputc+3
  4752     0CAC  0875               	movf	fputc@fp,w
  4753     0CAD  3E02               	addlw	2
  4754     0CAE  00A4               	movwf	??_fputc+4
  4755     0CAF  0876               	movf	fputc@fp+1,w
  4756     0CB0  1803               	skipnc
  4757     0CB1  3E01               	addlw	1
  4758     0CB2  3E00               	addlw	0
  4759     0CB3  00A5               	movwf	??_fputc+5
  4760     0CB4  0824               	movf	??_fputc+4,w
  4761     0CB5  0084               	movwf	4
  4762     0CB6  1783               	bsf	3,7
  4763     0CB7  1C25               	btfss	??_fputc+5,0
  4764     0CB8  1383               	bcf	3,7
  4765     0CB9  0800               	movf	0,w
  4766     0CBA  00A6               	movwf	??_fputc+6
  4767     0CBB  0A84               	incf	4,f
  4768     0CBC  0800               	movf	0,w
  4769     0CBD  00A7               	movwf	??_fputc+7
  4770     0CBE  0827               	movf	??_fputc+7,w
  4771     0CBF  3A80               	xorlw	128
  4772     0CC0  00A8               	movwf	??_fputc+8
  4773     0CC1  0823               	movf	??_fputc+3,w
  4774     0CC2  3A80               	xorlw	128
  4775     0CC3  0228               	subwf	??_fputc+8,w
  4776     0CC4  1D03               	skipz
  4777     0CC5  2CC8               	goto	u3735
  4778     0CC6  0822               	movf	??_fputc+2,w
  4779     0CC7  0226               	subwf	??_fputc+6,w
  4780     0CC8                     u3735:
  4781     0CC8  1803               	skipnc
  4782     0CC9  2CCB               	goto	u3731
  4783     0CCA  2CCC               	goto	u3730
  4784     0CCB                     u3731:
  4785     0CCB  2D0C               	goto	l981
  4786     0CCC                     u3730:
  4787     0CCC                     l3477:
  4788     0CCC  0875               	movf	fputc@fp,w
  4789     0CCD  0084               	movwf	4
  4790     0CCE  1783               	bsf	3,7
  4791     0CCF  1C76               	btfss	fputc@fp+1,0
  4792     0CD0  1383               	bcf	3,7
  4793     0CD1  0800               	movf	0,w
  4794     0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  4795     0CD3  1303               	bcf	3,6	;RP1=0, select bank0
  4796     0CD4  00A0               	movwf	??_fputc
  4797     0CD5  0A84               	incf	4,f
  4798     0CD6  0800               	movf	0,w
  4799     0CD7  00A1               	movwf	??_fputc+1
  4800     0CD8  0875               	movf	fputc@fp,w
  4801     0CD9  3E02               	addlw	2
  4802     0CDA  00A2               	movwf	??_fputc+2
  4803     0CDB  0876               	movf	fputc@fp+1,w
  4804     0CDC  1803               	skipnc
  4805     0CDD  3E01               	addlw	1
  4806     0CDE  3E00               	addlw	0
  4807     0CDF  00A3               	movwf	??_fputc+3
  4808     0CE0  0822               	movf	??_fputc+2,w
  4809     0CE1  0084               	movwf	4
  4810     0CE2  1783               	bsf	3,7
  4811     0CE3  1C23               	btfss	??_fputc+3,0
  4812     0CE4  1383               	bcf	3,7
  4813     0CE5  0800               	movf	0,w
  4814     0CE6  0720               	addwf	??_fputc,w
  4815     0CE7  00A5               	movwf	??_fputc+5
  4816     0CE8  0821               	movf	??_fputc+1,w
  4817     0CE9  00A4               	movwf	??_fputc+4
  4818     0CEA  1803               	skipnc
  4819     0CEB  0AA4               	incf	??_fputc+4,f
  4820     0CEC  1F80               	btfss	0,7
  4821     0CED  2CEF               	goto	u3740
  4822     0CEE  03A4               	decf	??_fputc+4,f
  4823     0CEF                     u3740:
  4824     0CEF  1283               	bcf	3,5	;RP0=0, select bank0
  4825     0CF0  1303               	bcf	3,6	;RP1=0, select bank0
  4826     0CF1  0824               	movf	??_fputc+4,w
  4827     0CF2  00A6               	movwf	??_fputc+6
  4828     0CF3  0825               	movf	??_fputc+5,w
  4829     0CF4  0084               	movwf	4
  4830     0CF5  1783               	bsf	3,7
  4831     0CF6  1C26               	btfss	??_fputc+6,0
  4832     0CF7  1383               	bcf	3,7
  4833     0CF8  0873               	movf	fputc@c,w
  4834     0CF9  0080               	movwf	0
  4835     0CFA  0875               	movf	fputc@fp,w
  4836     0CFB  3E02               	addlw	2
  4837     0CFC  00A0               	movwf	??_fputc
  4838     0CFD  0876               	movf	fputc@fp+1,w
  4839     0CFE  1803               	skipnc
  4840     0CFF  3E01               	addlw	1
  4841     0D00  3E00               	addlw	0
  4842     0D01  00A1               	movwf	??_fputc+1
  4843     0D02  0820               	movf	??_fputc,w
  4844     0D03  0084               	movwf	4
  4845     0D04  1783               	bsf	3,7
  4846     0D05  1C21               	btfss	??_fputc+1,0
  4847     0D06  1383               	bcf	3,7
  4848     0D07  3001               	movlw	1
  4849     0D08  0780               	addwf	0,f
  4850     0D09  0A84               	incf	4,f
  4851     0D0A  1803               	skipnc
  4852     0D0B  0A80               	incf	0,f
  4853     0D0C                     l981:
  4854     0D0C  0008               	return
  4855     0D0D                     __end_of_fputc:
  4856                           
  4857                           	psect	text13
  4858     07FC                     __ptext13:	
  4859 ;; *************** function _putch *****************
  4860 ;; Defined at:
  4861 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  4862 ;; Parameters:    Size  Location     Type
  4863 ;;  c               1    wreg     unsigned char 
  4864 ;; Auto vars:     Size  Location     Type
  4865 ;;  c               1    0[COMMON] unsigned char 
  4866 ;; Return value:  Size  Location     Type
  4867 ;;                  1    wreg      void 
  4868 ;; Registers used:
  4869 ;;		wreg
  4870 ;; Tracked objects:
  4871 ;;		On entry : 0/0
  4872 ;;		On exit  : 0/0
  4873 ;;		Unchanged: 0/0
  4874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4875 ;;      Params:         0       0       0       0       0
  4876 ;;      Locals:         0       0       0       0       0
  4877 ;;      Temps:          0       0       0       0       0
  4878 ;;      Totals:         0       0       0       0       0
  4879 ;;Total ram usage:        0 bytes
  4880 ;; Hardware stack levels used: 1
  4881 ;; Hardware stack levels required when called: 1
  4882 ;; This function calls:
  4883 ;;		Nothing
  4884 ;; This function is called by:
  4885 ;;		_fputc
  4886 ;; This function uses a non-reentrant model
  4887 ;;
  4888                           
  4889     07FC                     _putch:	
  4890                           ;psect for function _putch
  4891                           
  4892     07FC                     l992:	
  4893                           ;incstack = 0
  4894                           ; Regs used in _putch: [wreg]
  4895                           
  4896     07FC  0008               	return
  4897     07FD                     __end_of_putch:
  4898                           
  4899                           	psect	text14
  4900     1753                     __ptext14:	
  4901 ;; *************** function _abs *****************
  4902 ;; Defined at:
  4903 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
  4904 ;; Parameters:    Size  Location     Type
  4905 ;;  a               2    2[BANK0 ] int 
  4906 ;; Auto vars:     Size  Location     Type
  4907 ;;		None
  4908 ;; Return value:  Size  Location     Type
  4909 ;;                  2    2[BANK0 ] int 
  4910 ;; Registers used:
  4911 ;;		wreg, status,2, status,0
  4912 ;; Tracked objects:
  4913 ;;		On entry : 0/0
  4914 ;;		On exit  : 0/0
  4915 ;;		Unchanged: 0/0
  4916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4917 ;;      Params:         0       2       0       0       0
  4918 ;;      Locals:         0       0       0       0       0
  4919 ;;      Temps:          0       2       0       0       0
  4920 ;;      Totals:         0       4       0       0       0
  4921 ;;Total ram usage:        4 bytes
  4922 ;; Hardware stack levels used: 1
  4923 ;; Hardware stack levels required when called: 1
  4924 ;; This function calls:
  4925 ;;		Nothing
  4926 ;; This function is called by:
  4927 ;;		_vfpfcnvrt
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           
  4931     1753                     _abs:	
  4932                           ;psect for function _abs
  4933                           
  4934     1753                     l3481:	
  4935                           ;incstack = 0
  4936                           ; Regs used in _abs: [wreg+status,2+status,0]
  4937                           
  4938     1753  1283               	bcf	3,5	;RP0=0, select bank0
  4939     1754  1303               	bcf	3,6	;RP1=0, select bank0
  4940     1755  1BA3               	btfsc	abs@a+1,7
  4941     1756  2F58               	goto	u3751
  4942     1757  2F59               	goto	u3750
  4943     1758                     u3751:
  4944     1758  2F5A               	goto	l3485
  4945     1759                     u3750:
  4946     1759                     l3483:
  4947     1759  2F65               	goto	l969
  4948     175A                     l3485:
  4949     175A  0922               	comf	abs@a,w
  4950     175B  00A4               	movwf	??_abs
  4951     175C  0923               	comf	abs@a+1,w
  4952     175D  00A5               	movwf	??_abs+1
  4953     175E  0AA4               	incf	??_abs,f
  4954     175F  1903               	skipnz
  4955     1760  0AA5               	incf	??_abs+1,f
  4956     1761  0824               	movf	??_abs,w
  4957     1762  00A2               	movwf	?_abs
  4958     1763  0825               	movf	??_abs+1,w
  4959     1764  00A3               	movwf	?_abs+1
  4960     1765                     l969:
  4961     1765  0008               	return
  4962     1766                     __end_of_abs:
  4963                           
  4964                           	psect	text15
  4965     0A57                     __ptext15:	
  4966 ;; *************** function ___awmod *****************
  4967 ;; Defined at:
  4968 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  4969 ;; Parameters:    Size  Location     Type
  4970 ;;  divisor         2    3[COMMON] int 
  4971 ;;  dividend        2    5[COMMON] int 
  4972 ;; Auto vars:     Size  Location     Type
  4973 ;;  sign            1    1[BANK0 ] unsigned char 
  4974 ;;  counter         1    0[BANK0 ] unsigned char 
  4975 ;; Return value:  Size  Location     Type
  4976 ;;                  2    3[COMMON] int 
  4977 ;; Registers used:
  4978 ;;		wreg, status,2, status,0
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4984 ;;      Params:         4       0       0       0       0
  4985 ;;      Locals:         0       2       0       0       0
  4986 ;;      Temps:          0       0       0       0       0
  4987 ;;      Totals:         4       2       0       0       0
  4988 ;;Total ram usage:        6 bytes
  4989 ;; Hardware stack levels used: 1
  4990 ;; Hardware stack levels required when called: 1
  4991 ;; This function calls:
  4992 ;;		Nothing
  4993 ;; This function is called by:
  4994 ;;		_vfpfcnvrt
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           
  4998     0A57                     ___awmod:	
  4999                           ;psect for function ___awmod
  5000                           
  5001     0A57                     l3429:	
  5002                           ;incstack = 0
  5003                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5004                           
  5005     0A57  1283               	bcf	3,5	;RP0=0, select bank0
  5006     0A58  1303               	bcf	3,6	;RP1=0, select bank0
  5007     0A59  01A1               	clrf	___awmod@sign
  5008     0A5A                     l3431:
  5009     0A5A  1FF6               	btfss	___awmod@dividend+1,7
  5010     0A5B  2A5D               	goto	u3611
  5011     0A5C  2A5E               	goto	u3610
  5012     0A5D                     u3611:
  5013     0A5D  2A65               	goto	l3437
  5014     0A5E                     u3610:
  5015     0A5E                     l3433:
  5016     0A5E  09F5               	comf	___awmod@dividend,f
  5017     0A5F  09F6               	comf	___awmod@dividend+1,f
  5018     0A60  0AF5               	incf	___awmod@dividend,f
  5019     0A61  1903               	skipnz
  5020     0A62  0AF6               	incf	___awmod@dividend+1,f
  5021     0A63                     l3435:
  5022     0A63  3001               	movlw	1
  5023     0A64  00A1               	movwf	___awmod@sign
  5024     0A65                     l3437:
  5025     0A65  1FF4               	btfss	___awmod@divisor+1,7
  5026     0A66  2A68               	goto	u3621
  5027     0A67  2A69               	goto	u3620
  5028     0A68                     u3621:
  5029     0A68  2A6E               	goto	l3441
  5030     0A69                     u3620:
  5031     0A69                     l3439:
  5032     0A69  09F3               	comf	___awmod@divisor,f
  5033     0A6A  09F4               	comf	___awmod@divisor+1,f
  5034     0A6B  0AF3               	incf	___awmod@divisor,f
  5035     0A6C  1903               	skipnz
  5036     0A6D  0AF4               	incf	___awmod@divisor+1,f
  5037     0A6E                     l3441:
  5038     0A6E  0873               	movf	___awmod@divisor,w
  5039     0A6F  0474               	iorwf	___awmod@divisor+1,w
  5040     0A70  1903               	btfsc	3,2
  5041     0A71  2A73               	goto	u3631
  5042     0A72  2A74               	goto	u3630
  5043     0A73                     u3631:
  5044     0A73  2AA1               	goto	l3459
  5045     0A74                     u3630:
  5046     0A74                     l3443:
  5047     0A74  3001               	movlw	1
  5048     0A75  00A0               	movwf	___awmod@counter
  5049     0A76  2A80               	goto	l3449
  5050     0A77                     l3445:
  5051     0A77  3001               	movlw	1
  5052     0A78                     u3645:
  5053     0A78  1003               	clrc
  5054     0A79  0DF3               	rlf	___awmod@divisor,f
  5055     0A7A  0DF4               	rlf	___awmod@divisor+1,f
  5056     0A7B  3EFF               	addlw	-1
  5057     0A7C  1D03               	skipz
  5058     0A7D  2A78               	goto	u3645
  5059     0A7E                     l3447:
  5060     0A7E  3001               	movlw	1
  5061     0A7F  07A0               	addwf	___awmod@counter,f
  5062     0A80                     l3449:
  5063     0A80  1FF4               	btfss	___awmod@divisor+1,7
  5064     0A81  2A83               	goto	u3651
  5065     0A82  2A84               	goto	u3650
  5066     0A83                     u3651:
  5067     0A83  2A77               	goto	l3445
  5068     0A84                     u3650:
  5069     0A84                     l3451:
  5070     0A84  0874               	movf	___awmod@divisor+1,w
  5071     0A85  0276               	subwf	___awmod@dividend+1,w
  5072     0A86  1D03               	skipz
  5073     0A87  2A8A               	goto	u3665
  5074     0A88  0873               	movf	___awmod@divisor,w
  5075     0A89  0275               	subwf	___awmod@dividend,w
  5076     0A8A                     u3665:
  5077     0A8A  1C03               	skipc
  5078     0A8B  2A8D               	goto	u3661
  5079     0A8C  2A8E               	goto	u3660
  5080     0A8D                     u3661:
  5081     0A8D  2A94               	goto	l3455
  5082     0A8E                     u3660:
  5083     0A8E                     l3453:
  5084     0A8E  0873               	movf	___awmod@divisor,w
  5085     0A8F  02F5               	subwf	___awmod@dividend,f
  5086     0A90  0874               	movf	___awmod@divisor+1,w
  5087     0A91  1C03               	skipc
  5088     0A92  03F6               	decf	___awmod@dividend+1,f
  5089     0A93  02F6               	subwf	___awmod@dividend+1,f
  5090     0A94                     l3455:
  5091     0A94  3001               	movlw	1
  5092     0A95                     u3675:
  5093     0A95  1003               	clrc
  5094     0A96  0CF4               	rrf	___awmod@divisor+1,f
  5095     0A97  0CF3               	rrf	___awmod@divisor,f
  5096     0A98  3EFF               	addlw	-1
  5097     0A99  1D03               	skipz
  5098     0A9A  2A95               	goto	u3675
  5099     0A9B                     l3457:
  5100     0A9B  3001               	movlw	1
  5101     0A9C  02A0               	subwf	___awmod@counter,f
  5102     0A9D  1D03               	btfss	3,2
  5103     0A9E  2AA0               	goto	u3681
  5104     0A9F  2AA1               	goto	u3680
  5105     0AA0                     u3681:
  5106     0AA0  2A84               	goto	l3451
  5107     0AA1                     u3680:
  5108     0AA1                     l3459:
  5109     0AA1  0821               	movf	___awmod@sign,w
  5110     0AA2  1903               	btfsc	3,2
  5111     0AA3  2AA5               	goto	u3691
  5112     0AA4  2AA6               	goto	u3690
  5113     0AA5                     u3691:
  5114     0AA5  2AAB               	goto	l3463
  5115     0AA6                     u3690:
  5116     0AA6                     l3461:
  5117     0AA6  09F5               	comf	___awmod@dividend,f
  5118     0AA7  09F6               	comf	___awmod@dividend+1,f
  5119     0AA8  0AF5               	incf	___awmod@dividend,f
  5120     0AA9  1903               	skipnz
  5121     0AAA  0AF6               	incf	___awmod@dividend+1,f
  5122     0AAB                     l3463:
  5123     0AAB  0876               	movf	___awmod@dividend+1,w
  5124     0AAC  00F4               	movwf	?___awmod+1
  5125     0AAD  0875               	movf	___awmod@dividend,w
  5126     0AAE  00F3               	movwf	?___awmod
  5127     0AAF                     l621:
  5128     0AAF  0008               	return
  5129     0AB0                     __end_of___awmod:
  5130                           
  5131                           	psect	text16
  5132     0B6F                     __ptext16:	
  5133 ;; *************** function ___awdiv *****************
  5134 ;; Defined at:
  5135 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  5136 ;; Parameters:    Size  Location     Type
  5137 ;;  divisor         2    3[COMMON] int 
  5138 ;;  dividend        2    5[COMMON] int 
  5139 ;; Auto vars:     Size  Location     Type
  5140 ;;  quotient        2    2[BANK0 ] int 
  5141 ;;  sign            1    1[BANK0 ] unsigned char 
  5142 ;;  counter         1    0[BANK0 ] unsigned char 
  5143 ;; Return value:  Size  Location     Type
  5144 ;;                  2    3[COMMON] int 
  5145 ;; Registers used:
  5146 ;;		wreg, status,2, status,0
  5147 ;; Tracked objects:
  5148 ;;		On entry : 0/0
  5149 ;;		On exit  : 0/0
  5150 ;;		Unchanged: 0/0
  5151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5152 ;;      Params:         4       0       0       0       0
  5153 ;;      Locals:         0       4       0       0       0
  5154 ;;      Temps:          0       0       0       0       0
  5155 ;;      Totals:         4       4       0       0       0
  5156 ;;Total ram usage:        8 bytes
  5157 ;; Hardware stack levels used: 1
  5158 ;; Hardware stack levels required when called: 1
  5159 ;; This function calls:
  5160 ;;		Nothing
  5161 ;; This function is called by:
  5162 ;;		_vfpfcnvrt
  5163 ;; This function uses a non-reentrant model
  5164 ;;
  5165                           
  5166     0B6F                     ___awdiv:	
  5167                           ;psect for function ___awdiv
  5168                           
  5169     0B6F                     l3385:	
  5170                           ;incstack = 0
  5171                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5172                           
  5173     0B6F  1283               	bcf	3,5	;RP0=0, select bank0
  5174     0B70  1303               	bcf	3,6	;RP1=0, select bank0
  5175     0B71  01A1               	clrf	___awdiv@sign
  5176     0B72                     l3387:
  5177     0B72  1FF4               	btfss	___awdiv@divisor+1,7
  5178     0B73  2B75               	goto	u3511
  5179     0B74  2B76               	goto	u3510
  5180     0B75                     u3511:
  5181     0B75  2B7D               	goto	l3393
  5182     0B76                     u3510:
  5183     0B76                     l3389:
  5184     0B76  09F3               	comf	___awdiv@divisor,f
  5185     0B77  09F4               	comf	___awdiv@divisor+1,f
  5186     0B78  0AF3               	incf	___awdiv@divisor,f
  5187     0B79  1903               	skipnz
  5188     0B7A  0AF4               	incf	___awdiv@divisor+1,f
  5189     0B7B                     l3391:
  5190     0B7B  3001               	movlw	1
  5191     0B7C  00A1               	movwf	___awdiv@sign
  5192     0B7D                     l3393:
  5193     0B7D  1FF6               	btfss	___awdiv@dividend+1,7
  5194     0B7E  2B80               	goto	u3521
  5195     0B7F  2B81               	goto	u3520
  5196     0B80                     u3521:
  5197     0B80  2B88               	goto	l3399
  5198     0B81                     u3520:
  5199     0B81                     l3395:
  5200     0B81  09F5               	comf	___awdiv@dividend,f
  5201     0B82  09F6               	comf	___awdiv@dividend+1,f
  5202     0B83  0AF5               	incf	___awdiv@dividend,f
  5203     0B84  1903               	skipnz
  5204     0B85  0AF6               	incf	___awdiv@dividend+1,f
  5205     0B86                     l3397:
  5206     0B86  3001               	movlw	1
  5207     0B87  06A1               	xorwf	___awdiv@sign,f
  5208     0B88                     l3399:
  5209     0B88  01A2               	clrf	___awdiv@quotient
  5210     0B89  01A3               	clrf	___awdiv@quotient+1
  5211     0B8A                     l3401:
  5212     0B8A  0873               	movf	___awdiv@divisor,w
  5213     0B8B  0474               	iorwf	___awdiv@divisor+1,w
  5214     0B8C  1903               	btfsc	3,2
  5215     0B8D  2B8F               	goto	u3531
  5216     0B8E  2B90               	goto	u3530
  5217     0B8F                     u3531:
  5218     0B8F  2BC5               	goto	l3421
  5219     0B90                     u3530:
  5220     0B90                     l3403:
  5221     0B90  3001               	movlw	1
  5222     0B91  00A0               	movwf	___awdiv@counter
  5223     0B92  2B9C               	goto	l3409
  5224     0B93                     l3405:
  5225     0B93  3001               	movlw	1
  5226     0B94                     u3545:
  5227     0B94  1003               	clrc
  5228     0B95  0DF3               	rlf	___awdiv@divisor,f
  5229     0B96  0DF4               	rlf	___awdiv@divisor+1,f
  5230     0B97  3EFF               	addlw	-1
  5231     0B98  1D03               	skipz
  5232     0B99  2B94               	goto	u3545
  5233     0B9A                     l3407:
  5234     0B9A  3001               	movlw	1
  5235     0B9B  07A0               	addwf	___awdiv@counter,f
  5236     0B9C                     l3409:
  5237     0B9C  1FF4               	btfss	___awdiv@divisor+1,7
  5238     0B9D  2B9F               	goto	u3551
  5239     0B9E  2BA0               	goto	u3550
  5240     0B9F                     u3551:
  5241     0B9F  2B93               	goto	l3405
  5242     0BA0                     u3550:
  5243     0BA0                     l3411:
  5244     0BA0  3001               	movlw	1
  5245     0BA1                     u3565:
  5246     0BA1  1003               	clrc
  5247     0BA2  0DA2               	rlf	___awdiv@quotient,f
  5248     0BA3  0DA3               	rlf	___awdiv@quotient+1,f
  5249     0BA4  3EFF               	addlw	-1
  5250     0BA5  1D03               	skipz
  5251     0BA6  2BA1               	goto	u3565
  5252     0BA7  0874               	movf	___awdiv@divisor+1,w
  5253     0BA8  0276               	subwf	___awdiv@dividend+1,w
  5254     0BA9  1D03               	skipz
  5255     0BAA  2BAD               	goto	u3575
  5256     0BAB  0873               	movf	___awdiv@divisor,w
  5257     0BAC  0275               	subwf	___awdiv@dividend,w
  5258     0BAD                     u3575:
  5259     0BAD  1C03               	skipc
  5260     0BAE  2BB0               	goto	u3571
  5261     0BAF  2BB1               	goto	u3570
  5262     0BB0                     u3571:
  5263     0BB0  2BB8               	goto	l3417
  5264     0BB1                     u3570:
  5265     0BB1                     l3413:
  5266     0BB1  0873               	movf	___awdiv@divisor,w
  5267     0BB2  02F5               	subwf	___awdiv@dividend,f
  5268     0BB3  0874               	movf	___awdiv@divisor+1,w
  5269     0BB4  1C03               	skipc
  5270     0BB5  03F6               	decf	___awdiv@dividend+1,f
  5271     0BB6  02F6               	subwf	___awdiv@dividend+1,f
  5272     0BB7                     l3415:
  5273     0BB7  1422               	bsf	___awdiv@quotient,0
  5274     0BB8                     l3417:
  5275     0BB8  3001               	movlw	1
  5276     0BB9                     u3585:
  5277     0BB9  1003               	clrc
  5278     0BBA  0CF4               	rrf	___awdiv@divisor+1,f
  5279     0BBB  0CF3               	rrf	___awdiv@divisor,f
  5280     0BBC  3EFF               	addlw	-1
  5281     0BBD  1D03               	skipz
  5282     0BBE  2BB9               	goto	u3585
  5283     0BBF                     l3419:
  5284     0BBF  3001               	movlw	1
  5285     0BC0  02A0               	subwf	___awdiv@counter,f
  5286     0BC1  1D03               	btfss	3,2
  5287     0BC2  2BC4               	goto	u3591
  5288     0BC3  2BC5               	goto	u3590
  5289     0BC4                     u3591:
  5290     0BC4  2BA0               	goto	l3411
  5291     0BC5                     u3590:
  5292     0BC5                     l3421:
  5293     0BC5  0821               	movf	___awdiv@sign,w
  5294     0BC6  1903               	btfsc	3,2
  5295     0BC7  2BC9               	goto	u3601
  5296     0BC8  2BCA               	goto	u3600
  5297     0BC9                     u3601:
  5298     0BC9  2BCF               	goto	l3425
  5299     0BCA                     u3600:
  5300     0BCA                     l3423:
  5301     0BCA  09A2               	comf	___awdiv@quotient,f
  5302     0BCB  09A3               	comf	___awdiv@quotient+1,f
  5303     0BCC  0AA2               	incf	___awdiv@quotient,f
  5304     0BCD  1903               	skipnz
  5305     0BCE  0AA3               	incf	___awdiv@quotient+1,f
  5306     0BCF                     l3425:
  5307     0BCF  0823               	movf	___awdiv@quotient+1,w
  5308     0BD0  00F4               	movwf	?___awdiv+1
  5309     0BD1  0822               	movf	___awdiv@quotient,w
  5310     0BD2  00F3               	movwf	?___awdiv
  5311     0BD3                     l608:
  5312     0BD3  0008               	return
  5313     0BD4                     __end_of___awdiv:
  5314                           
  5315                           	psect	text17
  5316     09E1                     __ptext17:	
  5317 ;; *************** function _adc_read *****************
  5318 ;; Defined at:
  5319 ;;		line 18 in file "adc.c"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;  channel         2    3[COMMON] int 
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;  value_adc       2    5[COMMON] unsigned int 
  5324 ;; Return value:  Size  Location     Type
  5325 ;;                  2    3[COMMON] unsigned int 
  5326 ;; Registers used:
  5327 ;;		wreg, status,2, status,0
  5328 ;; Tracked objects:
  5329 ;;		On entry : 0/0
  5330 ;;		On exit  : 0/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5333 ;;      Params:         2       0       0       0       0
  5334 ;;      Locals:         2       0       0       0       0
  5335 ;;      Temps:          0       4       0       0       0
  5336 ;;      Totals:         4       4       0       0       0
  5337 ;;Total ram usage:        8 bytes
  5338 ;; Hardware stack levels used: 1
  5339 ;; Hardware stack levels required when called: 1
  5340 ;; This function calls:
  5341 ;;		Nothing
  5342 ;; This function is called by:
  5343 ;;		_monitoreo
  5344 ;; This function uses a non-reentrant model
  5345 ;;
  5346                           
  5347     09E1                     _adc_read:	
  5348                           ;psect for function _adc_read
  5349                           
  5350     09E1                     l3605:	
  5351                           ;incstack = 0
  5352                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  5353                           
  5354                           
  5355                           ;adc.c: 20:     ADCON0bits.CHS = (0x0F & channel);
  5356     09E1  0873               	movf	adc_read@channel,w
  5357     09E2  390F               	andlw	15
  5358     09E3  1283               	bcf	3,5	;RP0=0, select bank0
  5359     09E4  1303               	bcf	3,6	;RP1=0, select bank0
  5360     09E5  00A0               	movwf	??_adc_read
  5361     09E6  0DA0               	rlf	??_adc_read,f
  5362     09E7  0DA0               	rlf	??_adc_read,f
  5363     09E8  081F               	movf	31,w	;volatile
  5364     09E9  0620               	xorwf	??_adc_read,w
  5365     09EA  39C3               	andlw	-61
  5366     09EB  0620               	xorwf	??_adc_read,w
  5367     09EC  009F               	movwf	31	;volatile
  5368     09ED                     l3607:
  5369                           
  5370                           ;adc.c: 22:     ADCON0bits.ADON = 1;
  5371     09ED  141F               	bsf	31,0	;volatile
  5372     09EE                     l3609:
  5373                           
  5374                           ;adc.c: 23:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  5375     09EE  3013               	movlw	19
  5376     09EF  1283               	bcf	3,5	;RP0=0, select bank0
  5377     09F0  1303               	bcf	3,6	;RP1=0, select bank0
  5378     09F1  00A0               	movwf	??_adc_read
  5379     09F2                     u4827:
  5380     09F2  0BA0               	decfsz	??_adc_read,f
  5381     09F3  29F2               	goto	u4827
  5382     09F4                     l3611:
  5383                           
  5384                           ;adc.c: 24:     ADCON0bits.GO_DONE = 1;
  5385     09F4  1283               	bcf	3,5	;RP0=0, select bank0
  5386     09F5  1303               	bcf	3,6	;RP1=0, select bank0
  5387     09F6  149F               	bsf	31,1	;volatile
  5388     09F7                     l16:	
  5389                           ;adc.c: 25:     while (ADCON0bits.GO_DONE);
  5390                           
  5391     09F7  189F               	btfsc	31,1	;volatile
  5392     09F8  29FA               	goto	u3911
  5393     09F9  29FB               	goto	u3910
  5394     09FA                     u3911:
  5395     09FA  29F7               	goto	l16
  5396     09FB                     u3910:
  5397     09FB                     l3613:
  5398                           
  5399                           ;adc.c: 26:     unsigned int value_adc = ADRESH;
  5400     09FB  081E               	movf	30,w	;volatile
  5401     09FC  00A0               	movwf	??_adc_read
  5402     09FD  01A1               	clrf	??_adc_read+1
  5403     09FE  0820               	movf	??_adc_read,w
  5404     09FF  00F5               	movwf	adc_read@value_adc
  5405     0A00  0821               	movf	??_adc_read+1,w
  5406     0A01  00F6               	movwf	adc_read@value_adc+1
  5407     0A02                     l3615:
  5408                           
  5409                           ;adc.c: 27:     value_adc = (value_adc << 8) + ADRESL;
  5410     0A02  0875               	movf	adc_read@value_adc,w
  5411     0A03  00A1               	movwf	??_adc_read+1
  5412     0A04  01A0               	clrf	??_adc_read
  5413     0A05  1683               	bsf	3,5	;RP0=1, select bank1
  5414     0A06  1303               	bcf	3,6	;RP1=0, select bank1
  5415     0A07  081E               	movf	30,w	;volatile
  5416     0A08  1283               	bcf	3,5	;RP0=0, select bank0
  5417     0A09  1303               	bcf	3,6	;RP1=0, select bank0
  5418     0A0A  0720               	addwf	??_adc_read,w
  5419     0A0B  00A2               	movwf	??_adc_read+2
  5420     0A0C  3000               	movlw	0
  5421     0A0D  1803               	skipnc
  5422     0A0E  3001               	movlw	1
  5423     0A0F  0721               	addwf	??_adc_read+1,w
  5424     0A10  00A3               	movwf	??_adc_read+3
  5425     0A11  0822               	movf	??_adc_read+2,w
  5426     0A12  00F5               	movwf	adc_read@value_adc
  5427     0A13  0823               	movf	??_adc_read+3,w
  5428     0A14  00F6               	movwf	adc_read@value_adc+1
  5429     0A15                     l3617:
  5430                           
  5431                           ;adc.c: 28:     return value_adc;
  5432     0A15  0876               	movf	adc_read@value_adc+1,w
  5433     0A16  00F4               	movwf	?_adc_read+1
  5434     0A17  0875               	movf	adc_read@value_adc,w
  5435     0A18  00F3               	movwf	?_adc_read
  5436     0A19                     l19:
  5437     0A19  0008               	return
  5438     0A1A                     __end_of_adc_read:
  5439                           
  5440                           	psect	text18
  5441     0DB2                     __ptext18:	
  5442 ;; *************** function ___xxtofl *****************
  5443 ;; Defined at:
  5444 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\xxtofl.c"
  5445 ;; Parameters:    Size  Location     Type
  5446 ;;  sign            1    wreg     unsigned char 
  5447 ;;  val             4    3[COMMON] long 
  5448 ;; Auto vars:     Size  Location     Type
  5449 ;;  sign            1    4[BANK0 ] unsigned char 
  5450 ;;  arg             4    6[BANK0 ] unsigned long 
  5451 ;;  exp             1    5[BANK0 ] unsigned char 
  5452 ;; Return value:  Size  Location     Type
  5453 ;;                  4    3[COMMON] unsigned char 
  5454 ;; Registers used:
  5455 ;;		wreg, status,2, status,0
  5456 ;; Tracked objects:
  5457 ;;		On entry : 0/0
  5458 ;;		On exit  : 0/0
  5459 ;;		Unchanged: 0/0
  5460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5461 ;;      Params:         4       0       0       0       0
  5462 ;;      Locals:         0       6       0       0       0
  5463 ;;      Temps:          0       4       0       0       0
  5464 ;;      Totals:         4      10       0       0       0
  5465 ;;Total ram usage:       14 bytes
  5466 ;; Hardware stack levels used: 1
  5467 ;; Hardware stack levels required when called: 1
  5468 ;; This function calls:
  5469 ;;		Nothing
  5470 ;; This function is called by:
  5471 ;;		_monitoreo
  5472 ;; This function uses a non-reentrant model
  5473 ;;
  5474                           
  5475     0DB2                     ___xxtofl:	
  5476                           ;psect for function ___xxtofl
  5477                           
  5478                           
  5479                           ;incstack = 0
  5480                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5481                           ;___xxtofl@sign stored from wreg
  5482     0DB2  1283               	bcf	3,5	;RP0=0, select bank0
  5483     0DB3  1303               	bcf	3,6	;RP1=0, select bank0
  5484     0DB4  00A4               	movwf	___xxtofl@sign
  5485     0DB5                     l3817:
  5486     0DB5  0824               	movf	___xxtofl@sign,w
  5487     0DB6  1903               	btfsc	3,2
  5488     0DB7  2DB9               	goto	u4271
  5489     0DB8  2DBA               	goto	u4270
  5490     0DB9                     u4271:
  5491     0DB9  2DCE               	goto	l3823
  5492     0DBA                     u4270:
  5493     0DBA                     l3819:
  5494     0DBA  1FF6               	btfss	___xxtofl@val+3,7
  5495     0DBB  2DBD               	goto	u4281
  5496     0DBC  2DBE               	goto	u4280
  5497     0DBD                     u4281:
  5498     0DBD  2DCE               	goto	l3823
  5499     0DBE                     u4280:
  5500     0DBE                     l3821:
  5501     0DBE  0973               	comf	___xxtofl@val,w
  5502     0DBF  00A6               	movwf	___xxtofl@arg
  5503     0DC0  0974               	comf	___xxtofl@val+1,w
  5504     0DC1  00A7               	movwf	___xxtofl@arg+1
  5505     0DC2  0975               	comf	___xxtofl@val+2,w
  5506     0DC3  00A8               	movwf	___xxtofl@arg+2
  5507     0DC4  0976               	comf	___xxtofl@val+3,w
  5508     0DC5  00A9               	movwf	___xxtofl@arg+3
  5509     0DC6  0AA6               	incf	___xxtofl@arg,f
  5510     0DC7  1903               	skipnz
  5511     0DC8  0AA7               	incf	___xxtofl@arg+1,f
  5512     0DC9  1903               	skipnz
  5513     0DCA  0AA8               	incf	___xxtofl@arg+2,f
  5514     0DCB  1903               	skipnz
  5515     0DCC  0AA9               	incf	___xxtofl@arg+3,f
  5516     0DCD  2DD6               	goto	l896
  5517     0DCE                     l3823:
  5518     0DCE  0876               	movf	___xxtofl@val+3,w
  5519     0DCF  00A9               	movwf	___xxtofl@arg+3
  5520     0DD0  0875               	movf	___xxtofl@val+2,w
  5521     0DD1  00A8               	movwf	___xxtofl@arg+2
  5522     0DD2  0874               	movf	___xxtofl@val+1,w
  5523     0DD3  00A7               	movwf	___xxtofl@arg+1
  5524     0DD4  0873               	movf	___xxtofl@val,w
  5525     0DD5  00A6               	movwf	___xxtofl@arg
  5526     0DD6                     l896:
  5527     0DD6  0876               	movf	___xxtofl@val+3,w
  5528     0DD7  0475               	iorwf	___xxtofl@val+2,w
  5529     0DD8  0474               	iorwf	___xxtofl@val+1,w
  5530     0DD9  0473               	iorwf	___xxtofl@val,w
  5531     0DDA  1D03               	skipz
  5532     0DDB  2DDD               	goto	u4291
  5533     0DDC  2DDE               	goto	u4290
  5534     0DDD                     u4291:
  5535     0DDD  2DE7               	goto	l897
  5536     0DDE                     u4290:
  5537     0DDE                     l3825:
  5538     0DDE  3000               	movlw	0
  5539     0DDF  00F6               	movwf	?___xxtofl+3
  5540     0DE0  3000               	movlw	0
  5541     0DE1  00F5               	movwf	?___xxtofl+2
  5542     0DE2  3000               	movlw	0
  5543     0DE3  00F4               	movwf	?___xxtofl+1
  5544     0DE4  3000               	movlw	0
  5545     0DE5  00F3               	movwf	?___xxtofl
  5546     0DE6  2E67               	goto	l898
  5547     0DE7                     l897:
  5548     0DE7  3096               	movlw	150
  5549     0DE8  00A5               	movwf	___xxtofl@exp
  5550     0DE9  2DF5               	goto	l3831
  5551     0DEA                     l3829:
  5552     0DEA  3001               	movlw	1
  5553     0DEB  07A5               	addwf	___xxtofl@exp,f
  5554     0DEC  3001               	movlw	1
  5555     0DED                     u4305:
  5556     0DED  1003               	clrc
  5557     0DEE  0CA9               	rrf	___xxtofl@arg+3,f
  5558     0DEF  0CA8               	rrf	___xxtofl@arg+2,f
  5559     0DF0  0CA7               	rrf	___xxtofl@arg+1,f
  5560     0DF1  0CA6               	rrf	___xxtofl@arg,f
  5561     0DF2  3EFF               	addlw	-1
  5562     0DF3  1D03               	skipz
  5563     0DF4  2DED               	goto	u4305
  5564     0DF5                     l3831:
  5565     0DF5  30FE               	movlw	254
  5566     0DF6  0529               	andwf	___xxtofl@arg+3,w
  5567     0DF7  1D03               	btfss	3,2
  5568     0DF8  2DFA               	goto	u4311
  5569     0DF9  2DFB               	goto	u4310
  5570     0DFA                     u4311:
  5571     0DFA  2DEA               	goto	l3829
  5572     0DFB                     u4310:
  5573     0DFB  2E15               	goto	l902
  5574     0DFC                     l3833:
  5575     0DFC  3001               	movlw	1
  5576     0DFD  07A5               	addwf	___xxtofl@exp,f
  5577     0DFE                     l3835:
  5578     0DFE  3001               	movlw	1
  5579     0DFF  07A6               	addwf	___xxtofl@arg,f
  5580     0E00  3000               	movlw	0
  5581     0E01  1803               	skipnc
  5582     0E02  3001               	movlw	1
  5583     0E03  07A7               	addwf	___xxtofl@arg+1,f
  5584     0E04  3000               	movlw	0
  5585     0E05  1803               	skipnc
  5586     0E06  3001               	movlw	1
  5587     0E07  07A8               	addwf	___xxtofl@arg+2,f
  5588     0E08  3000               	movlw	0
  5589     0E09  1803               	skipnc
  5590     0E0A  3001               	movlw	1
  5591     0E0B  07A9               	addwf	___xxtofl@arg+3,f
  5592     0E0C                     l3837:
  5593     0E0C  3001               	movlw	1
  5594     0E0D                     u4325:
  5595     0E0D  1003               	clrc
  5596     0E0E  0CA9               	rrf	___xxtofl@arg+3,f
  5597     0E0F  0CA8               	rrf	___xxtofl@arg+2,f
  5598     0E10  0CA7               	rrf	___xxtofl@arg+1,f
  5599     0E11  0CA6               	rrf	___xxtofl@arg,f
  5600     0E12  3EFF               	addlw	-1
  5601     0E13  1D03               	skipz
  5602     0E14  2E0D               	goto	u4325
  5603     0E15                     l902:
  5604     0E15  30FF               	movlw	255
  5605     0E16  0529               	andwf	___xxtofl@arg+3,w
  5606     0E17  1D03               	btfss	3,2
  5607     0E18  2E1A               	goto	u4331
  5608     0E19  2E1B               	goto	u4330
  5609     0E1A                     u4331:
  5610     0E1A  2DFC               	goto	l3833
  5611     0E1B                     u4330:
  5612     0E1B  2E27               	goto	l3841
  5613     0E1C                     l3839:
  5614     0E1C  3001               	movlw	1
  5615     0E1D  02A5               	subwf	___xxtofl@exp,f
  5616     0E1E  3001               	movlw	1
  5617     0E1F  00A0               	movwf	??___xxtofl
  5618     0E20                     u4345:
  5619     0E20  1003               	clrc
  5620     0E21  0DA6               	rlf	___xxtofl@arg,f
  5621     0E22  0DA7               	rlf	___xxtofl@arg+1,f
  5622     0E23  0DA8               	rlf	___xxtofl@arg+2,f
  5623     0E24  0DA9               	rlf	___xxtofl@arg+3,f
  5624     0E25  0BA0               	decfsz	??___xxtofl,f
  5625     0E26  2E20               	goto	u4345
  5626     0E27                     l3841:
  5627     0E27  1BA8               	btfsc	___xxtofl@arg+2,7
  5628     0E28  2E2A               	goto	u4351
  5629     0E29  2E2B               	goto	u4350
  5630     0E2A                     u4351:
  5631     0E2A  2E31               	goto	l909
  5632     0E2B                     u4350:
  5633     0E2B                     l3843:
  5634     0E2B  3002               	movlw	2
  5635     0E2C  0225               	subwf	___xxtofl@exp,w
  5636     0E2D  1803               	skipnc
  5637     0E2E  2E30               	goto	u4361
  5638     0E2F  2E31               	goto	u4360
  5639     0E30                     u4361:
  5640     0E30  2E1C               	goto	l3839
  5641     0E31                     u4360:
  5642     0E31                     l909:
  5643     0E31  1825               	btfsc	___xxtofl@exp,0
  5644     0E32  2E34               	goto	u4371
  5645     0E33  2E35               	goto	u4370
  5646     0E34                     u4371:
  5647     0E34  2E3D               	goto	l910
  5648     0E35                     u4370:
  5649     0E35                     l3845:
  5650     0E35  30FF               	movlw	255
  5651     0E36  05A6               	andwf	___xxtofl@arg,f
  5652     0E37  30FF               	movlw	255
  5653     0E38  05A7               	andwf	___xxtofl@arg+1,f
  5654     0E39  307F               	movlw	127
  5655     0E3A  05A8               	andwf	___xxtofl@arg+2,f
  5656     0E3B  30FF               	movlw	255
  5657     0E3C  05A9               	andwf	___xxtofl@arg+3,f
  5658     0E3D                     l910:
  5659     0E3D  1003               	clrc
  5660     0E3E  0CA5               	rrf	___xxtofl@exp,f
  5661     0E3F                     l3847:
  5662     0E3F  0825               	movf	___xxtofl@exp,w
  5663     0E40  00A0               	movwf	??___xxtofl
  5664     0E41  01A1               	clrf	??___xxtofl+1
  5665     0E42  01A2               	clrf	??___xxtofl+2
  5666     0E43  01A3               	clrf	??___xxtofl+3
  5667     0E44  3018               	movlw	24
  5668     0E45                     u4385:
  5669     0E45  1003               	clrc
  5670     0E46  0DA0               	rlf	??___xxtofl,f
  5671     0E47  0DA1               	rlf	??___xxtofl+1,f
  5672     0E48  0DA2               	rlf	??___xxtofl+2,f
  5673     0E49  0DA3               	rlf	??___xxtofl+3,f
  5674     0E4A                     u4380:
  5675     0E4A  3EFF               	addlw	-1
  5676     0E4B  1D03               	skipz
  5677     0E4C  2E45               	goto	u4385
  5678     0E4D  0820               	movf	??___xxtofl,w
  5679     0E4E  04A6               	iorwf	___xxtofl@arg,f
  5680     0E4F  0821               	movf	??___xxtofl+1,w
  5681     0E50  04A7               	iorwf	___xxtofl@arg+1,f
  5682     0E51  0822               	movf	??___xxtofl+2,w
  5683     0E52  04A8               	iorwf	___xxtofl@arg+2,f
  5684     0E53  0823               	movf	??___xxtofl+3,w
  5685     0E54  04A9               	iorwf	___xxtofl@arg+3,f
  5686     0E55                     l3849:
  5687     0E55  0824               	movf	___xxtofl@sign,w
  5688     0E56  1903               	btfsc	3,2
  5689     0E57  2E59               	goto	u4391
  5690     0E58  2E5A               	goto	u4390
  5691     0E59                     u4391:
  5692     0E59  2E5F               	goto	l3855
  5693     0E5A                     u4390:
  5694     0E5A                     l3851:
  5695     0E5A  1FF6               	btfss	___xxtofl@val+3,7
  5696     0E5B  2E5D               	goto	u4401
  5697     0E5C  2E5E               	goto	u4400
  5698     0E5D                     u4401:
  5699     0E5D  2E5F               	goto	l3855
  5700     0E5E                     u4400:
  5701     0E5E                     l3853:
  5702     0E5E  17A9               	bsf	___xxtofl@arg+3,7
  5703     0E5F                     l3855:
  5704     0E5F  0829               	movf	___xxtofl@arg+3,w
  5705     0E60  00F6               	movwf	?___xxtofl+3
  5706     0E61  0828               	movf	___xxtofl@arg+2,w
  5707     0E62  00F5               	movwf	?___xxtofl+2
  5708     0E63  0827               	movf	___xxtofl@arg+1,w
  5709     0E64  00F4               	movwf	?___xxtofl+1
  5710     0E65  0826               	movf	___xxtofl@arg,w
  5711     0E66  00F3               	movwf	?___xxtofl
  5712     0E67                     l898:
  5713     0E67  0008               	return
  5714     0E68                     __end_of___xxtofl:
  5715                           
  5716                           	psect	text19
  5717     077E                     __ptext19:	
  5718 ;; *************** function ___fltol *****************
  5719 ;; Defined at:
  5720 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fltol.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;  f1              4   36[BANK0 ] unsigned char 
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;  exp1            1   45[BANK0 ] unsigned char 
  5725 ;;  sign1           1   44[BANK0 ] unsigned char 
  5726 ;; Return value:  Size  Location     Type
  5727 ;;                  4   36[BANK0 ] long 
  5728 ;; Registers used:
  5729 ;;		wreg, status,2, status,0
  5730 ;; Tracked objects:
  5731 ;;		On entry : 0/0
  5732 ;;		On exit  : 0/0
  5733 ;;		Unchanged: 0/0
  5734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5735 ;;      Params:         0       4       0       0       0
  5736 ;;      Locals:         0       2       0       0       0
  5737 ;;      Temps:          0       4       0       0       0
  5738 ;;      Totals:         0      10       0       0       0
  5739 ;;Total ram usage:       10 bytes
  5740 ;; Hardware stack levels used: 1
  5741 ;; Hardware stack levels required when called: 1
  5742 ;; This function calls:
  5743 ;;		Nothing
  5744 ;; This function is called by:
  5745 ;;		_monitoreo
  5746 ;; This function uses a non-reentrant model
  5747 ;;
  5748                           
  5749     077E                     ___fltol:	
  5750                           ;psect for function ___fltol
  5751                           
  5752     077E                     l2661:	
  5753                           ;incstack = 0
  5754                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5755                           
  5756     077E  1003               	clrc
  5757     077F  1283               	bcf	3,5	;RP0=0, select bank0
  5758     0780  1303               	bcf	3,6	;RP1=0, select bank0
  5759     0781  0D46               	rlf	___fltol@f1+2,w
  5760     0782  0D47               	rlf	___fltol@f1+3,w
  5761     0783  00CD               	movwf	___fltol@exp1
  5762     0784  084D               	movf	___fltol@exp1,w
  5763     0785  1D03               	btfss	3,2
  5764     0786  2F88               	goto	u2551
  5765     0787  2F89               	goto	u2550
  5766     0788                     u2551:
  5767     0788  2F92               	goto	l2667
  5768     0789                     u2550:
  5769     0789                     l2663:
  5770     0789  3000               	movlw	0
  5771     078A  00C7               	movwf	?___fltol+3
  5772     078B  3000               	movlw	0
  5773     078C  00C6               	movwf	?___fltol+2
  5774     078D  3000               	movlw	0
  5775     078E  00C5               	movwf	?___fltol+1
  5776     078F  3000               	movlw	0
  5777     0790  00C4               	movwf	?___fltol
  5778     0791  2FF3               	goto	l649
  5779     0792                     l2667:
  5780     0792  0844               	movf	___fltol@f1,w
  5781     0793  00C8               	movwf	??___fltol
  5782     0794  0845               	movf	___fltol@f1+1,w
  5783     0795  00C9               	movwf	??___fltol+1
  5784     0796  0846               	movf	___fltol@f1+2,w
  5785     0797  00CA               	movwf	??___fltol+2
  5786     0798  0847               	movf	___fltol@f1+3,w
  5787     0799  00CB               	movwf	??___fltol+3
  5788     079A  301F               	movlw	31
  5789     079B                     u2565:
  5790     079B  1003               	clrc
  5791     079C  0CCB               	rrf	??___fltol+3,f
  5792     079D  0CCA               	rrf	??___fltol+2,f
  5793     079E  0CC9               	rrf	??___fltol+1,f
  5794     079F  0CC8               	rrf	??___fltol,f
  5795     07A0                     u2560:
  5796     07A0  3EFF               	addlw	-1
  5797     07A1  1D03               	skipz
  5798     07A2  2F9B               	goto	u2565
  5799     07A3  0848               	movf	??___fltol,w
  5800     07A4  00CC               	movwf	___fltol@sign1
  5801     07A5                     l2669:
  5802     07A5  17C6               	bsf	___fltol@f1+2,7
  5803     07A6                     l2671:
  5804     07A6  30FF               	movlw	255
  5805     07A7  05C4               	andwf	___fltol@f1,f
  5806     07A8  30FF               	movlw	255
  5807     07A9  05C5               	andwf	___fltol@f1+1,f
  5808     07AA  30FF               	movlw	255
  5809     07AB  05C6               	andwf	___fltol@f1+2,f
  5810     07AC  3000               	movlw	0
  5811     07AD  05C7               	andwf	___fltol@f1+3,f
  5812     07AE                     l2673:
  5813     07AE  3096               	movlw	150
  5814     07AF  02CD               	subwf	___fltol@exp1,f
  5815     07B0                     l2675:
  5816     07B0  1FCD               	btfss	___fltol@exp1,7
  5817     07B1  2FB3               	goto	u2571
  5818     07B2  2FB4               	goto	u2570
  5819     07B3                     u2571:
  5820     07B3  2FCC               	goto	l2685
  5821     07B4                     u2570:
  5822     07B4                     l2677:
  5823     07B4  084D               	movf	___fltol@exp1,w
  5824     07B5  3A80               	xorlw	128
  5825     07B6  3E97               	addlw	151
  5826     07B7  1803               	skipnc
  5827     07B8  2FBA               	goto	u2581
  5828     07B9  2FBB               	goto	u2580
  5829     07BA                     u2581:
  5830     07BA  2FBC               	goto	l2683
  5831     07BB                     u2580:
  5832     07BB  2F89               	goto	l2663
  5833     07BC                     l2683:
  5834     07BC  3001               	movlw	1
  5835     07BD                     u2595:
  5836     07BD  1003               	clrc
  5837     07BE  0CC7               	rrf	___fltol@f1+3,f
  5838     07BF  0CC6               	rrf	___fltol@f1+2,f
  5839     07C0  0CC5               	rrf	___fltol@f1+1,f
  5840     07C1  0CC4               	rrf	___fltol@f1,f
  5841     07C2  3EFF               	addlw	-1
  5842     07C3  1D03               	skipz
  5843     07C4  2FBD               	goto	u2595
  5844     07C5  3001               	movlw	1
  5845     07C6  07CD               	addwf	___fltol@exp1,f
  5846     07C7  1D03               	btfss	3,2
  5847     07C8  2FCA               	goto	u2601
  5848     07C9  2FCB               	goto	u2600
  5849     07CA                     u2601:
  5850     07CA  2FBC               	goto	l2683
  5851     07CB                     u2600:
  5852     07CB  2FE3               	goto	l2693
  5853     07CC                     l2685:
  5854     07CC  3020               	movlw	32
  5855     07CD  024D               	subwf	___fltol@exp1,w
  5856     07CE  1C03               	skipc
  5857     07CF  2FD1               	goto	u2611
  5858     07D0  2FD2               	goto	u2610
  5859     07D1                     u2611:
  5860     07D1  2FDE               	goto	l656
  5861     07D2                     u2610:
  5862     07D2  2F89               	goto	l2663
  5863     07D3                     l2691:
  5864     07D3  3001               	movlw	1
  5865     07D4  00C8               	movwf	??___fltol
  5866     07D5                     u2625:
  5867     07D5  1003               	clrc
  5868     07D6  0DC4               	rlf	___fltol@f1,f
  5869     07D7  0DC5               	rlf	___fltol@f1+1,f
  5870     07D8  0DC6               	rlf	___fltol@f1+2,f
  5871     07D9  0DC7               	rlf	___fltol@f1+3,f
  5872     07DA  0BC8               	decfsz	??___fltol,f
  5873     07DB  2FD5               	goto	u2625
  5874     07DC  3001               	movlw	1
  5875     07DD  02CD               	subwf	___fltol@exp1,f
  5876     07DE                     l656:
  5877     07DE  084D               	movf	___fltol@exp1,w
  5878     07DF  1D03               	btfss	3,2
  5879     07E0  2FE2               	goto	u2631
  5880     07E1  2FE3               	goto	u2630
  5881     07E2                     u2631:
  5882     07E2  2FD3               	goto	l2691
  5883     07E3                     u2630:
  5884     07E3                     l2693:
  5885     07E3  084C               	movf	___fltol@sign1,w
  5886     07E4  1903               	btfsc	3,2
  5887     07E5  2FE7               	goto	u2641
  5888     07E6  2FE8               	goto	u2640
  5889     07E7                     u2641:
  5890     07E7  2FF3               	goto	l659
  5891     07E8                     u2640:
  5892     07E8                     l2695:
  5893     07E8  09C4               	comf	___fltol@f1,f
  5894     07E9  09C5               	comf	___fltol@f1+1,f
  5895     07EA  09C6               	comf	___fltol@f1+2,f
  5896     07EB  09C7               	comf	___fltol@f1+3,f
  5897     07EC  0AC4               	incf	___fltol@f1,f
  5898     07ED  1903               	skipnz
  5899     07EE  0AC5               	incf	___fltol@f1+1,f
  5900     07EF  1903               	skipnz
  5901     07F0  0AC6               	incf	___fltol@f1+2,f
  5902     07F1  1903               	skipnz
  5903     07F2  0AC7               	incf	___fltol@f1+3,f
  5904     07F3                     l659:
  5905     07F3                     l649:
  5906     07F3  0008               	return
  5907     07F4                     __end_of___fltol:
  5908                           
  5909                           	psect	text20
  5910     0047                     __ptext20:	
  5911 ;; *************** function ___flmul *****************
  5912 ;; Defined at:
  5913 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcmul.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;  b               4   10[BANK0 ] long 
  5916 ;;  a               4   14[BANK0 ] long 
  5917 ;; Auto vars:     Size  Location     Type
  5918 ;;  prod            4   30[BANK0 ] struct .
  5919 ;;  grs             4   24[BANK0 ] unsigned long 
  5920 ;;  temp            2   34[BANK0 ] struct .
  5921 ;;  bexp            1   29[BANK0 ] unsigned char 
  5922 ;;  aexp            1   28[BANK0 ] unsigned char 
  5923 ;;  sign            1   23[BANK0 ] unsigned char 
  5924 ;; Return value:  Size  Location     Type
  5925 ;;                  4   10[BANK0 ] unsigned char 
  5926 ;; Registers used:
  5927 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5928 ;; Tracked objects:
  5929 ;;		On entry : 0/0
  5930 ;;		On exit  : 0/0
  5931 ;;		Unchanged: 0/0
  5932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5933 ;;      Params:         0       8       0       0       0
  5934 ;;      Locals:         0      13       0       0       0
  5935 ;;      Temps:          0       5       0       0       0
  5936 ;;      Totals:         0      26       0       0       0
  5937 ;;Total ram usage:       26 bytes
  5938 ;; Hardware stack levels used: 1
  5939 ;; Hardware stack levels required when called: 2
  5940 ;; This function calls:
  5941 ;;		__Umul8_16
  5942 ;; This function is called by:
  5943 ;;		_monitoreo
  5944 ;; This function uses a non-reentrant model
  5945 ;;
  5946                           
  5947     0047                     ___flmul:	
  5948                           ;psect for function ___flmul
  5949                           
  5950     0047                     l2697:	
  5951                           ;incstack = 0
  5952                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5953                           
  5954     0047  1283               	bcf	3,5	;RP0=0, select bank0
  5955     0048  1303               	bcf	3,6	;RP1=0, select bank0
  5956     0049  082D               	movf	___flmul@b+3,w
  5957     004A  00B7               	movwf	___flmul@sign
  5958     004B                     l2699:
  5959     004B  3080               	movlw	128
  5960     004C  05B7               	andwf	___flmul@sign,f
  5961     004D                     l2701:
  5962     004D  082D               	movf	___flmul@b+3,w
  5963     004E  00B2               	movwf	??___flmul
  5964     004F  0732               	addwf	??___flmul,w
  5965     0050  00BD               	movwf	___flmul@bexp
  5966     0051                     l2703:
  5967     0051  1FAC               	btfss	___flmul@b+2,7
  5968     0052  2854               	goto	u2651
  5969     0053  2855               	goto	u2650
  5970     0054                     u2651:
  5971     0054  2856               	goto	l2707
  5972     0055                     u2650:
  5973     0055                     l2705:
  5974     0055  143D               	bsf	___flmul@bexp,0
  5975     0056                     l2707:
  5976     0056  083D               	movf	___flmul@bexp,w
  5977     0057  1903               	btfsc	3,2
  5978     0058  285A               	goto	u2661
  5979     0059  285B               	goto	u2660
  5980     005A                     u2661:
  5981     005A  286A               	goto	l2715
  5982     005B                     u2660:
  5983     005B                     l2709:
  5984     005B  0A3D               	incf	___flmul@bexp,w
  5985     005C  1D03               	btfss	3,2
  5986     005D  285F               	goto	u2671
  5987     005E  2860               	goto	u2670
  5988     005F                     u2671:
  5989     005F  2868               	goto	l2713
  5990     0060                     u2670:
  5991     0060                     l2711:
  5992     0060  3000               	movlw	0
  5993     0061  00AD               	movwf	___flmul@b+3
  5994     0062  3000               	movlw	0
  5995     0063  00AC               	movwf	___flmul@b+2
  5996     0064  3000               	movlw	0
  5997     0065  00AB               	movwf	___flmul@b+1
  5998     0066  3000               	movlw	0
  5999     0067  00AA               	movwf	___flmul@b
  6000     0068                     l2713:
  6001     0068  17AC               	bsf	___flmul@b+2,7
  6002     0069  2872               	goto	l2717
  6003     006A                     l2715:
  6004     006A  3000               	movlw	0
  6005     006B  00AD               	movwf	___flmul@b+3
  6006     006C  3000               	movlw	0
  6007     006D  00AC               	movwf	___flmul@b+2
  6008     006E  3000               	movlw	0
  6009     006F  00AB               	movwf	___flmul@b+1
  6010     0070  3000               	movlw	0
  6011     0071  00AA               	movwf	___flmul@b
  6012     0072                     l2717:
  6013     0072  0831               	movf	___flmul@a+3,w
  6014     0073  3980               	andlw	128
  6015     0074  06B7               	xorwf	___flmul@sign,f
  6016     0075                     l2719:
  6017     0075  0831               	movf	___flmul@a+3,w
  6018     0076  00B2               	movwf	??___flmul
  6019     0077  0732               	addwf	??___flmul,w
  6020     0078  00BC               	movwf	___flmul@aexp
  6021     0079                     l2721:
  6022     0079  1FB0               	btfss	___flmul@a+2,7
  6023     007A  287C               	goto	u2681
  6024     007B  287D               	goto	u2680
  6025     007C                     u2681:
  6026     007C  287E               	goto	l2725
  6027     007D                     u2680:
  6028     007D                     l2723:
  6029     007D  143C               	bsf	___flmul@aexp,0
  6030     007E                     l2725:
  6031     007E  083C               	movf	___flmul@aexp,w
  6032     007F  1903               	btfsc	3,2
  6033     0080  2882               	goto	u2691
  6034     0081  2883               	goto	u2690
  6035     0082                     u2691:
  6036     0082  2892               	goto	l2733
  6037     0083                     u2690:
  6038     0083                     l2727:
  6039     0083  0A3C               	incf	___flmul@aexp,w
  6040     0084  1D03               	btfss	3,2
  6041     0085  2887               	goto	u2701
  6042     0086  2888               	goto	u2700
  6043     0087                     u2701:
  6044     0087  2890               	goto	l2731
  6045     0088                     u2700:
  6046     0088                     l2729:
  6047     0088  3000               	movlw	0
  6048     0089  00B1               	movwf	___flmul@a+3
  6049     008A  3000               	movlw	0
  6050     008B  00B0               	movwf	___flmul@a+2
  6051     008C  3000               	movlw	0
  6052     008D  00AF               	movwf	___flmul@a+1
  6053     008E  3000               	movlw	0
  6054     008F  00AE               	movwf	___flmul@a
  6055     0090                     l2731:
  6056     0090  17B0               	bsf	___flmul@a+2,7
  6057     0091  289A               	goto	l2735
  6058     0092                     l2733:
  6059     0092  3000               	movlw	0
  6060     0093  00B1               	movwf	___flmul@a+3
  6061     0094  3000               	movlw	0
  6062     0095  00B0               	movwf	___flmul@a+2
  6063     0096  3000               	movlw	0
  6064     0097  00AF               	movwf	___flmul@a+1
  6065     0098  3000               	movlw	0
  6066     0099  00AE               	movwf	___flmul@a
  6067     009A                     l2735:
  6068     009A  083C               	movf	___flmul@aexp,w
  6069     009B  1903               	btfsc	3,2
  6070     009C  289E               	goto	u2711
  6071     009D  289F               	goto	u2710
  6072     009E                     u2711:
  6073     009E  28A4               	goto	l2739
  6074     009F                     u2710:
  6075     009F                     l2737:
  6076     009F  083D               	movf	___flmul@bexp,w
  6077     00A0  1D03               	btfss	3,2
  6078     00A1  28A3               	goto	u2721
  6079     00A2  28A4               	goto	u2720
  6080     00A3                     u2721:
  6081     00A3  28AD               	goto	l2743
  6082     00A4                     u2720:
  6083     00A4                     l2739:
  6084     00A4  3000               	movlw	0
  6085     00A5  00AD               	movwf	?___flmul+3
  6086     00A6  3000               	movlw	0
  6087     00A7  00AC               	movwf	?___flmul+2
  6088     00A8  3000               	movlw	0
  6089     00A9  00AB               	movwf	?___flmul+1
  6090     00AA  3000               	movlw	0
  6091     00AB  00AA               	movwf	?___flmul
  6092     00AC  2B88               	goto	l852
  6093     00AD                     l2743:
  6094     00AD  082A               	movf	___flmul@b,w
  6095     00AE  00F3               	movwf	__Umul8_16@multiplicand
  6096     00AF  0830               	movf	___flmul@a+2,w
  6097     00B0  120A  158A  20F6  120A  118A  	fcall	__Umul8_16
  6098     00B5  0874               	movf	?__Umul8_16+1,w
  6099     00B6  1283               	bcf	3,5	;RP0=0, select bank0
  6100     00B7  1303               	bcf	3,6	;RP1=0, select bank0
  6101     00B8  00C3               	movwf	___flmul@temp+1
  6102     00B9  0873               	movf	?__Umul8_16,w
  6103     00BA  00C2               	movwf	___flmul@temp
  6104     00BB                     l2745:
  6105     00BB  0842               	movf	___flmul@temp,w
  6106     00BC  00B2               	movwf	??___flmul
  6107     00BD  01B3               	clrf	??___flmul+1
  6108     00BE  01B4               	clrf	??___flmul+2
  6109     00BF  01B5               	clrf	??___flmul+3
  6110     00C0  0835               	movf	??___flmul+3,w
  6111     00C1  00BB               	movwf	___flmul@grs+3
  6112     00C2  0834               	movf	??___flmul+2,w
  6113     00C3  00BA               	movwf	___flmul@grs+2
  6114     00C4  0833               	movf	??___flmul+1,w
  6115     00C5  00B9               	movwf	___flmul@grs+1
  6116     00C6  0832               	movf	??___flmul,w
  6117     00C7  00B8               	movwf	___flmul@grs
  6118     00C8                     l2747:
  6119     00C8  0843               	movf	___flmul@temp+1,w
  6120     00C9  00B2               	movwf	??___flmul
  6121     00CA  01B3               	clrf	??___flmul+1
  6122     00CB  01B4               	clrf	??___flmul+2
  6123     00CC  01B5               	clrf	??___flmul+3
  6124     00CD  0835               	movf	??___flmul+3,w
  6125     00CE  00C1               	movwf	___flmul@prod+3
  6126     00CF  0834               	movf	??___flmul+2,w
  6127     00D0  00C0               	movwf	___flmul@prod+2
  6128     00D1  0833               	movf	??___flmul+1,w
  6129     00D2  00BF               	movwf	___flmul@prod+1
  6130     00D3  0832               	movf	??___flmul,w
  6131     00D4  00BE               	movwf	___flmul@prod
  6132     00D5  082B               	movf	___flmul@b+1,w
  6133     00D6  00F3               	movwf	__Umul8_16@multiplicand
  6134     00D7  082F               	movf	___flmul@a+1,w
  6135     00D8  120A  158A  20F6  120A  118A  	fcall	__Umul8_16
  6136     00DD  0874               	movf	?__Umul8_16+1,w
  6137     00DE  1283               	bcf	3,5	;RP0=0, select bank0
  6138     00DF  1303               	bcf	3,6	;RP1=0, select bank0
  6139     00E0  00C3               	movwf	___flmul@temp+1
  6140     00E1  0873               	movf	?__Umul8_16,w
  6141     00E2  00C2               	movwf	___flmul@temp
  6142     00E3                     l2749:
  6143     00E3  0842               	movf	___flmul@temp,w
  6144     00E4  00B2               	movwf	??___flmul
  6145     00E5  01B3               	clrf	??___flmul+1
  6146     00E6  01B4               	clrf	??___flmul+2
  6147     00E7  01B5               	clrf	??___flmul+3
  6148     00E8  0832               	movf	??___flmul,w
  6149     00E9  07B8               	addwf	___flmul@grs,f
  6150     00EA  0833               	movf	??___flmul+1,w
  6151     00EB  1103               	clrz
  6152     00EC  1803               	skipnc
  6153     00ED  3E01               	addlw	1
  6154     00EE  1903               	skipnz
  6155     00EF  28F1               	goto	u2731
  6156     00F0  07B9               	addwf	___flmul@grs+1,f
  6157     00F1                     u2731:
  6158     00F1  0834               	movf	??___flmul+2,w
  6159     00F2  1103               	clrz
  6160     00F3  1803               	skipnc
  6161     00F4  3E01               	addlw	1
  6162     00F5  1903               	skipnz
  6163     00F6  28F8               	goto	u2732
  6164     00F7  07BA               	addwf	___flmul@grs+2,f
  6165     00F8                     u2732:
  6166     00F8  0835               	movf	??___flmul+3,w
  6167     00F9  1103               	clrz
  6168     00FA  1803               	skipnc
  6169     00FB  3E01               	addlw	1
  6170     00FC  1903               	skipnz
  6171     00FD  28FF               	goto	u2733
  6172     00FE  07BB               	addwf	___flmul@grs+3,f
  6173     00FF                     u2733:
  6174     00FF                     l2751:
  6175     00FF  0843               	movf	___flmul@temp+1,w
  6176     0100  00B2               	movwf	??___flmul
  6177     0101  01B3               	clrf	??___flmul+1
  6178     0102  01B4               	clrf	??___flmul+2
  6179     0103  01B5               	clrf	??___flmul+3
  6180     0104  0832               	movf	??___flmul,w
  6181     0105  07BE               	addwf	___flmul@prod,f
  6182     0106  0833               	movf	??___flmul+1,w
  6183     0107  1103               	clrz
  6184     0108  1803               	skipnc
  6185     0109  3E01               	addlw	1
  6186     010A  1903               	skipnz
  6187     010B  290D               	goto	u2741
  6188     010C  07BF               	addwf	___flmul@prod+1,f
  6189     010D                     u2741:
  6190     010D  0834               	movf	??___flmul+2,w
  6191     010E  1103               	clrz
  6192     010F  1803               	skipnc
  6193     0110  3E01               	addlw	1
  6194     0111  1903               	skipnz
  6195     0112  2914               	goto	u2742
  6196     0113  07C0               	addwf	___flmul@prod+2,f
  6197     0114                     u2742:
  6198     0114  0835               	movf	??___flmul+3,w
  6199     0115  1103               	clrz
  6200     0116  1803               	skipnc
  6201     0117  3E01               	addlw	1
  6202     0118  1903               	skipnz
  6203     0119  291B               	goto	u2743
  6204     011A  07C1               	addwf	___flmul@prod+3,f
  6205     011B                     u2743:
  6206     011B  082C               	movf	___flmul@b+2,w
  6207     011C  00F3               	movwf	__Umul8_16@multiplicand
  6208     011D  082E               	movf	___flmul@a,w
  6209     011E  120A  158A  20F6  120A  118A  	fcall	__Umul8_16
  6210     0123  0874               	movf	?__Umul8_16+1,w
  6211     0124  1283               	bcf	3,5	;RP0=0, select bank0
  6212     0125  1303               	bcf	3,6	;RP1=0, select bank0
  6213     0126  00C3               	movwf	___flmul@temp+1
  6214     0127  0873               	movf	?__Umul8_16,w
  6215     0128  00C2               	movwf	___flmul@temp
  6216     0129                     l2753:
  6217     0129  0842               	movf	___flmul@temp,w
  6218     012A  00B2               	movwf	??___flmul
  6219     012B  01B3               	clrf	??___flmul+1
  6220     012C  01B4               	clrf	??___flmul+2
  6221     012D  01B5               	clrf	??___flmul+3
  6222     012E  0832               	movf	??___flmul,w
  6223     012F  07B8               	addwf	___flmul@grs,f
  6224     0130  0833               	movf	??___flmul+1,w
  6225     0131  1103               	clrz
  6226     0132  1803               	skipnc
  6227     0133  3E01               	addlw	1
  6228     0134  1903               	skipnz
  6229     0135  2937               	goto	u2751
  6230     0136  07B9               	addwf	___flmul@grs+1,f
  6231     0137                     u2751:
  6232     0137  0834               	movf	??___flmul+2,w
  6233     0138  1103               	clrz
  6234     0139  1803               	skipnc
  6235     013A  3E01               	addlw	1
  6236     013B  1903               	skipnz
  6237     013C  293E               	goto	u2752
  6238     013D  07BA               	addwf	___flmul@grs+2,f
  6239     013E                     u2752:
  6240     013E  0835               	movf	??___flmul+3,w
  6241     013F  1103               	clrz
  6242     0140  1803               	skipnc
  6243     0141  3E01               	addlw	1
  6244     0142  1903               	skipnz
  6245     0143  2945               	goto	u2753
  6246     0144  07BB               	addwf	___flmul@grs+3,f
  6247     0145                     u2753:
  6248     0145                     l2755:
  6249     0145  0843               	movf	___flmul@temp+1,w
  6250     0146  00B2               	movwf	??___flmul
  6251     0147  01B3               	clrf	??___flmul+1
  6252     0148  01B4               	clrf	??___flmul+2
  6253     0149  01B5               	clrf	??___flmul+3
  6254     014A  0832               	movf	??___flmul,w
  6255     014B  07BE               	addwf	___flmul@prod,f
  6256     014C  0833               	movf	??___flmul+1,w
  6257     014D  1103               	clrz
  6258     014E  1803               	skipnc
  6259     014F  3E01               	addlw	1
  6260     0150  1903               	skipnz
  6261     0151  2953               	goto	u2761
  6262     0152  07BF               	addwf	___flmul@prod+1,f
  6263     0153                     u2761:
  6264     0153  0834               	movf	??___flmul+2,w
  6265     0154  1103               	clrz
  6266     0155  1803               	skipnc
  6267     0156  3E01               	addlw	1
  6268     0157  1903               	skipnz
  6269     0158  295A               	goto	u2762
  6270     0159  07C0               	addwf	___flmul@prod+2,f
  6271     015A                     u2762:
  6272     015A  0835               	movf	??___flmul+3,w
  6273     015B  1103               	clrz
  6274     015C  1803               	skipnc
  6275     015D  3E01               	addlw	1
  6276     015E  1903               	skipnz
  6277     015F  2961               	goto	u2763
  6278     0160  07C1               	addwf	___flmul@prod+3,f
  6279     0161                     u2763:
  6280     0161                     l2757:
  6281     0161  3008               	movlw	8
  6282     0162  00B2               	movwf	??___flmul
  6283     0163                     u2775:
  6284     0163  1003               	clrc
  6285     0164  0DB8               	rlf	___flmul@grs,f
  6286     0165  0DB9               	rlf	___flmul@grs+1,f
  6287     0166  0DBA               	rlf	___flmul@grs+2,f
  6288     0167  0DBB               	rlf	___flmul@grs+3,f
  6289     0168  0BB2               	decfsz	??___flmul,f
  6290     0169  2963               	goto	u2775
  6291     016A                     l2759:
  6292     016A  082B               	movf	___flmul@b+1,w
  6293     016B  00F3               	movwf	__Umul8_16@multiplicand
  6294     016C  082E               	movf	___flmul@a,w
  6295     016D  120A  158A  20F6  120A  118A  	fcall	__Umul8_16
  6296     0172  0874               	movf	?__Umul8_16+1,w
  6297     0173  1283               	bcf	3,5	;RP0=0, select bank0
  6298     0174  1303               	bcf	3,6	;RP1=0, select bank0
  6299     0175  00C3               	movwf	___flmul@temp+1
  6300     0176  0873               	movf	?__Umul8_16,w
  6301     0177  00C2               	movwf	___flmul@temp
  6302     0178                     l2761:
  6303     0178  0842               	movf	___flmul@temp,w
  6304     0179  00B2               	movwf	??___flmul
  6305     017A  0843               	movf	___flmul@temp+1,w
  6306     017B  00B3               	movwf	??___flmul+1
  6307     017C  01B4               	clrf	??___flmul+2
  6308     017D  01B5               	clrf	??___flmul+3
  6309     017E  0832               	movf	??___flmul,w
  6310     017F  07B8               	addwf	___flmul@grs,f
  6311     0180  0833               	movf	??___flmul+1,w
  6312     0181  1103               	clrz
  6313     0182  1803               	skipnc
  6314     0183  3E01               	addlw	1
  6315     0184  1903               	skipnz
  6316     0185  2987               	goto	u2781
  6317     0186  07B9               	addwf	___flmul@grs+1,f
  6318     0187                     u2781:
  6319     0187  0834               	movf	??___flmul+2,w
  6320     0188  1103               	clrz
  6321     0189  1803               	skipnc
  6322     018A  3E01               	addlw	1
  6323     018B  1903               	skipnz
  6324     018C  298E               	goto	u2782
  6325     018D  07BA               	addwf	___flmul@grs+2,f
  6326     018E                     u2782:
  6327     018E  0835               	movf	??___flmul+3,w
  6328     018F  1103               	clrz
  6329     0190  1803               	skipnc
  6330     0191  3E01               	addlw	1
  6331     0192  1903               	skipnz
  6332     0193  2995               	goto	u2783
  6333     0194  07BB               	addwf	___flmul@grs+3,f
  6334     0195                     u2783:
  6335     0195                     l2763:
  6336     0195  082A               	movf	___flmul@b,w
  6337     0196  00F3               	movwf	__Umul8_16@multiplicand
  6338     0197  082F               	movf	___flmul@a+1,w
  6339     0198  120A  158A  20F6  120A  118A  	fcall	__Umul8_16
  6340     019D  0874               	movf	?__Umul8_16+1,w
  6341     019E  1283               	bcf	3,5	;RP0=0, select bank0
  6342     019F  1303               	bcf	3,6	;RP1=0, select bank0
  6343     01A0  00C3               	movwf	___flmul@temp+1
  6344     01A1  0873               	movf	?__Umul8_16,w
  6345     01A2  00C2               	movwf	___flmul@temp
  6346     01A3                     l2765:
  6347     01A3  0842               	movf	___flmul@temp,w
  6348     01A4  00B2               	movwf	??___flmul
  6349     01A5  0843               	movf	___flmul@temp+1,w
  6350     01A6  00B3               	movwf	??___flmul+1
  6351     01A7  01B4               	clrf	??___flmul+2
  6352     01A8  01B5               	clrf	??___flmul+3
  6353     01A9  0832               	movf	??___flmul,w
  6354     01AA  07B8               	addwf	___flmul@grs,f
  6355     01AB  0833               	movf	??___flmul+1,w
  6356     01AC  1103               	clrz
  6357     01AD  1803               	skipnc
  6358     01AE  3E01               	addlw	1
  6359     01AF  1903               	skipnz
  6360     01B0  29B2               	goto	u2791
  6361     01B1  07B9               	addwf	___flmul@grs+1,f
  6362     01B2                     u2791:
  6363     01B2  0834               	movf	??___flmul+2,w
  6364     01B3  1103               	clrz
  6365     01B4  1803               	skipnc
  6366     01B5  3E01               	addlw	1
  6367     01B6  1903               	skipnz
  6368     01B7  29B9               	goto	u2792
  6369     01B8  07BA               	addwf	___flmul@grs+2,f
  6370     01B9                     u2792:
  6371     01B9  0835               	movf	??___flmul+3,w
  6372     01BA  1103               	clrz
  6373     01BB  1803               	skipnc
  6374     01BC  3E01               	addlw	1
  6375     01BD  1903               	skipnz
  6376     01BE  29C0               	goto	u2793
  6377     01BF  07BB               	addwf	___flmul@grs+3,f
  6378     01C0                     u2793:
  6379     01C0                     l2767:
  6380     01C0  3008               	movlw	8
  6381     01C1  00B2               	movwf	??___flmul
  6382     01C2                     u2805:
  6383     01C2  1003               	clrc
  6384     01C3  0DB8               	rlf	___flmul@grs,f
  6385     01C4  0DB9               	rlf	___flmul@grs+1,f
  6386     01C5  0DBA               	rlf	___flmul@grs+2,f
  6387     01C6  0DBB               	rlf	___flmul@grs+3,f
  6388     01C7  0BB2               	decfsz	??___flmul,f
  6389     01C8  29C2               	goto	u2805
  6390     01C9  082A               	movf	___flmul@b,w
  6391     01CA  00F3               	movwf	__Umul8_16@multiplicand
  6392     01CB  082E               	movf	___flmul@a,w
  6393     01CC  120A  158A  20F6  120A  118A  	fcall	__Umul8_16
  6394     01D1  0874               	movf	?__Umul8_16+1,w
  6395     01D2  1283               	bcf	3,5	;RP0=0, select bank0
  6396     01D3  1303               	bcf	3,6	;RP1=0, select bank0
  6397     01D4  00C3               	movwf	___flmul@temp+1
  6398     01D5  0873               	movf	?__Umul8_16,w
  6399     01D6  00C2               	movwf	___flmul@temp
  6400     01D7                     l2769:
  6401     01D7  0842               	movf	___flmul@temp,w
  6402     01D8  00B2               	movwf	??___flmul
  6403     01D9  0843               	movf	___flmul@temp+1,w
  6404     01DA  00B3               	movwf	??___flmul+1
  6405     01DB  01B4               	clrf	??___flmul+2
  6406     01DC  01B5               	clrf	??___flmul+3
  6407     01DD  0832               	movf	??___flmul,w
  6408     01DE  07B8               	addwf	___flmul@grs,f
  6409     01DF  0833               	movf	??___flmul+1,w
  6410     01E0  1103               	clrz
  6411     01E1  1803               	skipnc
  6412     01E2  3E01               	addlw	1
  6413     01E3  1903               	skipnz
  6414     01E4  29E6               	goto	u2811
  6415     01E5  07B9               	addwf	___flmul@grs+1,f
  6416     01E6                     u2811:
  6417     01E6  0834               	movf	??___flmul+2,w
  6418     01E7  1103               	clrz
  6419     01E8  1803               	skipnc
  6420     01E9  3E01               	addlw	1
  6421     01EA  1903               	skipnz
  6422     01EB  29ED               	goto	u2812
  6423     01EC  07BA               	addwf	___flmul@grs+2,f
  6424     01ED                     u2812:
  6425     01ED  0835               	movf	??___flmul+3,w
  6426     01EE  1103               	clrz
  6427     01EF  1803               	skipnc
  6428     01F0  3E01               	addlw	1
  6429     01F1  1903               	skipnz
  6430     01F2  29F4               	goto	u2813
  6431     01F3  07BB               	addwf	___flmul@grs+3,f
  6432     01F4                     u2813:
  6433     01F4                     l2771:
  6434     01F4  082B               	movf	___flmul@b+1,w
  6435     01F5  00F3               	movwf	__Umul8_16@multiplicand
  6436     01F6  0830               	movf	___flmul@a+2,w
  6437     01F7  120A  158A  20F6  120A  118A  	fcall	__Umul8_16
  6438     01FC  0874               	movf	?__Umul8_16+1,w
  6439     01FD  1283               	bcf	3,5	;RP0=0, select bank0
  6440     01FE  1303               	bcf	3,6	;RP1=0, select bank0
  6441     01FF  00C3               	movwf	___flmul@temp+1
  6442     0200  0873               	movf	?__Umul8_16,w
  6443     0201  00C2               	movwf	___flmul@temp
  6444     0202  0842               	movf	___flmul@temp,w
  6445     0203  00B2               	movwf	??___flmul
  6446     0204  0843               	movf	___flmul@temp+1,w
  6447     0205  00B3               	movwf	??___flmul+1
  6448     0206  01B4               	clrf	??___flmul+2
  6449     0207  01B5               	clrf	??___flmul+3
  6450     0208  0832               	movf	??___flmul,w
  6451     0209  07BE               	addwf	___flmul@prod,f
  6452     020A  0833               	movf	??___flmul+1,w
  6453     020B  1103               	clrz
  6454     020C  1803               	skipnc
  6455     020D  3E01               	addlw	1
  6456     020E  1903               	skipnz
  6457     020F  2A11               	goto	u2821
  6458     0210  07BF               	addwf	___flmul@prod+1,f
  6459     0211                     u2821:
  6460     0211  0834               	movf	??___flmul+2,w
  6461     0212  1103               	clrz
  6462     0213  1803               	skipnc
  6463     0214  3E01               	addlw	1
  6464     0215  1903               	skipnz
  6465     0216  2A18               	goto	u2822
  6466     0217  07C0               	addwf	___flmul@prod+2,f
  6467     0218                     u2822:
  6468     0218  0835               	movf	??___flmul+3,w
  6469     0219  1103               	clrz
  6470     021A  1803               	skipnc
  6471     021B  3E01               	addlw	1
  6472     021C  1903               	skipnz
  6473     021D  2A1F               	goto	u2823
  6474     021E  07C1               	addwf	___flmul@prod+3,f
  6475     021F                     u2823:
  6476     021F                     l2773:
  6477     021F  082C               	movf	___flmul@b+2,w
  6478     0220  00F3               	movwf	__Umul8_16@multiplicand
  6479     0221  082F               	movf	___flmul@a+1,w
  6480     0222  120A  158A  20F6  120A  118A  	fcall	__Umul8_16
  6481     0227  0874               	movf	?__Umul8_16+1,w
  6482     0228  1283               	bcf	3,5	;RP0=0, select bank0
  6483     0229  1303               	bcf	3,6	;RP1=0, select bank0
  6484     022A  00C3               	movwf	___flmul@temp+1
  6485     022B  0873               	movf	?__Umul8_16,w
  6486     022C  00C2               	movwf	___flmul@temp
  6487     022D                     l2775:
  6488     022D  0842               	movf	___flmul@temp,w
  6489     022E  00B2               	movwf	??___flmul
  6490     022F  0843               	movf	___flmul@temp+1,w
  6491     0230  00B3               	movwf	??___flmul+1
  6492     0231  01B4               	clrf	??___flmul+2
  6493     0232  01B5               	clrf	??___flmul+3
  6494     0233  0832               	movf	??___flmul,w
  6495     0234  07BE               	addwf	___flmul@prod,f
  6496     0235  0833               	movf	??___flmul+1,w
  6497     0236  1103               	clrz
  6498     0237  1803               	skipnc
  6499     0238  3E01               	addlw	1
  6500     0239  1903               	skipnz
  6501     023A  2A3C               	goto	u2831
  6502     023B  07BF               	addwf	___flmul@prod+1,f
  6503     023C                     u2831:
  6504     023C  0834               	movf	??___flmul+2,w
  6505     023D  1103               	clrz
  6506     023E  1803               	skipnc
  6507     023F  3E01               	addlw	1
  6508     0240  1903               	skipnz
  6509     0241  2A43               	goto	u2832
  6510     0242  07C0               	addwf	___flmul@prod+2,f
  6511     0243                     u2832:
  6512     0243  0835               	movf	??___flmul+3,w
  6513     0244  1103               	clrz
  6514     0245  1803               	skipnc
  6515     0246  3E01               	addlw	1
  6516     0247  1903               	skipnz
  6517     0248  2A4A               	goto	u2833
  6518     0249  07C1               	addwf	___flmul@prod+3,f
  6519     024A                     u2833:
  6520     024A  082C               	movf	___flmul@b+2,w
  6521     024B  00F3               	movwf	__Umul8_16@multiplicand
  6522     024C  0830               	movf	___flmul@a+2,w
  6523     024D  120A  158A  20F6  120A  118A  	fcall	__Umul8_16
  6524     0252  0874               	movf	?__Umul8_16+1,w
  6525     0253  1283               	bcf	3,5	;RP0=0, select bank0
  6526     0254  1303               	bcf	3,6	;RP1=0, select bank0
  6527     0255  00C3               	movwf	___flmul@temp+1
  6528     0256  0873               	movf	?__Umul8_16,w
  6529     0257  00C2               	movwf	___flmul@temp
  6530     0258                     l2777:
  6531     0258  0842               	movf	___flmul@temp,w
  6532     0259  00B2               	movwf	??___flmul
  6533     025A  0843               	movf	___flmul@temp+1,w
  6534     025B  00B3               	movwf	??___flmul+1
  6535     025C  01B4               	clrf	??___flmul+2
  6536     025D  01B5               	clrf	??___flmul+3
  6537     025E  3008               	movlw	8
  6538     025F                     u2845:
  6539     025F  1003               	clrc
  6540     0260  0DB2               	rlf	??___flmul,f
  6541     0261  0DB3               	rlf	??___flmul+1,f
  6542     0262  0DB4               	rlf	??___flmul+2,f
  6543     0263  0DB5               	rlf	??___flmul+3,f
  6544     0264                     u2840:
  6545     0264  3EFF               	addlw	-1
  6546     0265  1D03               	skipz
  6547     0266  2A5F               	goto	u2845
  6548     0267  0832               	movf	??___flmul,w
  6549     0268  07BE               	addwf	___flmul@prod,f
  6550     0269  0833               	movf	??___flmul+1,w
  6551     026A  1103               	clrz
  6552     026B  1803               	skipnc
  6553     026C  3E01               	addlw	1
  6554     026D  1903               	skipnz
  6555     026E  2A70               	goto	u2851
  6556     026F  07BF               	addwf	___flmul@prod+1,f
  6557     0270                     u2851:
  6558     0270  0834               	movf	??___flmul+2,w
  6559     0271  1103               	clrz
  6560     0272  1803               	skipnc
  6561     0273  3E01               	addlw	1
  6562     0274  1903               	skipnz
  6563     0275  2A77               	goto	u2852
  6564     0276  07C0               	addwf	___flmul@prod+2,f
  6565     0277                     u2852:
  6566     0277  0835               	movf	??___flmul+3,w
  6567     0278  1103               	clrz
  6568     0279  1803               	skipnc
  6569     027A  3E01               	addlw	1
  6570     027B  1903               	skipnz
  6571     027C  2A7E               	goto	u2853
  6572     027D  07C1               	addwf	___flmul@prod+3,f
  6573     027E                     u2853:
  6574     027E                     l2779:
  6575     027E  0838               	movf	___flmul@grs,w
  6576     027F  00B2               	movwf	??___flmul
  6577     0280  0839               	movf	___flmul@grs+1,w
  6578     0281  00B3               	movwf	??___flmul+1
  6579     0282  083A               	movf	___flmul@grs+2,w
  6580     0283  00B4               	movwf	??___flmul+2
  6581     0284  083B               	movf	___flmul@grs+3,w
  6582     0285  00B5               	movwf	??___flmul+3
  6583     0286  3018               	movlw	24
  6584     0287                     u2865:
  6585     0287  1003               	clrc
  6586     0288  0CB5               	rrf	??___flmul+3,f
  6587     0289  0CB4               	rrf	??___flmul+2,f
  6588     028A  0CB3               	rrf	??___flmul+1,f
  6589     028B  0CB2               	rrf	??___flmul,f
  6590     028C                     u2860:
  6591     028C  3EFF               	addlw	-1
  6592     028D  1D03               	skipz
  6593     028E  2A87               	goto	u2865
  6594     028F  0832               	movf	??___flmul,w
  6595     0290  07BE               	addwf	___flmul@prod,f
  6596     0291  0833               	movf	??___flmul+1,w
  6597     0292  1103               	clrz
  6598     0293  1803               	skipnc
  6599     0294  3E01               	addlw	1
  6600     0295  1903               	skipnz
  6601     0296  2A98               	goto	u2871
  6602     0297  07BF               	addwf	___flmul@prod+1,f
  6603     0298                     u2871:
  6604     0298  0834               	movf	??___flmul+2,w
  6605     0299  1103               	clrz
  6606     029A  1803               	skipnc
  6607     029B  3E01               	addlw	1
  6608     029C  1903               	skipnz
  6609     029D  2A9F               	goto	u2872
  6610     029E  07C0               	addwf	___flmul@prod+2,f
  6611     029F                     u2872:
  6612     029F  0835               	movf	??___flmul+3,w
  6613     02A0  1103               	clrz
  6614     02A1  1803               	skipnc
  6615     02A2  3E01               	addlw	1
  6616     02A3  1903               	skipnz
  6617     02A4  2AA6               	goto	u2873
  6618     02A5  07C1               	addwf	___flmul@prod+3,f
  6619     02A6                     u2873:
  6620     02A6                     l2781:
  6621     02A6  3008               	movlw	8
  6622     02A7  00B2               	movwf	??___flmul
  6623     02A8                     u2885:
  6624     02A8  1003               	clrc
  6625     02A9  0DB8               	rlf	___flmul@grs,f
  6626     02AA  0DB9               	rlf	___flmul@grs+1,f
  6627     02AB  0DBA               	rlf	___flmul@grs+2,f
  6628     02AC  0DBB               	rlf	___flmul@grs+3,f
  6629     02AD  0BB2               	decfsz	??___flmul,f
  6630     02AE  2AA8               	goto	u2885
  6631     02AF                     l2783:
  6632     02AF  083D               	movf	___flmul@bexp,w
  6633     02B0  073C               	addwf	___flmul@aexp,w
  6634     02B1  00B2               	movwf	??___flmul
  6635     02B2  01B3               	clrf	??___flmul+1
  6636     02B3  0DB3               	rlf	??___flmul+1,f
  6637     02B4  0832               	movf	??___flmul,w
  6638     02B5  3E82               	addlw	130
  6639     02B6  00C2               	movwf	___flmul@temp
  6640     02B7  0833               	movf	??___flmul+1,w
  6641     02B8  1803               	skipnc
  6642     02B9  3E01               	addlw	1
  6643     02BA  3EFF               	addlw	255
  6644     02BB  00C3               	movwf	___flmul@temp+1
  6645     02BC  2ADA               	goto	l2795
  6646     02BD                     l2785:
  6647     02BD  3001               	movlw	1
  6648     02BE  00B2               	movwf	??___flmul
  6649     02BF                     u2895:
  6650     02BF  1003               	clrc
  6651     02C0  0DBE               	rlf	___flmul@prod,f
  6652     02C1  0DBF               	rlf	___flmul@prod+1,f
  6653     02C2  0DC0               	rlf	___flmul@prod+2,f
  6654     02C3  0DC1               	rlf	___flmul@prod+3,f
  6655     02C4  0BB2               	decfsz	??___flmul,f
  6656     02C5  2ABF               	goto	u2895
  6657     02C6                     l2787:
  6658     02C6  1FBB               	btfss	___flmul@grs+3,7
  6659     02C7  2AC9               	goto	u2901
  6660     02C8  2ACA               	goto	u2900
  6661     02C9                     u2901:
  6662     02C9  2ACB               	goto	l2791
  6663     02CA                     u2900:
  6664     02CA                     l2789:
  6665     02CA  143E               	bsf	___flmul@prod,0
  6666     02CB                     l2791:
  6667     02CB  3001               	movlw	1
  6668     02CC  00B2               	movwf	??___flmul
  6669     02CD                     u2915:
  6670     02CD  1003               	clrc
  6671     02CE  0DB8               	rlf	___flmul@grs,f
  6672     02CF  0DB9               	rlf	___flmul@grs+1,f
  6673     02D0  0DBA               	rlf	___flmul@grs+2,f
  6674     02D1  0DBB               	rlf	___flmul@grs+3,f
  6675     02D2  0BB2               	decfsz	??___flmul,f
  6676     02D3  2ACD               	goto	u2915
  6677     02D4                     l2793:
  6678     02D4  30FF               	movlw	255
  6679     02D5  07C2               	addwf	___flmul@temp,f
  6680     02D6  1803               	skipnc
  6681     02D7  0AC3               	incf	___flmul@temp+1,f
  6682     02D8  30FF               	movlw	255
  6683     02D9  07C3               	addwf	___flmul@temp+1,f
  6684     02DA                     l2795:
  6685     02DA  1FC0               	btfss	___flmul@prod+2,7
  6686     02DB  2ADD               	goto	u2921
  6687     02DC  2ADE               	goto	u2920
  6688     02DD                     u2921:
  6689     02DD  2ABD               	goto	l2785
  6690     02DE                     u2920:
  6691     02DE                     l2797:
  6692     02DE  01BC               	clrf	___flmul@aexp
  6693     02DF                     l2799:
  6694     02DF  1FBB               	btfss	___flmul@grs+3,7
  6695     02E0  2AE2               	goto	u2931
  6696     02E1  2AE3               	goto	u2930
  6697     02E2                     u2931:
  6698     02E2  2AFF               	goto	l2807
  6699     02E3                     u2930:
  6700     02E3                     l2801:
  6701     02E3  30FF               	movlw	255
  6702     02E4  0538               	andwf	___flmul@grs,w
  6703     02E5  00B2               	movwf	??___flmul
  6704     02E6  30FF               	movlw	255
  6705     02E7  0539               	andwf	___flmul@grs+1,w
  6706     02E8  00B3               	movwf	??___flmul+1
  6707     02E9  30FF               	movlw	255
  6708     02EA  053A               	andwf	___flmul@grs+2,w
  6709     02EB  00B4               	movwf	??___flmul+2
  6710     02EC  307F               	movlw	127
  6711     02ED  053B               	andwf	___flmul@grs+3,w
  6712     02EE  00B5               	movwf	??___flmul+3
  6713     02EF  0835               	movf	??___flmul+3,w
  6714     02F0  0434               	iorwf	??___flmul+2,w
  6715     02F1  0433               	iorwf	??___flmul+1,w
  6716     02F2  0432               	iorwf	??___flmul,w
  6717     02F3  1903               	skipnz
  6718     02F4  2AF6               	goto	u2941
  6719     02F5  2AF7               	goto	u2940
  6720     02F6                     u2941:
  6721     02F6  2AFA               	goto	l858
  6722     02F7                     u2940:
  6723     02F7                     l2803:
  6724     02F7  3001               	movlw	1
  6725     02F8  00BC               	movwf	___flmul@aexp
  6726     02F9  2AFF               	goto	l2807
  6727     02FA                     l858:
  6728     02FA  1C3E               	btfss	___flmul@prod,0
  6729     02FB  2AFD               	goto	u2951
  6730     02FC  2AFE               	goto	u2950
  6731     02FD                     u2951:
  6732     02FD  2AFF               	goto	l2807
  6733     02FE                     u2950:
  6734     02FE  2AF7               	goto	l2803
  6735     02FF                     l2807:
  6736     02FF  083C               	movf	___flmul@aexp,w
  6737     0300  1903               	btfsc	3,2
  6738     0301  2B03               	goto	u2961
  6739     0302  2B04               	goto	u2960
  6740     0303                     u2961:
  6741     0303  2B35               	goto	l2817
  6742     0304                     u2960:
  6743     0304                     l2809:
  6744     0304  3001               	movlw	1
  6745     0305  07BE               	addwf	___flmul@prod,f
  6746     0306  3000               	movlw	0
  6747     0307  1803               	skipnc
  6748     0308  3001               	movlw	1
  6749     0309  07BF               	addwf	___flmul@prod+1,f
  6750     030A  3000               	movlw	0
  6751     030B  1803               	skipnc
  6752     030C  3001               	movlw	1
  6753     030D  07C0               	addwf	___flmul@prod+2,f
  6754     030E  3000               	movlw	0
  6755     030F  1803               	skipnc
  6756     0310  3001               	movlw	1
  6757     0311  07C1               	addwf	___flmul@prod+3,f
  6758     0312                     l2811:
  6759     0312  1C41               	btfss	___flmul@prod+3,0
  6760     0313  2B15               	goto	u2971
  6761     0314  2B16               	goto	u2970
  6762     0315                     u2971:
  6763     0315  2B35               	goto	l2817
  6764     0316                     u2970:
  6765     0316                     l2813:
  6766     0316  083E               	movf	___flmul@prod,w
  6767     0317  00B2               	movwf	??___flmul
  6768     0318  083F               	movf	___flmul@prod+1,w
  6769     0319  00B3               	movwf	??___flmul+1
  6770     031A  0840               	movf	___flmul@prod+2,w
  6771     031B  00B4               	movwf	??___flmul+2
  6772     031C  0841               	movf	___flmul@prod+3,w
  6773     031D  00B5               	movwf	??___flmul+3
  6774     031E  3001               	movlw	1
  6775     031F  00B6               	movwf	??___flmul+4
  6776     0320                     u2985:
  6777     0320  0D35               	rlf	??___flmul+3,w
  6778     0321  0CB5               	rrf	??___flmul+3,f
  6779     0322  0CB4               	rrf	??___flmul+2,f
  6780     0323  0CB3               	rrf	??___flmul+1,f
  6781     0324  0CB2               	rrf	??___flmul,f
  6782     0325                     u2980:
  6783     0325  0BB6               	decfsz	??___flmul+4,f
  6784     0326  2B20               	goto	u2985
  6785     0327  0835               	movf	??___flmul+3,w
  6786     0328  00C1               	movwf	___flmul@prod+3
  6787     0329  0834               	movf	??___flmul+2,w
  6788     032A  00C0               	movwf	___flmul@prod+2
  6789     032B  0833               	movf	??___flmul+1,w
  6790     032C  00BF               	movwf	___flmul@prod+1
  6791     032D  0832               	movf	??___flmul,w
  6792     032E  00BE               	movwf	___flmul@prod
  6793     032F                     l2815:
  6794     032F  3001               	movlw	1
  6795     0330  07C2               	addwf	___flmul@temp,f
  6796     0331  1803               	skipnc
  6797     0332  0AC3               	incf	___flmul@temp+1,f
  6798     0333  3000               	movlw	0
  6799     0334  07C3               	addwf	___flmul@temp+1,f
  6800     0335                     l2817:
  6801     0335  0843               	movf	___flmul@temp+1,w
  6802     0336  3A80               	xorlw	128
  6803     0337  00FF               	movwf	btemp+1
  6804     0338  3080               	movlw	128
  6805     0339  027F               	subwf	btemp+1,w
  6806     033A  1D03               	skipz
  6807     033B  2B3E               	goto	u2995
  6808     033C  30FF               	movlw	255
  6809     033D  0242               	subwf	___flmul@temp,w
  6810     033E                     u2995:
  6811     033E  1C03               	skipc
  6812     033F  2B41               	goto	u2991
  6813     0340  2B42               	goto	u2990
  6814     0341                     u2991:
  6815     0341  2B4D               	goto	l2821
  6816     0342                     u2990:
  6817     0342                     l2819:
  6818     0342  307F               	movlw	127
  6819     0343  1283               	bcf	3,5	;RP0=0, select bank0
  6820     0344  1303               	bcf	3,6	;RP1=0, select bank0
  6821     0345  00C1               	movwf	___flmul@prod+3
  6822     0346  3080               	movlw	128
  6823     0347  00C0               	movwf	___flmul@prod+2
  6824     0348  3000               	movlw	0
  6825     0349  00BF               	movwf	___flmul@prod+1
  6826     034A  3000               	movlw	0
  6827     034B  00BE               	movwf	___flmul@prod
  6828     034C  2B7E               	goto	l864
  6829     034D                     l2821:
  6830     034D  1283               	bcf	3,5	;RP0=0, select bank0
  6831     034E  1303               	bcf	3,6	;RP1=0, select bank0
  6832     034F  0843               	movf	___flmul@temp+1,w
  6833     0350  3A80               	xorlw	128
  6834     0351  00FF               	movwf	btemp+1
  6835     0352  3080               	movlw	128
  6836     0353  027F               	subwf	btemp+1,w
  6837     0354  1D03               	skipz
  6838     0355  2B58               	goto	u3005
  6839     0356  3001               	movlw	1
  6840     0357  0242               	subwf	___flmul@temp,w
  6841     0358                     u3005:
  6842     0358  1803               	skipnc
  6843     0359  2B5B               	goto	u3001
  6844     035A  2B5C               	goto	u3000
  6845     035B                     u3001:
  6846     035B  2B68               	goto	l2827
  6847     035C                     u3000:
  6848     035C                     l2823:
  6849     035C  3000               	movlw	0
  6850     035D  1283               	bcf	3,5	;RP0=0, select bank0
  6851     035E  1303               	bcf	3,6	;RP1=0, select bank0
  6852     035F  00C1               	movwf	___flmul@prod+3
  6853     0360  3000               	movlw	0
  6854     0361  00C0               	movwf	___flmul@prod+2
  6855     0362  3000               	movlw	0
  6856     0363  00BF               	movwf	___flmul@prod+1
  6857     0364  3000               	movlw	0
  6858     0365  00BE               	movwf	___flmul@prod
  6859     0366                     l2825:
  6860     0366  01B7               	clrf	___flmul@sign
  6861     0367  2B7E               	goto	l864
  6862     0368                     l2827:
  6863     0368  1283               	bcf	3,5	;RP0=0, select bank0
  6864     0369  1303               	bcf	3,6	;RP1=0, select bank0
  6865     036A  0842               	movf	___flmul@temp,w
  6866     036B  00BD               	movwf	___flmul@bexp
  6867     036C  30FF               	movlw	255
  6868     036D  05BE               	andwf	___flmul@prod,f
  6869     036E  30FF               	movlw	255
  6870     036F  05BF               	andwf	___flmul@prod+1,f
  6871     0370  307F               	movlw	127
  6872     0371  05C0               	andwf	___flmul@prod+2,f
  6873     0372  3000               	movlw	0
  6874     0373  05C1               	andwf	___flmul@prod+3,f
  6875     0374                     l2829:
  6876     0374  1C3D               	btfss	___flmul@bexp,0
  6877     0375  2B77               	goto	u3011
  6878     0376  2B78               	goto	u3010
  6879     0377                     u3011:
  6880     0377  2B79               	goto	l2833
  6881     0378                     u3010:
  6882     0378                     l2831:
  6883     0378  17C0               	bsf	___flmul@prod+2,7
  6884     0379                     l2833:
  6885     0379  083D               	movf	___flmul@bexp,w
  6886     037A  00B2               	movwf	??___flmul
  6887     037B  1003               	clrc
  6888     037C  0C32               	rrf	??___flmul,w
  6889     037D  00C1               	movwf	___flmul@prod+3
  6890     037E                     l864:
  6891     037E  0837               	movf	___flmul@sign,w
  6892     037F  04C1               	iorwf	___flmul@prod+3,f
  6893     0380                     l2835:
  6894     0380  0841               	movf	___flmul@prod+3,w
  6895     0381  00AD               	movwf	?___flmul+3
  6896     0382  0840               	movf	___flmul@prod+2,w
  6897     0383  00AC               	movwf	?___flmul+2
  6898     0384  083F               	movf	___flmul@prod+1,w
  6899     0385  00AB               	movwf	?___flmul+1
  6900     0386  083E               	movf	___flmul@prod,w
  6901     0387  00AA               	movwf	?___flmul
  6902     0388                     l852:
  6903     0388  0008               	return
  6904     0389                     __end_of___flmul:
  6905                           
  6906                           	psect	text21
  6907     08F6                     __ptext21:	
  6908 ;; *************** function __Umul8_16 *****************
  6909 ;; Defined at:
  6910 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul8_16.c"
  6911 ;; Parameters:    Size  Location     Type
  6912 ;;  multiplier      1    wreg     unsigned char 
  6913 ;;  multiplicand    1    3[COMMON] unsigned char 
  6914 ;; Auto vars:     Size  Location     Type
  6915 ;;  multiplier      1    4[BANK0 ] unsigned char 
  6916 ;;  word_mpld       2    2[BANK0 ] unsigned short 
  6917 ;;  product         2    0[BANK0 ] unsigned short 
  6918 ;; Return value:  Size  Location     Type
  6919 ;;                  2    3[COMMON] unsigned int 
  6920 ;; Registers used:
  6921 ;;		wreg, status,2, status,0
  6922 ;; Tracked objects:
  6923 ;;		On entry : 0/0
  6924 ;;		On exit  : 0/0
  6925 ;;		Unchanged: 0/0
  6926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6927 ;;      Params:         2       0       0       0       0
  6928 ;;      Locals:         0       5       0       0       0
  6929 ;;      Temps:          2       0       0       0       0
  6930 ;;      Totals:         4       5       0       0       0
  6931 ;;Total ram usage:        9 bytes
  6932 ;; Hardware stack levels used: 1
  6933 ;; Hardware stack levels required when called: 1
  6934 ;; This function calls:
  6935 ;;		Nothing
  6936 ;; This function is called by:
  6937 ;;		___flmul
  6938 ;; This function uses a non-reentrant model
  6939 ;;
  6940                           
  6941     08F6                     __Umul8_16:	
  6942                           ;psect for function __Umul8_16
  6943                           
  6944                           
  6945                           ;incstack = 0
  6946                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6947                           ;__Umul8_16@multiplier stored from wreg
  6948     08F6  1283               	bcf	3,5	;RP0=0, select bank0
  6949     08F7  1303               	bcf	3,6	;RP1=0, select bank0
  6950     08F8  00A4               	movwf	__Umul8_16@multiplier
  6951     08F9                     l2425:
  6952     08F9  01A0               	clrf	__Umul8_16@product
  6953     08FA  01A1               	clrf	__Umul8_16@product+1
  6954     08FB                     l2427:
  6955     08FB  0873               	movf	__Umul8_16@multiplicand,w
  6956     08FC  00F5               	movwf	??__Umul8_16
  6957     08FD  01F6               	clrf	??__Umul8_16+1
  6958     08FE  0875               	movf	??__Umul8_16,w
  6959     08FF  00A2               	movwf	__Umul8_16@word_mpld
  6960     0900  0876               	movf	??__Umul8_16+1,w
  6961     0901  00A3               	movwf	__Umul8_16@word_mpld+1
  6962     0902                     l2429:
  6963     0902  1C24               	btfss	__Umul8_16@multiplier,0
  6964     0903  2905               	goto	u2151
  6965     0904  2906               	goto	u2150
  6966     0905                     u2151:
  6967     0905  290C               	goto	l871
  6968     0906                     u2150:
  6969     0906                     l2431:
  6970     0906  0822               	movf	__Umul8_16@word_mpld,w
  6971     0907  07A0               	addwf	__Umul8_16@product,f
  6972     0908  1803               	skipnc
  6973     0909  0AA1               	incf	__Umul8_16@product+1,f
  6974     090A  0823               	movf	__Umul8_16@word_mpld+1,w
  6975     090B  07A1               	addwf	__Umul8_16@product+1,f
  6976     090C                     l871:
  6977     090C  3001               	movlw	1
  6978     090D                     u2165:
  6979     090D  1003               	clrc
  6980     090E  0DA2               	rlf	__Umul8_16@word_mpld,f
  6981     090F  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  6982     0910  3EFF               	addlw	-1
  6983     0911  1D03               	skipz
  6984     0912  290D               	goto	u2165
  6985     0913  1003               	clrc
  6986     0914  0CA4               	rrf	__Umul8_16@multiplier,f
  6987     0915                     l2433:
  6988     0915  0824               	movf	__Umul8_16@multiplier,w
  6989     0916  1D03               	btfss	3,2
  6990     0917  2919               	goto	u2171
  6991     0918  291A               	goto	u2170
  6992     0919                     u2171:
  6993     0919  2902               	goto	l2429
  6994     091A                     u2170:
  6995     091A                     l2435:
  6996     091A  0821               	movf	__Umul8_16@product+1,w
  6997     091B  00F4               	movwf	?__Umul8_16+1
  6998     091C  0820               	movf	__Umul8_16@product,w
  6999     091D  00F3               	movwf	?__Umul8_16
  7000     091E                     l873:
  7001     091E  0008               	return
  7002     091F                     __end_of__Umul8_16:
  7003                           
  7004                           	psect	text22
  7005     170C                     __ptext22:	
  7006 ;; *************** function _keypad_init *****************
  7007 ;; Defined at:
  7008 ;;		line 38 in file "KEYPAD.c"
  7009 ;; Parameters:    Size  Location     Type
  7010 ;;		None
  7011 ;; Auto vars:     Size  Location     Type
  7012 ;;		None
  7013 ;; Return value:  Size  Location     Type
  7014 ;;                  1    wreg      void 
  7015 ;; Registers used:
  7016 ;;		wreg, status,2, status,0
  7017 ;; Tracked objects:
  7018 ;;		On entry : 0/0
  7019 ;;		On exit  : 0/0
  7020 ;;		Unchanged: 0/0
  7021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7022 ;;      Params:         0       0       0       0       0
  7023 ;;      Locals:         0       0       0       0       0
  7024 ;;      Temps:          0       0       0       0       0
  7025 ;;      Totals:         0       0       0       0       0
  7026 ;;Total ram usage:        0 bytes
  7027 ;; Hardware stack levels used: 1
  7028 ;; Hardware stack levels required when called: 1
  7029 ;; This function calls:
  7030 ;;		Nothing
  7031 ;; This function is called by:
  7032 ;;		_main
  7033 ;; This function uses a non-reentrant model
  7034 ;;
  7035                           
  7036     170C                     _keypad_init:	
  7037                           ;psect for function _keypad_init
  7038                           
  7039     170C                     l2889:	
  7040                           ;incstack = 0
  7041                           ; Regs used in _keypad_init: [wreg+status,2+status,0]
  7042                           
  7043                           
  7044                           ;KEYPAD.c: 40:     TRISB &= ~(1<<0) & ~(1<<1) & ~(1<<2) & ~(1<<3);
  7045     170C  30F0               	movlw	240
  7046     170D  1683               	bsf	3,5	;RP0=1, select bank1
  7047     170E  1303               	bcf	3,6	;RP1=0, select bank1
  7048     170F  0586               	andwf	6,f	;volatile
  7049                           
  7050                           ;KEYPAD.c: 41:     TRISB |= (1<<4) | (1<<5) | (1<<6) | (1<<7);
  7051     1710  30F0               	movlw	240
  7052     1711  0486               	iorwf	6,f	;volatile
  7053     1712                     l2891:
  7054                           
  7055                           ;KEYPAD.c: 42:     OPTION_REGbits.nRBPU = 0;
  7056     1712  1381               	bcf	1,7	;volatile
  7057     1713                     l30:
  7058     1713  0008               	return
  7059     1714                     __end_of_keypad_init:
  7060                           
  7061                           	psect	text23
  7062     08CD                     __ptext23:	
  7063 ;; *************** function _eventos *****************
  7064 ;; Defined at:
  7065 ;;		line 413 in file "main.c"
  7066 ;; Parameters:    Size  Location     Type
  7067 ;;		None
  7068 ;; Auto vars:     Size  Location     Type
  7069 ;;		None
  7070 ;; Return value:  Size  Location     Type
  7071 ;;                  1    wreg      void 
  7072 ;; Registers used:
  7073 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7074 ;; Tracked objects:
  7075 ;;		On entry : 0/0
  7076 ;;		On exit  : 0/0
  7077 ;;		Unchanged: 0/0
  7078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7079 ;;      Params:         0       0       0       0       0
  7080 ;;      Locals:         0       0       0       0       0
  7081 ;;      Temps:          0       3       0       0       0
  7082 ;;      Totals:         0       3       0       0       0
  7083 ;;Total ram usage:        3 bytes
  7084 ;; Hardware stack levels used: 1
  7085 ;; Hardware stack levels required when called: 4
  7086 ;; This function calls:
  7087 ;;		_LCD_Clear
  7088 ;;		_LCD_String_xy
  7089 ;; This function is called by:
  7090 ;;		_main
  7091 ;; This function uses a non-reentrant model
  7092 ;;
  7093                           
  7094     08CD                     _eventos:	
  7095                           ;psect for function _eventos
  7096                           
  7097     08CD                     l4047:	
  7098                           ;incstack = 0
  7099                           ; Regs used in _eventos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7100                           
  7101                           
  7102                           ;main.c: 414:     LCD_Clear();
  7103     08CD  160A  118A  2733  120A  158A  	fcall	_LCD_Clear
  7104     08D2                     l4049:
  7105                           
  7106                           ;main.c: 415:     LCD_String_xy(0,0,"EVENTOS");
  7107     08D2  1283               	bcf	3,5	;RP0=0, select bank0
  7108     08D3  1303               	bcf	3,6	;RP1=0, select bank0
  7109     08D4  01A0               	clrf	LCD_String_xy@pos
  7110     08D5  3075               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  7111     08D6  00A1               	movwf	LCD_String_xy@msg
  7112     08D7  3000               	movlw	0
  7113     08D8  120A  158A  2149  120A  158A  	fcall	_LCD_String_xy
  7114     08DD                     l4051:
  7115                           
  7116                           ;main.c: 416:     _delay((unsigned long)((500)*(8000000/4000.0)));
  7117     08DD  3006               	movlw	6
  7118     08DE  1283               	bcf	3,5	;RP0=0, select bank0
  7119     08DF  1303               	bcf	3,6	;RP1=0, select bank0
  7120     08E0  00A6               	movwf	??_eventos+2
  7121     08E1  3013               	movlw	19
  7122     08E2  00A5               	movwf	??_eventos+1
  7123     08E3  30AD               	movlw	173
  7124     08E4  00A4               	movwf	??_eventos
  7125     08E5                     u4837:
  7126     08E5  0BA4               	decfsz	??_eventos,f
  7127     08E6  28E5               	goto	u4837
  7128     08E7  0BA5               	decfsz	??_eventos+1,f
  7129     08E8  28E5               	goto	u4837
  7130     08E9  0BA6               	decfsz	??_eventos+2,f
  7131     08EA  28E5               	goto	u4837
  7132     08EB                     l4053:
  7133                           
  7134                           ;main.c: 417:     if (PORTAbits.RA0==1) {
  7135     08EB  1283               	bcf	3,5	;RP0=0, select bank0
  7136     08EC  1303               	bcf	3,6	;RP1=0, select bank0
  7137     08ED  1C05               	btfss	5,0	;volatile
  7138     08EE  28F0               	goto	u4541
  7139     08EF  28F1               	goto	u4540
  7140     08F0                     u4541:
  7141     08F0  28F4               	goto	l4057
  7142     08F1                     u4540:
  7143     08F1                     l4055:
  7144                           
  7145                           ;main.c: 418:         flag_correcto = 1;
  7146     08F1  3001               	movlw	1
  7147     08F2  00EF               	movwf	_flag_correcto
  7148                           
  7149                           ;main.c: 419:     }
  7150     08F3  28F5               	goto	l335
  7151     08F4                     l4057:
  7152                           
  7153                           ;main.c: 427:         flag_correcto = 0;
  7154     08F4  01EF               	clrf	_flag_correcto
  7155     08F5                     l335:
  7156     08F5  0008               	return
  7157     08F6                     __end_of_eventos:
  7158                           
  7159                           	psect	text24
  7160     0A1A                     __ptext24:	
  7161 ;; *************** function _alarma *****************
  7162 ;; Defined at:
  7163 ;;		line 470 in file "main.c"
  7164 ;; Parameters:    Size  Location     Type
  7165 ;;		None
  7166 ;; Auto vars:     Size  Location     Type
  7167 ;;		None
  7168 ;; Return value:  Size  Location     Type
  7169 ;;                  1    wreg      void 
  7170 ;; Registers used:
  7171 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7172 ;; Tracked objects:
  7173 ;;		On entry : 0/0
  7174 ;;		On exit  : 0/0
  7175 ;;		Unchanged: 0/0
  7176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7177 ;;      Params:         0       0       0       0       0
  7178 ;;      Locals:         0       0       0       0       0
  7179 ;;      Temps:          0       3       0       0       0
  7180 ;;      Totals:         0       3       0       0       0
  7181 ;;Total ram usage:        3 bytes
  7182 ;; Hardware stack levels used: 1
  7183 ;; Hardware stack levels required when called: 4
  7184 ;; This function calls:
  7185 ;;		_LCD_Clear
  7186 ;;		_LCD_String_xy
  7187 ;; This function is called by:
  7188 ;;		_main
  7189 ;; This function uses a non-reentrant model
  7190 ;;
  7191                           
  7192     0A1A                     _alarma:	
  7193                           ;psect for function _alarma
  7194                           
  7195     0A1A                     l3967:	
  7196                           ;incstack = 0
  7197                           ; Regs used in _alarma: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7198                           
  7199                           
  7200                           ;main.c: 471:                 LCD_Clear();
  7201     0A1A  160A  118A  2733  120A  158A  	fcall	_LCD_Clear
  7202     0A1F                     l3969:
  7203                           
  7204                           ;main.c: 472:                 LCD_String_xy(0,0,"ALARMA");
  7205     0A1F  1283               	bcf	3,5	;RP0=0, select bank0
  7206     0A20  1303               	bcf	3,6	;RP1=0, select bank0
  7207     0A21  01A0               	clrf	LCD_String_xy@pos
  7208     0A22  307D               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  7209     0A23  00A1               	movwf	LCD_String_xy@msg
  7210     0A24  3000               	movlw	0
  7211     0A25  120A  158A  2149  120A  158A  	fcall	_LCD_String_xy
  7212     0A2A                     l3971:
  7213                           
  7214                           ;main.c: 473:                 _delay((unsigned long)((500)*(8000000/4000.0)));
  7215     0A2A  3006               	movlw	6
  7216     0A2B  1283               	bcf	3,5	;RP0=0, select bank0
  7217     0A2C  1303               	bcf	3,6	;RP1=0, select bank0
  7218     0A2D  00A6               	movwf	??_alarma+2
  7219     0A2E  3013               	movlw	19
  7220     0A2F  00A5               	movwf	??_alarma+1
  7221     0A30  30AD               	movlw	173
  7222     0A31  00A4               	movwf	??_alarma
  7223     0A32                     u4847:
  7224     0A32  0BA4               	decfsz	??_alarma,f
  7225     0A33  2A32               	goto	u4847
  7226     0A34  0BA5               	decfsz	??_alarma+1,f
  7227     0A35  2A32               	goto	u4847
  7228     0A36  0BA6               	decfsz	??_alarma+2,f
  7229     0A37  2A32               	goto	u4847
  7230     0A38                     l3973:
  7231                           
  7232                           ;main.c: 474:                 if(flag_count_800ms){
  7233     0A38  1683               	bsf	3,5	;RP0=1, select bank1
  7234     0A39  1303               	bcf	3,6	;RP1=0, select bank1
  7235     0A3A  085A               	movf	_flag_count_800ms^(0+128),w
  7236     0A3B  1903               	btfsc	3,2
  7237     0A3C  2A3E               	goto	u4491
  7238     0A3D  2A3F               	goto	u4490
  7239     0A3E                     u4491:
  7240     0A3E  2A43               	goto	l3979
  7241     0A3F                     u4490:
  7242     0A3F                     l3975:
  7243                           
  7244                           ;main.c: 475:                     flag_count_800ms=0;
  7245     0A3F  01DA               	clrf	_flag_count_800ms^(0+128)
  7246     0A40                     l3977:
  7247                           
  7248                           ;main.c: 476:                     PORTAbits.RA1 = 0;
  7249     0A40  1283               	bcf	3,5	;RP0=0, select bank0
  7250     0A41  1303               	bcf	3,6	;RP1=0, select bank0
  7251     0A42  1085               	bcf	5,1	;volatile
  7252     0A43                     l3979:
  7253                           
  7254                           ;main.c: 478:                 if(PORTAbits.RA7){
  7255     0A43  1283               	bcf	3,5	;RP0=0, select bank0
  7256     0A44  1F85               	btfss	5,7	;volatile
  7257     0A45  2A47               	goto	u4501
  7258     0A46  2A48               	goto	u4500
  7259     0A47                     u4501:
  7260     0A47  2A4A               	goto	l3983
  7261     0A48                     u4500:
  7262     0A48                     l3981:
  7263                           
  7264                           ;main.c: 479:                     estadoactual=INIT;
  7265     0A48  01FA               	clrf	_estadoactual
  7266                           
  7267                           ;main.c: 480:                 }
  7268     0A49  2A56               	goto	l352
  7269     0A4A                     l3983:
  7270     0A4A  0878               	movf	_flag_count_5sec,w
  7271     0A4B  1903               	btfsc	3,2
  7272     0A4C  2A4E               	goto	u4511
  7273     0A4D  2A4F               	goto	u4510
  7274     0A4E                     u4511:
  7275     0A4E  2A56               	goto	l352
  7276     0A4F                     u4510:
  7277     0A4F                     l3985:
  7278                           
  7279                           ;main.c: 482:                     estadoactual=MONITOREO;
  7280     0A4F  3001               	movlw	1
  7281     0A50  00FA               	movwf	_estadoactual
  7282     0A51                     l3987:
  7283                           
  7284                           ;main.c: 483:                     flag_count_5sec=0;
  7285     0A51  01F8               	clrf	_flag_count_5sec
  7286                           
  7287                           ;main.c: 484:                     count_5sec = 0;
  7288     0A52  1683               	bsf	3,5	;RP0=1, select bank1
  7289     0A53  1303               	bcf	3,6	;RP1=0, select bank1
  7290     0A54  01D4               	clrf	_count_5sec^(0+128)
  7291     0A55  01D5               	clrf	(_count_5sec+1)^(0+128)
  7292     0A56                     l352:
  7293     0A56  0008               	return
  7294     0A57                     __end_of_alarma:
  7295                           
  7296                           	psect	text25
  7297     0949                     __ptext25:	
  7298 ;; *************** function _LCD_String_xy *****************
  7299 ;; Defined at:
  7300 ;;		line 131 in file "LCD.c"
  7301 ;; Parameters:    Size  Location     Type
  7302 ;;  row             1    wreg     unsigned char 
  7303 ;;  pos             1    0[BANK0 ] unsigned char 
  7304 ;;  msg             1    1[BANK0 ] PTR const unsigned char 
  7305 ;;		 -> STR_12(7), STR_11(8), STR_10(18), STR_9(17), 
  7306 ;;		 -> STR_8(15), STR_7(12), STR_5(10), STR_4(7), 
  7307 ;;		 -> STR_3(10), STR_2(5), STR_1(16), 
  7308 ;; Auto vars:     Size  Location     Type
  7309 ;;  row             1    2[BANK0 ] unsigned char 
  7310 ;;  location        1    3[BANK0 ] unsigned char 
  7311 ;; Return value:  Size  Location     Type
  7312 ;;                  1    wreg      void 
  7313 ;; Registers used:
  7314 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7315 ;; Tracked objects:
  7316 ;;		On entry : 0/0
  7317 ;;		On exit  : 0/0
  7318 ;;		Unchanged: 0/0
  7319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7320 ;;      Params:         0       2       0       0       0
  7321 ;;      Locals:         0       2       0       0       0
  7322 ;;      Temps:          0       0       0       0       0
  7323 ;;      Totals:         0       4       0       0       0
  7324 ;;Total ram usage:        4 bytes
  7325 ;; Hardware stack levels used: 1
  7326 ;; Hardware stack levels required when called: 3
  7327 ;; This function calls:
  7328 ;;		_LCD_Command
  7329 ;;		_LCD_String
  7330 ;; This function is called by:
  7331 ;;		_main
  7332 ;;		_secuencia5
  7333 ;;		_monitoreo
  7334 ;;		_seguridad
  7335 ;;		_eventos
  7336 ;;		_alarma
  7337 ;;		_Lmain
  7338 ;; This function uses a non-reentrant model
  7339 ;;
  7340                           
  7341     0949                     _LCD_String_xy:	
  7342                           ;psect for function _LCD_String_xy
  7343                           
  7344                           
  7345                           ;incstack = 0
  7346                           ; Regs used in _LCD_String_xy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7347                           ;LCD_String_xy@row stored from wreg
  7348     0949  1283               	bcf	3,5	;RP0=0, select bank0
  7349     094A  1303               	bcf	3,6	;RP1=0, select bank0
  7350     094B  00A2               	movwf	LCD_String_xy@row
  7351     094C                     l3729:
  7352     094C                     l3731:
  7353                           
  7354                           ;LCD.c: 134:     if(row<=1)
  7355     094C  3002               	movlw	2
  7356     094D  0222               	subwf	LCD_String_xy@row,w
  7357     094E  1803               	skipnc
  7358     094F  2951               	goto	u4141
  7359     0950  2952               	goto	u4140
  7360     0951                     u4141:
  7361     0951  295D               	goto	l3737
  7362     0952                     u4140:
  7363     0952                     l3733:
  7364                           
  7365                           ;LCD.c: 135:     {;LCD.c: 136:         location=(0x80) | ((pos) & 0x0f);
  7366     0952  0820               	movf	LCD_String_xy@pos,w
  7367     0953  390F               	andlw	15
  7368     0954  3880               	iorlw	128
  7369     0955  00A3               	movwf	LCD_String_xy@location
  7370     0956                     l3735:
  7371                           
  7372                           ;LCD.c: 137:         LCD_Command(location);
  7373     0956  0823               	movf	LCD_String_xy@location,w
  7374     0957  120A  158A  2175  120A  158A  	fcall	_LCD_Command
  7375                           
  7376                           ;LCD.c: 138:     }
  7377     095C  2967               	goto	l3741
  7378     095D                     l3737:
  7379                           
  7380                           ;LCD.c: 140:     {;LCD.c: 141:         location=(0xC0) | ((pos) & 0x0f);
  7381     095D  0820               	movf	LCD_String_xy@pos,w
  7382     095E  390F               	andlw	15
  7383     095F  38C0               	iorlw	192
  7384     0960  00A3               	movwf	LCD_String_xy@location
  7385     0961                     l3739:
  7386                           
  7387                           ;LCD.c: 142:         LCD_Command(location);
  7388     0961  0823               	movf	LCD_String_xy@location,w
  7389     0962  120A  158A  2175  120A  158A  	fcall	_LCD_Command
  7390     0967                     l3741:
  7391                           
  7392                           ;LCD.c: 146:     LCD_String(msg);
  7393     0967  1283               	bcf	3,5	;RP0=0, select bank0
  7394     0968  1303               	bcf	3,6	;RP1=0, select bank0
  7395     0969  0821               	movf	LCD_String_xy@msg,w
  7396     096A  00F6               	movwf	LCD_String@msg
  7397     096B  3000               	movlw	0
  7398     096C  1D03               	btfss	3,2
  7399     096D  3080               	movlw	128
  7400     096E  00F7               	movwf	LCD_String@msg+1
  7401     096F  160A  118A  27DA  120A  158A  	fcall	_LCD_String
  7402     0974                     l131:
  7403     0974  0008               	return
  7404     0975                     __end_of_LCD_String_xy:
  7405                           
  7406                           	psect	text26
  7407     17DA                     __ptext26:	
  7408 ;; *************** function _LCD_String *****************
  7409 ;; Defined at:
  7410 ;;		line 121 in file "LCD.c"
  7411 ;; Parameters:    Size  Location     Type
  7412 ;;  msg             2    6[COMMON] PTR const unsigned char 
  7413 ;;		 -> STR_12(7), STR_11(8), STR_10(18), STR_9(17), 
  7414 ;;		 -> STR_8(15), STR_7(12), monitoreo@StringTemperature(20), STR_5(10), 
  7415 ;;		 -> STR_4(7), STR_3(10), STR_2(5), STR_1(16), 
  7416 ;; Auto vars:     Size  Location     Type
  7417 ;;		None
  7418 ;; Return value:  Size  Location     Type
  7419 ;;                  1    wreg      void 
  7420 ;; Registers used:
  7421 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7422 ;; Tracked objects:
  7423 ;;		On entry : 0/0
  7424 ;;		On exit  : 0/0
  7425 ;;		Unchanged: 0/0
  7426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7427 ;;      Params:         2       0       0       0       0
  7428 ;;      Locals:         0       0       0       0       0
  7429 ;;      Temps:          0       0       0       0       0
  7430 ;;      Totals:         2       0       0       0       0
  7431 ;;Total ram usage:        2 bytes
  7432 ;; Hardware stack levels used: 1
  7433 ;; Hardware stack levels required when called: 2
  7434 ;; This function calls:
  7435 ;;		_LCD_Char
  7436 ;; This function is called by:
  7437 ;;		_LCD_String_xy
  7438 ;;		_monitoreo
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442     17DA                     _LCD_String:	
  7443                           ;psect for function _LCD_String
  7444                           
  7445     17DA                     l3581:	
  7446                           ;incstack = 0
  7447                           ; Regs used in _LCD_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7448                           
  7449                           
  7450                           ;LCD.c: 121: void LCD_String(const char *msg);LCD.c: 122: {;LCD.c: 123:  while((*msg)!=0
      +                          )
  7451     17DA  2FEF               	goto	l3587
  7452     17DB                     l3583:
  7453                           
  7454                           ;LCD.c: 124:  {;LCD.c: 125:    LCD_Char(*msg);
  7455     17DB  0877               	movf	LCD_String@msg+1,w
  7456     17DC  00FF               	movwf	btemp+1
  7457     17DD  0876               	movf	LCD_String@msg,w
  7458     17DE  0084               	movwf	4
  7459     17DF  120A  158A  2000  160A  118A  	fcall	stringtab
  7460     17E4  120A  158A  21AB  160A  118A  	fcall	_LCD_Char
  7461     17E9                     l3585:
  7462                           
  7463                           ;LCD.c: 126:    msg++;
  7464     17E9  3001               	movlw	1
  7465     17EA  07F6               	addwf	LCD_String@msg,f
  7466     17EB  1803               	skipnc
  7467     17EC  0AF7               	incf	LCD_String@msg+1,f
  7468     17ED  3000               	movlw	0
  7469     17EE  07F7               	addwf	LCD_String@msg+1,f
  7470     17EF                     l3587:
  7471                           
  7472                           ;LCD.c: 123:  while((*msg)!=0)
  7473     17EF  0877               	movf	LCD_String@msg+1,w
  7474     17F0  1283               	bcf	3,5	;RP0=0, select bank0
  7475     17F1  1303               	bcf	3,6	;RP1=0, select bank0
  7476     17F2  00FF               	movwf	btemp+1
  7477     17F3  0876               	movf	LCD_String@msg,w
  7478     17F4  0084               	movwf	4
  7479     17F5  120A  158A  2000  160A  118A  	fcall	stringtab
  7480     17FA  3A00               	xorlw	0
  7481     17FB  1D03               	skipz
  7482     17FC  2FFE               	goto	u3881
  7483     17FD  2FFF               	goto	u3880
  7484     17FE                     u3881:
  7485     17FE  2FDB               	goto	l3583
  7486     17FF                     u3880:
  7487     17FF                     l126:
  7488     17FF  0008               	return
  7489     1800                     __end_of_LCD_String:
  7490                           
  7491                           	psect	text27
  7492     09AB                     __ptext27:	
  7493 ;; *************** function _LCD_Char *****************
  7494 ;; Defined at:
  7495 ;;		line 106 in file "LCD.c"
  7496 ;; Parameters:    Size  Location     Type
  7497 ;;  dat             1    wreg     unsigned char 
  7498 ;; Auto vars:     Size  Location     Type
  7499 ;;  dat             1    5[COMMON] unsigned char 
  7500 ;; Return value:  Size  Location     Type
  7501 ;;                  1    wreg      void 
  7502 ;; Registers used:
  7503 ;;		wreg, status,2, status,0
  7504 ;; Tracked objects:
  7505 ;;		On entry : 0/0
  7506 ;;		On exit  : 0/0
  7507 ;;		Unchanged: 0/0
  7508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7509 ;;      Params:         0       0       0       0       0
  7510 ;;      Locals:         1       0       0       0       0
  7511 ;;      Temps:          2       0       0       0       0
  7512 ;;      Totals:         3       0       0       0       0
  7513 ;;Total ram usage:        3 bytes
  7514 ;; Hardware stack levels used: 1
  7515 ;; Hardware stack levels required when called: 1
  7516 ;; This function calls:
  7517 ;;		Nothing
  7518 ;; This function is called by:
  7519 ;;		_LCD_String
  7520 ;;		_seguridad
  7521 ;;		_LCD_Custom_Char
  7522 ;;		_Lmain
  7523 ;; This function uses a non-reentrant model
  7524 ;;
  7525                           
  7526     09AB                     _LCD_Char:	
  7527                           ;psect for function _LCD_Char
  7528                           
  7529                           
  7530                           ;incstack = 0
  7531                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  7532                           ;LCD_Char@dat stored from wreg
  7533     09AB  00F5               	movwf	LCD_Char@dat
  7534     09AC                     l3489:
  7535                           
  7536                           ;LCD.c: 106: void LCD_Char(unsigned char dat);LCD.c: 107: {;LCD.c: 108:  PORTC = (PORTC 
      +                          & 0x0f) | (0xF0 & dat);
  7537     09AC  30F0               	movlw	240
  7538     09AD  0575               	andwf	LCD_Char@dat,w
  7539     09AE  00F3               	movwf	??_LCD_Char
  7540     09AF  1283               	bcf	3,5	;RP0=0, select bank0
  7541     09B0  1303               	bcf	3,6	;RP1=0, select bank0
  7542     09B1  0807               	movf	7,w	;volatile
  7543     09B2  390F               	andlw	15
  7544     09B3  0473               	iorwf	??_LCD_Char,w
  7545     09B4  0087               	movwf	7	;volatile
  7546     09B5                     l3491:
  7547                           
  7548                           ;LCD.c: 109:  PORTCbits.RC0 = 1;
  7549     09B5  1407               	bsf	7,0	;volatile
  7550     09B6                     l3493:
  7551                           
  7552                           ;LCD.c: 110:  PORTCbits.RC1 = 1;
  7553     09B6  1487               	bsf	7,1	;volatile
  7554     09B7                     l3495:
  7555                           
  7556                           ;LCD.c: 111:  __nop();
  7557     09B7  0000               	nop
  7558     09B8                     l3497:
  7559                           
  7560                           ;LCD.c: 112:  PORTCbits.RC1 = 0;
  7561     09B8  1283               	bcf	3,5	;RP0=0, select bank0
  7562     09B9  1303               	bcf	3,6	;RP1=0, select bank0
  7563     09BA  1087               	bcf	7,1	;volatile
  7564     09BB                     l3499:
  7565                           
  7566                           ;LCD.c: 113:  _delay((unsigned long)((1)*(8000000/4000.0)));
  7567     09BB  3003               	movlw	3
  7568     09BC  00F4               	movwf	??_LCD_Char+1
  7569     09BD  3097               	movlw	151
  7570     09BE  00F3               	movwf	??_LCD_Char
  7571     09BF                     u4857:
  7572     09BF  0BF3               	decfsz	??_LCD_Char,f
  7573     09C0  29BF               	goto	u4857
  7574     09C1  0BF4               	decfsz	??_LCD_Char+1,f
  7575     09C2  29BF               	goto	u4857
  7576     09C3  29C4               	nop2
  7577     09C4                     l3501:
  7578                           
  7579                           ;LCD.c: 114:     PORTC = (unsigned char)((PORTC & 0x0f) | (dat<<4));
  7580     09C4  0875               	movf	LCD_Char@dat,w
  7581     09C5  00F3               	movwf	??_LCD_Char
  7582     09C6  3004               	movlw	4
  7583     09C7                     u3765:
  7584     09C7  1003               	clrc
  7585     09C8  0DF3               	rlf	??_LCD_Char,f
  7586     09C9  3EFF               	addlw	-1
  7587     09CA  1D03               	skipz
  7588     09CB  29C7               	goto	u3765
  7589     09CC  1283               	bcf	3,5	;RP0=0, select bank0
  7590     09CD  1303               	bcf	3,6	;RP1=0, select bank0
  7591     09CE  0807               	movf	7,w	;volatile
  7592     09CF  390F               	andlw	15
  7593     09D0  0473               	iorwf	??_LCD_Char,w
  7594     09D1  0087               	movwf	7	;volatile
  7595     09D2                     l3503:
  7596                           
  7597                           ;LCD.c: 115:  PORTCbits.RC1 = 1;
  7598     09D2  1487               	bsf	7,1	;volatile
  7599     09D3                     l3505:
  7600                           
  7601                           ;LCD.c: 116:  __nop();
  7602     09D3  0000               	nop
  7603     09D4                     l3507:
  7604                           
  7605                           ;LCD.c: 117:  PORTCbits.RC1 = 0;
  7606     09D4  1283               	bcf	3,5	;RP0=0, select bank0
  7607     09D5  1303               	bcf	3,6	;RP1=0, select bank0
  7608     09D6  1087               	bcf	7,1	;volatile
  7609                           
  7610                           ;LCD.c: 118:  _delay((unsigned long)((3)*(8000000/4000.0)));
  7611     09D7  3008               	movlw	8
  7612     09D8  00F4               	movwf	??_LCD_Char+1
  7613     09D9  30C9               	movlw	201
  7614     09DA  00F3               	movwf	??_LCD_Char
  7615     09DB                     u4867:
  7616     09DB  0BF3               	decfsz	??_LCD_Char,f
  7617     09DC  29DB               	goto	u4867
  7618     09DD  0BF4               	decfsz	??_LCD_Char+1,f
  7619     09DE  29DB               	goto	u4867
  7620     09DF  29E0               	nop2
  7621     09E0                     l120:
  7622     09E0  0008               	return
  7623     09E1                     __end_of_LCD_Char:
  7624                           
  7625                           	psect	text28
  7626     1733                     __ptext28:	
  7627 ;; *************** function _LCD_Clear *****************
  7628 ;; Defined at:
  7629 ;;		line 162 in file "LCD.c"
  7630 ;; Parameters:    Size  Location     Type
  7631 ;;		None
  7632 ;; Auto vars:     Size  Location     Type
  7633 ;;		None
  7634 ;; Return value:  Size  Location     Type
  7635 ;;                  1    wreg      void 
  7636 ;; Registers used:
  7637 ;;		wreg, status,2, status,0, pclath, cstack
  7638 ;; Tracked objects:
  7639 ;;		On entry : 0/0
  7640 ;;		On exit  : 0/0
  7641 ;;		Unchanged: 0/0
  7642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7643 ;;      Params:         0       0       0       0       0
  7644 ;;      Locals:         0       0       0       0       0
  7645 ;;      Temps:          2       0       0       0       0
  7646 ;;      Totals:         2       0       0       0       0
  7647 ;;Total ram usage:        2 bytes
  7648 ;; Hardware stack levels used: 1
  7649 ;; Hardware stack levels required when called: 2
  7650 ;; This function calls:
  7651 ;;		_LCD_Command
  7652 ;; This function is called by:
  7653 ;;		_main
  7654 ;;		_secuencia5
  7655 ;;		_monitoreo
  7656 ;;		_seguridad
  7657 ;;		_eventos
  7658 ;;		_alarma
  7659 ;; This function uses a non-reentrant model
  7660 ;;
  7661                           
  7662     1733                     _LCD_Clear:	
  7663                           ;psect for function _LCD_Clear
  7664                           
  7665     1733                     l3743:	
  7666                           ;incstack = 0
  7667                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  7668                           
  7669                           
  7670                           ;LCD.c: 165:     LCD_Command(0x01);
  7671     1733  3001               	movlw	1
  7672     1734  120A  158A  2175  160A  118A  	fcall	_LCD_Command
  7673     1739                     l3745:
  7674                           
  7675                           ;LCD.c: 166:     _delay((unsigned long)((3)*(8000000/4000.0)));
  7676     1739  3008               	movlw	8
  7677     173A  00F7               	movwf	??_LCD_Clear+1
  7678     173B  30C9               	movlw	201
  7679     173C  00F6               	movwf	??_LCD_Clear
  7680     173D                     u4877:
  7681     173D  0BF6               	decfsz	??_LCD_Clear,f
  7682     173E  2F3D               	goto	u4877
  7683     173F  0BF7               	decfsz	??_LCD_Clear+1,f
  7684     1740  2F3D               	goto	u4877
  7685     1741  2F42               	nop2
  7686     1742                     l134:
  7687     1742  0008               	return
  7688     1743                     __end_of_LCD_Clear:
  7689                           
  7690                           	psect	text29
  7691     1723                     __ptext29:	
  7692 ;; *************** function _adc_init *****************
  7693 ;; Defined at:
  7694 ;;		line 6 in file "adc.c"
  7695 ;; Parameters:    Size  Location     Type
  7696 ;;		None
  7697 ;; Auto vars:     Size  Location     Type
  7698 ;;		None
  7699 ;; Return value:  Size  Location     Type
  7700 ;;                  1    wreg      void 
  7701 ;; Registers used:
  7702 ;;		wreg, status,2, status,0
  7703 ;; Tracked objects:
  7704 ;;		On entry : 0/0
  7705 ;;		On exit  : 0/0
  7706 ;;		Unchanged: 0/0
  7707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7708 ;;      Params:         0       0       0       0       0
  7709 ;;      Locals:         0       0       0       0       0
  7710 ;;      Temps:          0       0       0       0       0
  7711 ;;      Totals:         0       0       0       0       0
  7712 ;;Total ram usage:        0 bytes
  7713 ;; Hardware stack levels used: 1
  7714 ;; Hardware stack levels required when called: 1
  7715 ;; This function calls:
  7716 ;;		Nothing
  7717 ;; This function is called by:
  7718 ;;		_main
  7719 ;; This function uses a non-reentrant model
  7720 ;;
  7721                           
  7722     1723                     _adc_init:	
  7723                           ;psect for function _adc_init
  7724                           
  7725     1723                     l2881:	
  7726                           ;incstack = 0
  7727                           ; Regs used in _adc_init: [wreg+status,2+status,0]
  7728                           
  7729                           
  7730                           ;adc.c: 8:     ADCON1bits.ADFM = 1;
  7731     1723  1683               	bsf	3,5	;RP0=1, select bank1
  7732     1724  1303               	bcf	3,6	;RP1=0, select bank1
  7733     1725  179F               	bsf	31,7	;volatile
  7734                           
  7735                           ;adc.c: 9:     ADCON1bits.VCFG0 = 0;
  7736     1726  121F               	bcf	31,4	;volatile
  7737                           
  7738                           ;adc.c: 10:     ADCON1bits.VCFG1 = 0;
  7739     1727  129F               	bcf	31,5	;volatile
  7740     1728                     l2883:
  7741                           
  7742                           ;adc.c: 12:     ADCON0bits.ADCS = 0b01;
  7743     1728  1283               	bcf	3,5	;RP0=0, select bank0
  7744     1729  1303               	bcf	3,6	;RP1=0, select bank0
  7745     172A  081F               	movf	31,w	;volatile
  7746     172B  393F               	andlw	-193
  7747     172C  3840               	iorlw	64
  7748     172D  009F               	movwf	31	;volatile
  7749     172E                     l2885:
  7750                           
  7751                           ;adc.c: 13:     ADRESH=0;
  7752     172E  019E               	clrf	30	;volatile
  7753     172F                     l2887:
  7754                           
  7755                           ;adc.c: 14:     ADRESL=0;
  7756     172F  1683               	bsf	3,5	;RP0=1, select bank1
  7757     1730  1303               	bcf	3,6	;RP1=0, select bank1
  7758     1731  019E               	clrf	30	;volatile
  7759     1732                     l13:
  7760     1732  0008               	return
  7761     1733                     __end_of_adc_init:
  7762                           
  7763                           	psect	text30
  7764     1714                     __ptext30:	
  7765 ;; *************** function _Timer1_start *****************
  7766 ;; Defined at:
  7767 ;;		line 29 in file "timer.c"
  7768 ;; Parameters:    Size  Location     Type
  7769 ;;		None
  7770 ;; Auto vars:     Size  Location     Type
  7771 ;;		None
  7772 ;; Return value:  Size  Location     Type
  7773 ;;                  1    wreg      void 
  7774 ;; Registers used:
  7775 ;;		status,2
  7776 ;; Tracked objects:
  7777 ;;		On entry : 0/0
  7778 ;;		On exit  : 0/0
  7779 ;;		Unchanged: 0/0
  7780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7781 ;;      Params:         0       0       0       0       0
  7782 ;;      Locals:         0       0       0       0       0
  7783 ;;      Temps:          0       0       0       0       0
  7784 ;;      Totals:         0       0       0       0       0
  7785 ;;Total ram usage:        0 bytes
  7786 ;; Hardware stack levels used: 1
  7787 ;; Hardware stack levels required when called: 1
  7788 ;; This function calls:
  7789 ;;		Nothing
  7790 ;; This function is called by:
  7791 ;;		_main
  7792 ;; This function uses a non-reentrant model
  7793 ;;
  7794                           
  7795     1714                     _Timer1_start:	
  7796                           ;psect for function _Timer1_start
  7797                           
  7798     1714                     l2923:	
  7799                           ;incstack = 0
  7800                           ; Regs used in _Timer1_start: [status,2]
  7801                           
  7802                           
  7803                           ;timer.c: 31:     GIE=1;
  7804     1714  178B               	bsf	11,7	;volatile
  7805                           
  7806                           ;timer.c: 32:     PEIE=1;
  7807     1715  170B               	bsf	11,6	;volatile
  7808                           
  7809                           ;timer.c: 33:     TMR1IE=1;
  7810     1716  1683               	bsf	3,5	;RP0=1, select bank1
  7811     1717  1303               	bcf	3,6	;RP1=0, select bank1
  7812     1718  140C               	bsf	12,0	;volatile
  7813                           
  7814                           ;timer.c: 34:     TMR1IF=0;
  7815     1719  1283               	bcf	3,5	;RP0=0, select bank0
  7816     171A  1303               	bcf	3,6	;RP1=0, select bank0
  7817     171B  100C               	bcf	12,0	;volatile
  7818     171C                     l2925:
  7819                           
  7820                           ;timer.c: 35:     T1CON=0x00;
  7821     171C  0190               	clrf	16	;volatile
  7822     171D                     l2927:
  7823                           
  7824                           ;timer.c: 36:     TMR1=0xFC16;
  7825     171D  30FC               	movlw	252
  7826     171E  008F               	movwf	15	;volatile
  7827     171F  3016               	movlw	22
  7828     1720  008E               	movwf	14	;volatile
  7829     1721                     l2929:
  7830                           
  7831                           ;timer.c: 37:     TMR1ON=1;
  7832     1721  1410               	bsf	16,0	;volatile
  7833     1722                     l369:
  7834     1722  0008               	return
  7835     1723                     __end_of_Timer1_start:
  7836                           
  7837                           	psect	text31
  7838     091F                     __ptext31:	
  7839 ;; *************** function _LCD_Init *****************
  7840 ;; Defined at:
  7841 ;;		line 53 in file "LCD.c"
  7842 ;; Parameters:    Size  Location     Type
  7843 ;;		None
  7844 ;; Auto vars:     Size  Location     Type
  7845 ;;		None
  7846 ;; Return value:  Size  Location     Type
  7847 ;;                  1    wreg      void 
  7848 ;; Registers used:
  7849 ;;		wreg, status,2, status,0, pclath, cstack
  7850 ;; Tracked objects:
  7851 ;;		On entry : 0/0
  7852 ;;		On exit  : 0/0
  7853 ;;		Unchanged: 0/0
  7854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7855 ;;      Params:         0       0       0       0       0
  7856 ;;      Locals:         0       0       0       0       0
  7857 ;;      Temps:          2       0       0       0       0
  7858 ;;      Totals:         2       0       0       0       0
  7859 ;;Total ram usage:        2 bytes
  7860 ;; Hardware stack levels used: 1
  7861 ;; Hardware stack levels required when called: 2
  7862 ;; This function calls:
  7863 ;;		_LCD_Command
  7864 ;; This function is called by:
  7865 ;;		_main
  7866 ;; This function uses a non-reentrant model
  7867 ;;
  7868                           
  7869     091F                     _LCD_Init:	
  7870                           ;psect for function _LCD_Init
  7871                           
  7872     091F                     l3859:	
  7873                           ;incstack = 0
  7874                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  7875                           
  7876                           
  7877                           ;LCD.c: 55:     TRISC = 0;
  7878     091F  1683               	bsf	3,5	;RP0=1, select bank1
  7879     0920  1303               	bcf	3,6	;RP1=0, select bank1
  7880     0921  0187               	clrf	7	;volatile
  7881     0922                     l3861:
  7882                           
  7883                           ;LCD.c: 56:     _delay((unsigned long)((15)*(8000000/4000.0)));
  7884     0922  3027               	movlw	39
  7885     0923  00F7               	movwf	??_LCD_Init+1
  7886     0924  30F5               	movlw	245
  7887     0925  00F6               	movwf	??_LCD_Init
  7888     0926                     u4887:
  7889     0926  0BF6               	decfsz	??_LCD_Init,f
  7890     0927  2926               	goto	u4887
  7891     0928  0BF7               	decfsz	??_LCD_Init+1,f
  7892     0929  2926               	goto	u4887
  7893     092A                     l3863:
  7894                           
  7895                           ;LCD.c: 57:     LCD_Command(0x02);
  7896     092A  3002               	movlw	2
  7897     092B  120A  158A  2175  120A  158A  	fcall	_LCD_Command
  7898     0930                     l3865:
  7899                           
  7900                           ;LCD.c: 58:     LCD_Command(0x28);
  7901     0930  3028               	movlw	40
  7902     0931  120A  158A  2175  120A  158A  	fcall	_LCD_Command
  7903     0936                     l3867:
  7904                           
  7905                           ;LCD.c: 59:     LCD_Command(0x01);
  7906     0936  3001               	movlw	1
  7907     0937  120A  158A  2175  120A  158A  	fcall	_LCD_Command
  7908     093C                     l3869:
  7909                           
  7910                           ;LCD.c: 60:     LCD_Command(0x0c);
  7911     093C  300C               	movlw	12
  7912     093D  120A  158A  2175  120A  158A  	fcall	_LCD_Command
  7913     0942                     l3871:
  7914                           
  7915                           ;LCD.c: 61:     LCD_Command(0x06);
  7916     0942  3006               	movlw	6
  7917     0943  120A  158A  2175  120A  158A  	fcall	_LCD_Command
  7918     0948                     l114:
  7919     0948  0008               	return
  7920     0949                     __end_of_LCD_Init:
  7921                           
  7922                           	psect	text32
  7923     0975                     __ptext32:	
  7924 ;; *************** function _LCD_Command *****************
  7925 ;; Defined at:
  7926 ;;		line 77 in file "LCD.c"
  7927 ;; Parameters:    Size  Location     Type
  7928 ;;  cmd             1    wreg     unsigned char 
  7929 ;; Auto vars:     Size  Location     Type
  7930 ;;  cmd             1    5[COMMON] unsigned char 
  7931 ;; Return value:  Size  Location     Type
  7932 ;;                  1    wreg      void 
  7933 ;; Registers used:
  7934 ;;		wreg, status,2, status,0
  7935 ;; Tracked objects:
  7936 ;;		On entry : 0/0
  7937 ;;		On exit  : 0/0
  7938 ;;		Unchanged: 0/0
  7939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7940 ;;      Params:         0       0       0       0       0
  7941 ;;      Locals:         1       0       0       0       0
  7942 ;;      Temps:          2       0       0       0       0
  7943 ;;      Totals:         3       0       0       0       0
  7944 ;;Total ram usage:        3 bytes
  7945 ;; Hardware stack levels used: 1
  7946 ;; Hardware stack levels required when called: 1
  7947 ;; This function calls:
  7948 ;;		Nothing
  7949 ;; This function is called by:
  7950 ;;		_LCD_Init
  7951 ;;		_LCD_String_xy
  7952 ;;		_LCD_Clear
  7953 ;;		_monitoreo
  7954 ;;		_seguridad
  7955 ;;		_LCD_Custom_Char
  7956 ;;		_Lmain
  7957 ;; This function uses a non-reentrant model
  7958 ;;
  7959                           
  7960     0975                     _LCD_Command:	
  7961                           ;psect for function _LCD_Command
  7962                           
  7963                           
  7964                           ;incstack = 0
  7965                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  7966                           ;LCD_Command@cmd stored from wreg
  7967     0975  00F5               	movwf	LCD_Command@cmd
  7968     0976                     l3561:
  7969                           
  7970                           ;LCD.c: 77: void LCD_Command(unsigned char cmd );LCD.c: 78: {;LCD.c: 79:  PORTC = (PORTC
      +                           & 0x0f) |(0xF0 & cmd);
  7971     0976  30F0               	movlw	240
  7972     0977  0575               	andwf	LCD_Command@cmd,w
  7973     0978  00F3               	movwf	??_LCD_Command
  7974     0979  1283               	bcf	3,5	;RP0=0, select bank0
  7975     097A  1303               	bcf	3,6	;RP1=0, select bank0
  7976     097B  0807               	movf	7,w	;volatile
  7977     097C  390F               	andlw	15
  7978     097D  0473               	iorwf	??_LCD_Command,w
  7979     097E  0087               	movwf	7	;volatile
  7980     097F                     l3563:
  7981                           
  7982                           ;LCD.c: 80:  PORTCbits.RC0 = 0;
  7983     097F  1007               	bcf	7,0	;volatile
  7984     0980                     l3565:
  7985                           
  7986                           ;LCD.c: 81:  PORTCbits.RC1 = 1;
  7987     0980  1487               	bsf	7,1	;volatile
  7988     0981                     l3567:
  7989                           
  7990                           ;LCD.c: 82:  __nop();
  7991     0981  0000               	nop
  7992     0982                     l3569:
  7993                           
  7994                           ;LCD.c: 83:  PORTCbits.RC1 = 0;
  7995     0982  1283               	bcf	3,5	;RP0=0, select bank0
  7996     0983  1303               	bcf	3,6	;RP1=0, select bank0
  7997     0984  1087               	bcf	7,1	;volatile
  7998     0985                     l3571:
  7999                           
  8000                           ;LCD.c: 84:  _delay((unsigned long)((1)*(8000000/4000.0)));
  8001     0985  3003               	movlw	3
  8002     0986  00F4               	movwf	??_LCD_Command+1
  8003     0987  3097               	movlw	151
  8004     0988  00F3               	movwf	??_LCD_Command
  8005     0989                     u4897:
  8006     0989  0BF3               	decfsz	??_LCD_Command,f
  8007     098A  2989               	goto	u4897
  8008     098B  0BF4               	decfsz	??_LCD_Command+1,f
  8009     098C  2989               	goto	u4897
  8010     098D  298E               	nop2
  8011     098E                     l3573:
  8012                           
  8013                           ;LCD.c: 85:     PORTC = (unsigned char)((PORTC & 0x0f) | (cmd<<4));
  8014     098E  0875               	movf	LCD_Command@cmd,w
  8015     098F  00F3               	movwf	??_LCD_Command
  8016     0990  3004               	movlw	4
  8017     0991                     u3875:
  8018     0991  1003               	clrc
  8019     0992  0DF3               	rlf	??_LCD_Command,f
  8020     0993  3EFF               	addlw	-1
  8021     0994  1D03               	skipz
  8022     0995  2991               	goto	u3875
  8023     0996  1283               	bcf	3,5	;RP0=0, select bank0
  8024     0997  1303               	bcf	3,6	;RP1=0, select bank0
  8025     0998  0807               	movf	7,w	;volatile
  8026     0999  390F               	andlw	15
  8027     099A  0473               	iorwf	??_LCD_Command,w
  8028     099B  0087               	movwf	7	;volatile
  8029     099C                     l3575:
  8030                           
  8031                           ;LCD.c: 86:  PORTCbits.RC1 = 1;
  8032     099C  1487               	bsf	7,1	;volatile
  8033     099D                     l3577:
  8034                           
  8035                           ;LCD.c: 87:  __nop();
  8036     099D  0000               	nop
  8037     099E                     l3579:
  8038                           
  8039                           ;LCD.c: 88:  PORTCbits.RC1 = 0;
  8040     099E  1283               	bcf	3,5	;RP0=0, select bank0
  8041     099F  1303               	bcf	3,6	;RP1=0, select bank0
  8042     09A0  1087               	bcf	7,1	;volatile
  8043                           
  8044                           ;LCD.c: 89:  _delay((unsigned long)((3)*(8000000/4000.0)));
  8045     09A1  3008               	movlw	8
  8046     09A2  00F4               	movwf	??_LCD_Command+1
  8047     09A3  30C9               	movlw	201
  8048     09A4  00F3               	movwf	??_LCD_Command
  8049     09A5                     u4907:
  8050     09A5  0BF3               	decfsz	??_LCD_Command,f
  8051     09A6  29A5               	goto	u4907
  8052     09A7  0BF4               	decfsz	??_LCD_Command+1,f
  8053     09A8  29A5               	goto	u4907
  8054     09A9  29AA               	nop2
  8055     09AA                     l117:
  8056     09AA  0008               	return
  8057     09AB                     __end_of_LCD_Command:
  8058                           
  8059                           	psect	text33
  8060     0BD4                     __ptext33:	
  8061 ;; *************** function _Timer1_ISR *****************
  8062 ;; Defined at:
  8063 ;;		line 431 in file "main.c"
  8064 ;; Parameters:    Size  Location     Type
  8065 ;;		None
  8066 ;; Auto vars:     Size  Location     Type
  8067 ;;		None
  8068 ;; Return value:  Size  Location     Type
  8069 ;;                  1    wreg      void 
  8070 ;; Registers used:
  8071 ;;		wreg, status,2, btemp+1
  8072 ;; Tracked objects:
  8073 ;;		On entry : 0/0
  8074 ;;		On exit  : 0/0
  8075 ;;		Unchanged: 0/0
  8076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8077 ;;      Params:         0       0       0       0       0
  8078 ;;      Locals:         0       0       0       0       0
  8079 ;;      Temps:          3       0       0       0       0
  8080 ;;      Totals:         3       0       0       0       0
  8081 ;;Total ram usage:        3 bytes
  8082 ;; Hardware stack levels used: 1
  8083 ;; This function calls:
  8084 ;;		Nothing
  8085 ;; This function is called by:
  8086 ;;		Interrupt level 1
  8087 ;; This function uses a non-reentrant model
  8088 ;;
  8089                           
  8090     0BD4                     _Timer1_ISR:	
  8091                           ;psect for function _Timer1_ISR
  8092                           
  8093     0BD4                     i1l3297:
  8094                           
  8095                           ;main.c: 433:     TMR1=0xFC16;
  8096     0BD4  30FC               	movlw	252
  8097     0BD5  1283               	bcf	3,5	;RP0=0, select bank0
  8098     0BD6  1303               	bcf	3,6	;RP1=0, select bank0
  8099     0BD7  008F               	movwf	15	;volatile
  8100     0BD8  3016               	movlw	22
  8101     0BD9  008E               	movwf	14	;volatile
  8102     0BDA                     i1l3299:
  8103                           
  8104                           ;main.c: 434:     count_2sec++;
  8105     0BDA  3001               	movlw	1
  8106     0BDB  1683               	bsf	3,5	;RP0=1, select bank1
  8107     0BDC  1303               	bcf	3,6	;RP1=0, select bank1
  8108     0BDD  07D2               	addwf	_count_2sec^(0+128),f
  8109     0BDE  1803               	skipnc
  8110     0BDF  0AD3               	incf	(_count_2sec+1)^(0+128),f
  8111     0BE0  3000               	movlw	0
  8112     0BE1  07D3               	addwf	(_count_2sec+1)^(0+128),f
  8113     0BE2                     i1l3301:
  8114                           
  8115                           ;main.c: 435:     if(count_2sec > 2000){
  8116     0BE2  0853               	movf	(_count_2sec+1)^(0+128),w
  8117     0BE3  3A80               	xorlw	128
  8118     0BE4  00FF               	movwf	btemp+1
  8119     0BE5  3087               	movlw	135
  8120     0BE6  027F               	subwf	btemp+1,w
  8121     0BE7  1D03               	skipz
  8122     0BE8  2BEB               	goto	u344_25
  8123     0BE9  30D1               	movlw	209
  8124     0BEA  0252               	subwf	_count_2sec^(0+128),w
  8125     0BEB                     u344_25:
  8126     0BEB  1C03               	skipc
  8127     0BEC  2BEE               	goto	u344_21
  8128     0BED  2BEF               	goto	u344_20
  8129     0BEE                     u344_21:
  8130     0BEE  2BF5               	goto	i1l3307
  8131     0BEF                     u344_20:
  8132     0BEF                     i1l3303:
  8133                           
  8134                           ;main.c: 436:         count_2sec = 0;
  8135     0BEF  1683               	bsf	3,5	;RP0=1, select bank1
  8136     0BF0  1303               	bcf	3,6	;RP1=0, select bank1
  8137     0BF1  01D2               	clrf	_count_2sec^(0+128)
  8138     0BF2  01D3               	clrf	(_count_2sec+1)^(0+128)
  8139     0BF3                     i1l3305:
  8140                           
  8141                           ;main.c: 437:         flag_count_2sec = 1;
  8142     0BF3  3001               	movlw	1
  8143     0BF4  00DC               	movwf	_flag_count_2sec^(0+128)
  8144     0BF5                     i1l3307:
  8145                           
  8146                           ;main.c: 440:     count_5sec++;
  8147     0BF5  3001               	movlw	1
  8148     0BF6  1683               	bsf	3,5	;RP0=1, select bank1
  8149     0BF7  1303               	bcf	3,6	;RP1=0, select bank1
  8150     0BF8  07D4               	addwf	_count_5sec^(0+128),f
  8151     0BF9  1803               	skipnc
  8152     0BFA  0AD5               	incf	(_count_5sec+1)^(0+128),f
  8153     0BFB  3000               	movlw	0
  8154     0BFC  07D5               	addwf	(_count_5sec+1)^(0+128),f
  8155     0BFD                     i1l3309:
  8156                           
  8157                           ;main.c: 441:     if(count_5sec > 5000){
  8158     0BFD  0855               	movf	(_count_5sec+1)^(0+128),w
  8159     0BFE  3A80               	xorlw	128
  8160     0BFF  00FF               	movwf	btemp+1
  8161     0C00  3093               	movlw	147
  8162     0C01  027F               	subwf	btemp+1,w
  8163     0C02  1D03               	skipz
  8164     0C03  2C06               	goto	u345_25
  8165     0C04  3089               	movlw	137
  8166     0C05  0254               	subwf	_count_5sec^(0+128),w
  8167     0C06                     u345_25:
  8168     0C06  1C03               	skipc
  8169     0C07  2C09               	goto	u345_21
  8170     0C08  2C0A               	goto	u345_20
  8171     0C09                     u345_21:
  8172     0C09  2C10               	goto	i1l3315
  8173     0C0A                     u345_20:
  8174     0C0A                     i1l3311:
  8175                           
  8176                           ;main.c: 442:         count_5sec = 0;
  8177     0C0A  1683               	bsf	3,5	;RP0=1, select bank1
  8178     0C0B  1303               	bcf	3,6	;RP1=0, select bank1
  8179     0C0C  01D4               	clrf	_count_5sec^(0+128)
  8180     0C0D  01D5               	clrf	(_count_5sec+1)^(0+128)
  8181     0C0E                     i1l3313:
  8182                           
  8183                           ;main.c: 443:         flag_count_5sec = 1;
  8184     0C0E  3001               	movlw	1
  8185     0C0F  00F8               	movwf	_flag_count_5sec
  8186     0C10                     i1l3315:
  8187                           
  8188                           ;main.c: 446:     count_10sec++;
  8189     0C10  3001               	movlw	1
  8190     0C11  1683               	bsf	3,5	;RP0=1, select bank1
  8191     0C12  1303               	bcf	3,6	;RP1=0, select bank1
  8192     0C13  07D0               	addwf	_count_10sec^(0+128),f
  8193     0C14  1803               	skipnc
  8194     0C15  0AD1               	incf	(_count_10sec+1)^(0+128),f
  8195     0C16  3000               	movlw	0
  8196     0C17  07D1               	addwf	(_count_10sec+1)^(0+128),f
  8197     0C18                     i1l3317:
  8198                           
  8199                           ;main.c: 447:     if(count_10sec > 5000){
  8200     0C18  0851               	movf	(_count_10sec+1)^(0+128),w
  8201     0C19  3A80               	xorlw	128
  8202     0C1A  00FF               	movwf	btemp+1
  8203     0C1B  3093               	movlw	147
  8204     0C1C  027F               	subwf	btemp+1,w
  8205     0C1D  1D03               	skipz
  8206     0C1E  2C21               	goto	u346_25
  8207     0C1F  3089               	movlw	137
  8208     0C20  0250               	subwf	_count_10sec^(0+128),w
  8209     0C21                     u346_25:
  8210     0C21  1C03               	skipc
  8211     0C22  2C24               	goto	u346_21
  8212     0C23  2C25               	goto	u346_20
  8213     0C24                     u346_21:
  8214     0C24  2C2B               	goto	i1l3323
  8215     0C25                     u346_20:
  8216     0C25                     i1l3319:
  8217                           
  8218                           ;main.c: 448:         count_10sec = 0;
  8219     0C25  1683               	bsf	3,5	;RP0=1, select bank1
  8220     0C26  1303               	bcf	3,6	;RP1=0, select bank1
  8221     0C27  01D0               	clrf	_count_10sec^(0+128)
  8222     0C28  01D1               	clrf	(_count_10sec+1)^(0+128)
  8223     0C29                     i1l3321:
  8224                           
  8225                           ;main.c: 449:         flag_count_10sec = 1;
  8226     0C29  3001               	movlw	1
  8227     0C2A  00DB               	movwf	_flag_count_10sec^(0+128)
  8228     0C2B                     i1l3323:
  8229                           
  8230                           ;main.c: 452:     count_800ms++;
  8231     0C2B  3001               	movlw	1
  8232     0C2C  1683               	bsf	3,5	;RP0=1, select bank1
  8233     0C2D  1303               	bcf	3,6	;RP1=0, select bank1
  8234     0C2E  07CE               	addwf	_count_800ms^(0+128),f
  8235     0C2F  1803               	skipnc
  8236     0C30  0ACF               	incf	(_count_800ms+1)^(0+128),f
  8237     0C31  3000               	movlw	0
  8238     0C32  07CF               	addwf	(_count_800ms+1)^(0+128),f
  8239     0C33                     i1l3325:
  8240                           
  8241                           ;main.c: 453:     if(count_800ms > 800){
  8242     0C33  084F               	movf	(_count_800ms+1)^(0+128),w
  8243     0C34  3A80               	xorlw	128
  8244     0C35  00FF               	movwf	btemp+1
  8245     0C36  3083               	movlw	131
  8246     0C37  027F               	subwf	btemp+1,w
  8247     0C38  1D03               	skipz
  8248     0C39  2C3C               	goto	u347_25
  8249     0C3A  3021               	movlw	33
  8250     0C3B  024E               	subwf	_count_800ms^(0+128),w
  8251     0C3C                     u347_25:
  8252     0C3C  1C03               	skipc
  8253     0C3D  2C3F               	goto	u347_21
  8254     0C3E  2C40               	goto	u347_20
  8255     0C3F                     u347_21:
  8256     0C3F  2C46               	goto	i1l3331
  8257     0C40                     u347_20:
  8258     0C40                     i1l3327:
  8259                           
  8260                           ;main.c: 454:         count_800ms = 0;
  8261     0C40  1683               	bsf	3,5	;RP0=1, select bank1
  8262     0C41  1303               	bcf	3,6	;RP1=0, select bank1
  8263     0C42  01CE               	clrf	_count_800ms^(0+128)
  8264     0C43  01CF               	clrf	(_count_800ms+1)^(0+128)
  8265     0C44                     i1l3329:
  8266                           
  8267                           ;main.c: 455:         flag_count_800ms = 1;
  8268     0C44  3001               	movlw	1
  8269     0C45  00DA               	movwf	_flag_count_800ms^(0+128)
  8270     0C46                     i1l3331:
  8271                           
  8272                           ;main.c: 458:     count_500ms++;
  8273     0C46  3001               	movlw	1
  8274     0C47  1683               	bsf	3,5	;RP0=1, select bank1
  8275     0C48  1303               	bcf	3,6	;RP1=0, select bank1
  8276     0C49  07CC               	addwf	_count_500ms^(0+128),f
  8277     0C4A  1803               	skipnc
  8278     0C4B  0ACD               	incf	(_count_500ms+1)^(0+128),f
  8279     0C4C  3000               	movlw	0
  8280     0C4D  07CD               	addwf	(_count_500ms+1)^(0+128),f
  8281     0C4E                     i1l3333:
  8282                           
  8283                           ;main.c: 459:     if(count_500ms > 500){
  8284     0C4E  084D               	movf	(_count_500ms+1)^(0+128),w
  8285     0C4F  3A80               	xorlw	128
  8286     0C50  00FF               	movwf	btemp+1
  8287     0C51  3081               	movlw	129
  8288     0C52  027F               	subwf	btemp+1,w
  8289     0C53  1D03               	skipz
  8290     0C54  2C57               	goto	u348_25
  8291     0C55  30F5               	movlw	245
  8292     0C56  024C               	subwf	_count_500ms^(0+128),w
  8293     0C57                     u348_25:
  8294     0C57  1C03               	skipc
  8295     0C58  2C5A               	goto	u348_21
  8296     0C59  2C5B               	goto	u348_20
  8297     0C5A                     u348_21:
  8298     0C5A  2C61               	goto	i1l3339
  8299     0C5B                     u348_20:
  8300     0C5B                     i1l3335:
  8301                           
  8302                           ;main.c: 460:         count_500ms = 0;
  8303     0C5B  1683               	bsf	3,5	;RP0=1, select bank1
  8304     0C5C  1303               	bcf	3,6	;RP1=0, select bank1
  8305     0C5D  01CC               	clrf	_count_500ms^(0+128)
  8306     0C5E  01CD               	clrf	(_count_500ms+1)^(0+128)
  8307     0C5F                     i1l3337:
  8308                           
  8309                           ;main.c: 461:         flag_count_500ms = 1;
  8310     0C5F  3001               	movlw	1
  8311     0C60  00D9               	movwf	_flag_count_500ms^(0+128)
  8312     0C61                     i1l3339:
  8313                           
  8314                           ;main.c: 464:     PIR1bits.TMR1IF=0;
  8315     0C61  1283               	bcf	3,5	;RP0=0, select bank0
  8316     0C62  1303               	bcf	3,6	;RP1=0, select bank0
  8317     0C63  100C               	bcf	12,0	;volatile
  8318     0C64                     i1l345:
  8319     0C64  0872               	movf	??_Timer1_ISR+2,w
  8320     0C65  00FF               	movwf	btemp+1
  8321     0C66  0871               	movf	??_Timer1_ISR+1,w
  8322     0C67  008A               	movwf	10
  8323     0C68  0E70               	swapf	??_Timer1_ISR,w
  8324     0C69  0083               	movwf	3
  8325     0C6A  0EFE               	swapf	btemp,f
  8326     0C6B  0E7E               	swapf	btemp,w
  8327     0C6C  0009               	retfie
  8328     0C6D                     __end_of_Timer1_ISR:
  8329     0002                     ___latbits      equ	2
  8330     007E                     btemp           set	126	;btemp
  8331     007E                     wtemp0          set	126
  8332                           
  8333                           	psect	intentry
  8334     0004                     __pintentry:	
  8335                           ;incstack = 0
  8336                           ; Regs used in _Timer1_ISR: [wreg+status,2+btemp+1]
  8337                           
  8338     0004                     interrupt_function:
  8339     007E                     saved_w         set	btemp
  8340     0004  00FE               	movwf	btemp
  8341     0005  0E03               	swapf	3,w
  8342     0006  00F0               	movwf	??_Timer1_ISR
  8343     0007  080A               	movf	10,w
  8344     0008  00F1               	movwf	??_Timer1_ISR+1
  8345     0009  087F               	movf	btemp+1,w
  8346     000A  00F2               	movwf	??_Timer1_ISR+2
  8347     000B  120A  158A  2BD4   	ljmp	_Timer1_ISR
  8348                           
  8349                           	psect	config
  8350                           
  8351                           ;Config register CONFIG1 @ 0x2007
  8352                           ;	Oscillator Selection bits
  8353                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  8354                           ;	Watchdog Timer Enable bit
  8355                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8356                           ;	Power-up Timer Enable bit
  8357                           ;	PWRTE = OFF, PWRT disabled
  8358                           ;	RE3/MCLR pin function select bit
  8359                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8360                           ;	Code Protection bit
  8361                           ;	CP = OFF, Program memory code protection is disabled
  8362                           ;	Data Code Protection bit
  8363                           ;	CPD = OFF, Data memory code protection is disabled
  8364                           ;	Brown Out Reset Selection bits
  8365                           ;	BOREN = OFF, BOR disabled
  8366                           ;	Internal External Switchover bit
  8367                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8368                           ;	Fail-Safe Clock Monitor Enabled bit
  8369                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8370                           ;	Low Voltage Programming Enable bit
  8371                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8372                           ;	In-Circuit Debugger Mode bit
  8373                           ;	DEBUG = 0x1, unprogrammed default
  8374     2007                     	org	8199
  8375     2007  20D5               	dw	8405
  8376                           
  8377                           ;Config register CONFIG2 @ 0x2008
  8378                           ;	Brown-out Reset Selection bit
  8379                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8380                           ;	Flash Program Memory Self Write Enable bits
  8381                           ;	WRT = OFF, Write protection off
  8382     2008                     	org	8200
  8383     2008  3FFF               	dw	16383

Data Sizes:
    Strings     137
    Constant    6
    Data        56
    BSS         63
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     79      80
    BANK1            80      0      67
    BANK3            96      0      48
    BANK2            96      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> monitoreo@StringTemperature(BANK0[20]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> monitoreo@StringTemperature(BANK0[20]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> monitoreo@StringTemperature(BANK0[20]), STR_1(CODE[16]), STR_10(CODE[18]), STR_11(CODE[8]), 
		 -> STR_12(CODE[7]), STR_2(CODE[5]), STR_3(CODE[10]), STR_4(CODE[7]), 
		 -> STR_5(CODE[10]), STR_7(CODE[12]), STR_8(CODE[15]), STR_9(CODE[17]), 

    LCD_String_xy@msg	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[16]), STR_10(CODE[18]), STR_11(CODE[8]), STR_12(CODE[7]), 
		 -> STR_2(CODE[5]), STR_3(CODE[10]), STR_4(CODE[7]), STR_5(CODE[10]), 
		 -> STR_7(CODE[12]), STR_8(CODE[15]), STR_9(CODE[17]), 

    S949$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> monitoreo@StringTemperature(BANK0[20]), 

    S949$source	PTR const unsigned char  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_6(CODE[12]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> monitoreo@StringTemperature(BANK0[20]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 6
		 -> pass_user(BANK1[6]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 6
		 -> password(CODE[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 12
		 -> STR_6(CODE[12]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMMON[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 12
		 -> STR_6(CODE[12]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_6(CODE[12]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _main->_LCD_Clear
    _main->_LCD_Init
    _seguridad->_LCD_Clear
    _blink_led->_delay_ms_variable
    _secuencia5->_LCD_Clear
    _monitoreo->_LCD_Clear
    _monitoreo->_LCD_String
    _sprintf->_vfprintf
    _vfpfcnvrt->___awdiv
    _vfpfcnvrt->___awmod
    _vfpfcnvrt->_fputc
    _abs->___awmod
    ___fltol->___xxtofl
    ___flmul->__Umul8_16
    ___flmul->___xxtofl
    _eventos->_LCD_Clear
    _alarma->_LCD_Clear
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Clear->_LCD_Command
    _LCD_Init->_LCD_Command

Critical Paths under _Timer1_ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_monitoreo
    _seguridad->_keypad_getkey
    _secuencia6->_blink_led
    _secuencia5->_LCD_String_xy
    _monitoreo->___fltol
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _abs->___awmod
    ___fltol->___flmul
    ___flmul->___xxtofl
    _eventos->_LCD_String_xy
    _alarma->_LCD_String_xy

Critical Paths under _Timer1_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer1_ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer1_ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer1_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   13369
                                             76 BANK0      3     3      0
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                       _Timer1_start
                           _adc_init
                             _alarma
                            _eventos
                        _keypad_init
                          _monitoreo
                         _secuencia5
                         _secuencia6
                          _seguridad
 ---------------------------------------------------------------------------------
 (1) _seguridad                                            1     1      0    2511
                                             19 BANK0      1     1      0
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                      _LCD_String_xy
                          _blink_led
                      _keypad_getkey
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              6     2      4     266
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _keypad_getkey                                       23    23      0     821
                                              3 COMMON     4     4      0
                                              0 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (1) _secuencia6                                          19    19      0    1116
                                             11 BANK0     19    19      0
                          _blink_led
 ---------------------------------------------------------------------------------
 (2) _blink_led                                           11     5      6     538
                                              0 BANK0     11     5      6
                  _delay_ms_variable
 ---------------------------------------------------------------------------------
 (3) _delay_ms_variable                                    4     2      2      37
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _secuencia5                                          19    19      0    1570
                                              4 BANK0     19    19      0
                          _LCD_Clear
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (1) _monitoreo                                           30    30      0    6188
                                             46 BANK0     30    30      0
                          _LCD_Clear
                        _LCD_Command
                         _LCD_String
                      _LCD_String_xy
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _adc_read
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    2598
                                             26 BANK0     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             5     1      4    2286
                                              7 COMMON     1     1      0
                                             22 BANK0      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13     9      4    2086
                                              9 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                               13     9      4     329
                                              3 COMMON     4     0      4
                                              0 BANK0      9     9      0
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2      96
                                              2 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     439
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     451
                                              3 COMMON     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _adc_read                                             8     6      2     105
                                              3 COMMON     4     2      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     511
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     230
                                             36 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    1608
                                             10 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     139
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _keypad_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eventos                                              3     3      0     630
                                              4 BANK0      3     3      0
                          _LCD_Clear
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (1) _alarma                                               3     3      0     630
                                              4 BANK0      3     3      0
                          _LCD_Clear
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        4     2      2     536
                                              0 BANK0      4     2      2
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     165
                                              6 COMMON     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             3     3      0      94
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            2     2      0      94
                                              6 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      94
                                              6 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          3     3      0      94
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Timer1_ISR                                           3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Command
   _LCD_Init
     _LCD_Command
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   _Timer1_start
   _adc_init
   _alarma
     _LCD_Clear
     _LCD_String_xy
   _eventos
     _LCD_Clear
     _LCD_String_xy
   _keypad_init
   _monitoreo
     _LCD_Clear
     _LCD_Command
     _LCD_String
     _LCD_String_xy
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _adc_read
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _secuencia5
     _LCD_Clear
     _LCD_String_xy
   _secuencia6
     _blink_led
       _delay_ms_variable
   _seguridad
     _LCD_Char
     _LCD_Clear
     _LCD_Command
     _LCD_String_xy
     _blink_led
     _keypad_getkey
     _strncmp

 _Timer1_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0      48     50.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0      67     83.8%
BITBANK1            80      0       0      0.0%
BANK0               80     79      80    100.0%
BITBANK0            80      0       0      0.0%
COMMON              14      8      11     78.6%
BITCOMMON           14      0       0      0.0%
DATA                 0      0     209      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Nov 15 15:01:41 2024

                         pc 0002                ?_LCD_Command 0070                          l13 1732  
                        l30 1713                          l16 09F7                          l19 0A19  
                        l89 077D                ___awdiv@sign 0021                          fsr 0004  
               ?_LCD_String 0076         __Umul8_16@word_mpld 0022                         l120 09E0  
                       l114 0948                         l131 0974                         l117 09AA  
                       l134 1742                         l126 17FF                         l321 0F2C  
                       l314 0B6E                         l330 0FFF                         l324 0F44  
                       l245 1791                         l253 048A                         l335 08F5  
                       l352 0A56                         l256 03F1                         l265 0429  
                       l266 0438                         l291 0DB1                         l621 0AAF  
                       l286 05AF                         l608 0BD3                         l369 1722  
                       l910 0E3D                         l902 0E15                         l656 07DE  
                       l649 07F3                         l659 07F3                         l852 0388  
                       l909 0E31                         l918 17B4                         l871 090C  
                       l864 037E                         l873 091E                         l858 02FA  
                       l962 17D9                         l956 069B                         l981 0D0C  
                       l896 0DD6                         l992 07FC                         l897 0DE7  
                       l969 1765                         l898 0E67                         _GIE 005F  
                       l996 0B0B                         _abs 1753                         _idx 0079  
                       fsr0 0004                         indf 0000                ___awmod@sign 0021  
              ___flmul@aexp 003C                ___flmul@bexp 003D                ___flmul@sign 0037  
              ___flmul@temp 0042                ___flmul@prod 003E                 LCD_Char@dat 0075  
              ___fltol@exp1 004D                        ?_abs 0022                        l4011 04FB  
                      l4003 04CB                        l4021 051D                        l4013 04FD  
                      l4005 04E3                        l4101 0F07                        l2431 0906  
                      l4023 0523                        l4015 050B                        l4007 04F0  
                      l4103 0F09                        l2433 0915                        l2425 08F9  
                      l3401 0B8A                        l4041 0591                        l4025 0530  
                      l4017 0513                        l4009 04F5                        l4105 0F17  
                      l4201 041A                        l4051 08DD                        l2435 091A  
                      l2427 08FB                        l3411 0BA0                        l3403 0B90  
                      l4043 059C                        l4035 053E                        l4027 053A  
                      l4019 0518                        l4107 0F1F                        l4211 043E  
                      l4203 042A                        l3501 09C4                        l4053 08EB  
                      l2429 0902                        l2701 004D                        l3413 0BB1  
                      l3405 0B93                        l3421 0BC5                        l4045 05A2  
                      l4037 0556                        l4029 053C                        l4061 0E7C  
                      l4221 044D                        l4213 0440                        l4205 042F  
                      l4141 039D                        l4133 0389                        l3503 09D2  
                      l4055 08F1                        l4047 08CD                        l2711 0060  
                      l2703 0051                        l3423 0BCA                        l3415 0BB7  
                      l3407 0B9A                        l3431 0A5A                        l3511 05C0  
                      l4039 0563                        l4063 0E82                        l4231 0465  
                      l4223 0452                        l4215 0445                        l4207 0434  
                      l4151 03A4                        l4143 03A0                        l4135 038D  
                      l3505 09D3                        l4057 08F4                        l4049 08D2  
                      l2801 02E3                        l2721 0079                        l2713 0068  
                      l2705 0055                        l3425 0BCF                        l3417 0BB8  
                      l3409 0B9C                        l3441 0A6E                        l3433 0A5E  
                      l3521 05E0                        l3513 05C4                        l3601 17D5  
                      l4081 0ECC                        l4073 0E8C                        l4065 0E86  
                      l4241 0485                        l4233 0469                        l4225 0459  
                      l4217 044A                        l4209 0436                        l4161 03B4  
                      l4153 03A5                        l4145 03A1                        l4137 0397  
                      l3507 09D4                        l2811 0312                        l2803 02F7  
                      l2731 0090                        l2723 007D                        l2715 006A  
                      l2707 0056                        l3611 09F4                        l3419 0BBF  
                      l3451 0A84                        l3443 0A74                        l3435 0A63  
                      l3531 0608                        l3523 05EC                        l3515 05CA  
                      l4083 0ED6                        l4075 0EA4                        l4067 0E88  
                      l4059 0E68                        l4235 046E                        l4227 045C  
                      l4171 03CE                        l4163 03B5                        l4155 03A6  
                      l4147 03A2                        l4139 039A                        l2821 034D  
                      l2813 0316                        l2733 0092                        l2725 007E  
                      l2717 0072                        l2709 005B                        l2661 077E  
                      l3613 09FB                        l3605 09E1                        l3461 0AA6  
                      l3453 0A8E                        l3445 0A77                        l3437 0A65  
                      l3429 0A57                        l3541 064E                        l3533 062B  
                      l3525 05FA                        l3517 05CE                        l3509 05B0  
                      l4085 0ED8                        l4077 0EAE                        l3701 0742  
                      l3621 069C                        l4237 0479                        l4229 0463  
                      l4181 03E3                        l4173 03D5                        l4165 03B9  
                      l4245 048A                        l4157 03AA                        l4149 03A3  
                      l2831 0378                        l2823 035C                        l2815 032F  
                      l2807 02FF                        l2751 00FF                        l2743 00AD  
                      l2735 009A                        l2727 0083                        l2719 0075  
                      l2671 07A6                        l2663 0789                        l3615 0A02  
                      l3607 09ED                        l3391 0B7B                        l3463 0AAB  
                      l3455 0A94                        l3447 0A7E                        l3439 0A69  
                      l3471 0C79                        l3543 0653                        l3535 063E  
                      l3527 05FF                        l3551 067B                        l3519 05D4  
                      l4095 0EF2                        l4087 0EDE                        l4079 0EBF  
                      l3711 0755                        l3703 0744                        l3623 06B2  
                      l4239 047E                        l4191 0401                        l4183 03E9  
                      l4175 03D7                        l4167 03BE                        l4159 03AF  
                      l3561 0976                        l2833 0379                        l2825 0366  
                      l2809 0304                        l2817 0335                        l2761 0178  
                      l2753 0129                        l2745 00BB                        l2737 009F  
                      l2729 0088                        l2673 07AE                        l3617 0A15  
                      l3609 09EE                        l3393 0B7D                        l3385 0B6F  
                      l3457 0A9B                        l3449 0A80                        l3481 1753  
                      l3473 0C80                        l3545 065C                        l3537 0644  
                      l3529 0601                        l4097 0EFC                        l4089 0EE0  
                      l3713 075A                        l3705 074A                        l3721 0767  
                      l3641 06C9                        l3633 06B7                        l3625 06B2  
                      l3801 0AC1                        l4193 0403                        l4185 03EB  
                      l4177 03DC                        l4169 03C9                        l3571 0985  
                      l3563 097F                        l2923 1714                        l3491 09B5  
                      l3731 094C                        l2835 0380                        l2827 0368  
                      l2819 0342                        l2771 01F4                        l2763 0195  
                      l2755 0145                        l2747 00C8                        l2739 00A4  
                      l2691 07D3                        l2683 07BC                        l2675 07B0  
                      l2667 0792                        l3395 0B81                        l3387 0B72  
                      l3459 0AA1                        l3483 1759                        l3475 0C9A  
                      l3467 0C6D                        l3547 0670                        l3539 0649  
                      l3555 0682                        l4099 0F01                        l3723 076D  
                      l3715 075C                        l3707 074C                        l3651 06DE  
                      l3643 06D0                        l3635 06BF                        l3627 06B5  
                      l3811 0AE5                        l3803 0AC5                        l4283 0494  
                      l4195 040E                        l4187 03F4                        l4179 03E1  
                      l3573 098E                        l3565 0980                        l2925 171C  
                      l3493 09B6                        l3581 17DA                        l3741 0967  
                      l3733 0952                        l2829 0374                        l2781 02A6  
                      l2773 021F                        l2765 01A3                        l2757 0161  
                      l2749 00E3                        l2693 07E3                        l2677 07B4  
                      l2685 07CC                        l2669 07A5                        l3821 0DBE  
                      l3397 0B86                        l3389 0B76                        l3485 175A  
                      l3477 0CCC                        l3469 0C73                        l3549 0674  
                      l3725 077A                        l3717 0761                        l3709 0753  
                      l3661 06F2                        l3653 06E0                        l3645 06D2  
                      l3637 06C1                        l3813 0AF7                        l3805 0ACB  
                      l3901 0F57                        l4197 0413                        l4189 03F9  
                      l3575 099C                        l3567 0981                        l2927 171D  
                      l3743 1733                        l3495 09B7                        l3583 17DB  
                      l3735 0956                        l2791 02CB                        l2783 02AF  
                      l2775 022D                        l2767 01C0                        l2759 016A  
                      l2695 07E8                        l3831 0DF5                        l3823 0DCE  
                      l3399 0B88                        l3751 179A                        l3591 177A  
                      l3719 0763                        l3671 0704                        l3663 06F4  
                      l3647 06D7                        l3639 06C7                        l3655 06E4  
                      l3807 0AD3                        l3911 0F7F                        l3903 0F5F  
                      l4199 0415                        l3577 099D                        l3569 0982  
                      l2929 1721                        l2881 1723                        l3745 1739  
                      l3497 09B8                        l3489 09AC                        l3585 17E9  
                      l3737 095D                        l3729 094C                        l2793 02D4  
                      l2785 02BD                        l2777 0258                        l2769 01D7  
                      l2697 0047                        l3841 0E27                        l3833 0DFC  
                      l3825 0DDE                        l3817 0DB5                        l3753 179C  
                      l3593 1783                        l3761 0B0F                        l3681 0718  
                      l3673 0709                        l3665 06FB                        l3657 06EA  
                      l3649 06D9                        l3809 0ADF                        l3921 0FAC  
                      l3913 0F8A                        l3905 0F61                        l3579 099E  
                      l2883 1728                        l3499 09BB                        l3587 17EF  
                      l3739 0961                        l2891 1712                        l2787 02C6  
                      l2795 02DA                        l2779 027E                        l2699 004B  
                      l3851 0E5A                        l3843 0E2B                        l3835 0DFE  
                      l3819 0DBA                        l3595 17B5                        l3755 179E  
                      l3747 1792                        l3771 0B22                        l3763 0B12  
                      l3691 072E                        l3683 071E                        l3675 070B  
                      l3667 06FD                        l3659 06EC                        l3931 0FE1  
                      l3923 0FB7                        l3915 0F9E                        l3907 0F67  
                      l3861 0922                        l2885 172E                        l2797 02DE  
                      l2789 02CA                        l3853 0E5E                        l3845 0E35  
                      l3837 0E0C                        l3829 0DEA                        l3597 17BA  
                      l3757 17AB                        l3749 1796                        l3589 1779  
                      l3781 0B3C                        l3773 0B28                        l3765 0B18  
                      l3693 0730                        l3685 0720                        l3669 0702  
                      l3677 070F                        l3941 0FFE                        l3933 0FE6  
                      l3925 0FCB                        l3917 0FA2                        l3909 0F7A  
                      l3871 0942                        l3863 092A                        l2887 172F  
                      l2799 02DF                        l3855 0E5F                        l3847 0E3F  
                      l3839 0E1C                        l3599 17C9                        l3951 0D32  
                      l3943 0D0D                        l3791 0B54                        l3783 0B42  
                      l3775 0B29                        l3767 0B1A                        l3695 0735  
                      l3687 0727                        l3679 0716                        l3935 0FF1  
                      l3927 0FD5                        l3919 0FA7                        l3865 0930  
                      l2889 170C                        l3849 0E55                        l3961 0DA2  
                      l3953 0D41                        l3945 0D12                        l3785 0B44  
                      l3777 0B32                        l3769 0B20                        l3793 0B64  
                      l3697 0737                        l3689 0729                        l3937 0FF5  
                      l3929 0FD8                        l3867 0936                        l3859 091F  
                      l3971 0A2A                        l3963 0DAD                        l3955 0D4D  
                      l3947 0D1D                        l3787 0B4A                        l3779 0B3A  
                      l3699 073B                        l3795 0AB0                        l3939 0FF9  
                      l3891 0F2D                        l3869 093C                        l3981 0A48  
                      l3973 0A38                        l3965 0DB0                        l3957 0D88  
                      l3949 0D23                        l3789 0B4B                        l3797 0ABE  
                      l3893 0F38                        l3983 0A4A                        l3975 0A3F  
                      l3967 0A1A                        l3959 0D99                        l3991 04B5  
                      l3895 0F3E                        l3985 0A4F                        l3977 0A40  
                      l3969 0A1F                        l3993 04B7                        l3897 0F4C  
                      l3889 0F2D                        l3987 0A51                        l3979 0A43  
                      l3995 04BC                        l3899 0F51                        l3997 04C7  
                      l3989 04AB                        STR_1 0839                        STR_2 089A  
                      STR_3 0870                        STR_4 0893                        STR_5 087A  
                      STR_6 0858                        STR_7 0864                        STR_8 0849  
                      STR_9 0828                        u3000 035C                        u3001 035B  
                      u3010 0378                        u3011 0377                        u3005 0358  
                      u2150 0906                        u2151 0905                        u4000 0701  
                      u4001 0700                        u2170 091A                        u4010 0708  
                      u2171 0919                        u4011 0707                        u4100 0759  
                      u4020 070F                        u2165 090D                        u4101 0758  
                      u4021 070E                        u4110 0760                        u4030 0716  
                      u4111 075F                        u4031 0715                        u2600 07CB  
                      u4200 0B4A                        u4120 0767                        u4040 0726  
                      u2601 07CA                        u4201 0B49                        u4121 0766  
                      u4041 0725                        u2610 07D2                        u4210 0B6E  
                      u4130 077A                        u4050 072D                        u2611 07D1  
                      u4211 0B6D                        u4131 0779                        u4051 072C  
                      u4140 0952                        u2700 0088                        u4060 0734  
                      u4220 0ABE                        u4141 0951                        u2701 0087  
                      u4061 0733                        u4221 0ABD                        u2710 009F  
                      u2630 07E3                        u2550 0789                        u4310 0DFB  
                      u3510 0B76                        u4150 0B18                        u4070 073B  
                      u4230 0AD3                        u2711 009E                        u2631 07E2  
                      u2551 0788                        u4311 0DFA                        u3511 0B75  
                      u4215 0B6A                        u4151 0B17                        u4135 0776  
                      u4071 073A                        u4231 0AD2                        u2720 00A4  
                      u2640 07E8                        u2560 07A0                        u4400 0E5E  
                      u3600 0BCA                        u3520 0B81                        u4160 0B20  
                      u4080 0742                        u4240 0ADF                        u2721 00A3  
                      u2641 07E7                        u2625 07D5                        u4401 0E5D  
                      u4305 0DED                        u3601 0BC9                        u3521 0B80  
                      u4161 0B1F                        u4081 0741                        u4241 0ADE  
                      u2650 0055                        u2570 07B4                        u4330 0E1B  
                      u3530 0B90                        u3610 0A5E                        u4170 0B28  
                      u4090 0752                        u4250 0AE5                        u2811 01E6  
                      u2731 00F1                        u2651 0054                        u2571 07B3  
                      u4331 0E1A                        u3531 0B8F                        u3611 0A5D  
                      u4171 0B27                        u4091 0751                        u4251 0AE4  
                      u4500 0A48                        u2900 02CA                        u2812 01ED  
                      u2732 00F8                        u2660 005B                        u2580 07BB  
                      u3620 0A69                        u3700 0C73                        u4180 0B3A  
                      u4260 0AF7                        u4501 0A47                        u2901 02C9  
                      u2821 0211                        u2813 01F4                        u2805 01C2  
                      u2741 010D                        u2733 00FF                        u2661 005A  
                      u2581 07BA                        u2565 079B                        u4325 0E0D  
                      u3621 0A68                        u3701 0C72                        u4181 0B39  
                      u4261 0AF6                        u4510 0A4F                        u2822 0218  
                      u2742 0114                        u2670 0060                        u4350 0E2B  
                      u4270 0DBA                        u3550 0BA0                        u3630 0A74  
                      u3710 0C79                        u4190 0B42                        u4511 0A4E  
                      u2831 023C                        u2823 021F                        u2751 0137  
                      u2743 011B                        u2671 005F                        u4351 0E2A  
                      u4271 0DB9                        u3551 0B9F                        u3631 0A73  
                      u3711 0C78                        u4191 0B41                        u2920 02DE  
                      u2840 0264                        u2832 0243                        u2752 013E  
                      u2680 007D                        u4360 0E31                        u4280 0DBE  
                      u3720 0C9A                        u3800 0606                        u4520 0530  
                      u4440 0F51                        u4600 03E9                        u2921 02DD  
                      u2833 024A                        u2761 0153                        u2753 0145  
                      u2681 007C                        u4361 0E30                        u4345 0E20  
                      u4281 0DBD                        u3545 0B94                        u3721 0C99  
                      u3801 0604                        u4521 052F                        u4441 0F50  
                      u4601 03E8                        u2930 02E3                        u2762 015A  
                      u2690 0083                        u4370 0E35                        u4290 0DDE  
                      u3570 0BB1                        u3650 0A84                        u3730 0CCC  
                      u3810 0607                        u4530 05AF                        u4450 0F67  
                      u4610 0401                        u2931 02E2                        u2915 02CD  
                      u2851 0270                        u2763 0161                        u2691 0082  
                      u2595 07BD                        u4371 0E34                        u4291 0DDD  
                      u3571 0BB0                        u3651 0A83                        u3731 0CCB  
                      u4531 05AE                        u4451 0F66                        u4611 0400  
                      _PEIE 005E                        u4540 08F1                        u2940 02F7  
                      u2860 028C                        u2852 0277                        u4380 0E4A  
                      u3660 0A8E                        u3740 0CEF                        u3820 0644  
                      u3900 17D5                        u4460 0F7A                        u4620 0413  
                      u4541 08F0                        u2941 02F6                        u2853 027E  
                      u2845 025F                        u2781 0187                        u3565 0BA1  
                      u3661 0A8D                        u3645 0A78                        u3821 0643  
                      u3901 17D4                        u4525 052C                        u4461 0F79  
                      u4621 0412                        u2950 02FE                        u2782 018E  
                      u4390 0E5A                        u3910 09FB                        u3590 0BC5  
                      u3750 1759                        u3830 0649                        u4550 0ECC  
                      u4470 0FE1                        u4630 0434                        u2951 02FD  
                      u2871 0298                        u2791 01B2                        u2783 0195  
                      u2775 0163                        u4391 0E59                        u3911 09FA  
                      u3591 0BC4                        u3575 0BAD                        u3751 1758  
                      u3735 0CC8                        u3831 0648                        u4535 05AB  
                      u4551 0ECB                        u4471 0FE0                        u4631 0433  
                      u2960 0304                        u2872 029F                        u2792 01B9  
                      u3680 0AA1                        u3840 064E                        u4480 0DAD  
                      u4560 0F2C                        u3920 06A2                        u4640 043E  
                      u2961 0303                        u2873 02A6                        u2865 0287  
                      u2793 01C0                        u4385 0E45                        u3585 0BB9  
                      u3681 0AA0                        u3665 0A8A                        u3841 064D  
                      u4481 0DAC                        u4561 0F2B                        u4641 043D  
                      u4490 0A3F                        u2970 0316                        u3690 0AA6  
                      u3850 0653                        u3770 05C0                        u3930 06BF  
                      u4650 044A                        u4491 0A3E                        u2971 0315  
                      u3691 0AA5                        u3675 0A95                        u3851 0652  
                      u3771 05BF                        u4555 0EC8                        u4707 06C3  
                      u3931 06BE                        u4651 0449                        u2980 0325  
                      u3860 067A                        u3780 05E0                        u3940 06CF  
                      u4660 0459                        u4580 03D5                        u3765 09C7  
                      u2885 02A8                        u3861 0679                        u3781 05DF  
                      u4565 0F28                        u4717 06EE                        u3941 06CE  
                      u4661 0458                        u4581 03D4                        u2990 0342  
                      u3790 05EC                        u3950 06D6                        u4670 0463  
                      u4590 03E1                        u2991 0341                        u2895 02BF  
                      u3791 05EB                        u4807 0550                        u4727 071A  
                      u3951 06D5                        u4671 0462                        u4591 03E0  
                      u3880 17FF                        u3960 06DD                        u4680 0485  
                      u3881 17FE                        u2985 0320                        u4817 057E  
                      u4737 0746                        u3961 06DC                        u4681 0484  
                      u3890 1791                        u3970 06E4                        u4907 09A5  
                      u3875 0991                        u2995 033E                        u4827 09F2  
                      u3891 1790                        u4747 0E9E                        u3971 06E3  
                      u3980 06EA                        u4837 08E5                        u4757 0EE8  
                      u3981 06E9                        u3990 06FA                        u4847 0A32  
                      u4767 0F11                        u3991 06F9                        u4857 09BF  
                      u4777 177E                        u4697 0422                        u4867 09DB  
                      u4787 04DD                        u4877 173D                        u4797 0505  
                      u4887 0926                        u4897 0989                        _TMR1 000E  
                      abs@a 0022                        _dbuf 0190                        _main 0389  
                      _prec 00CA                        btemp 007E                        start 000E  
             _LCD_String_xy 0949                       ??_abs 0024            __end_of_LCD_Char 09E1  
          __end_of_LCD_Init 0949               ___fltol@sign1 004C                       ?_main 0070  
           __end_of___awdiv 0BD4                       STR_10 0816                       STR_11 0884  
                     STR_12 088C             __end_of___awmod 0AB0             __end_of___flmul 0389  
           __end_of___fltol 07F4                       _ANSEL 0188             ___awdiv@divisor 0073  
                     _T1CON 0010                       i1l345 0C64             ___awdiv@counter 0020  
              vfpfcnvrt@fmt 002B                       _PORTB 0006                       _PORTC 0007  
                     _PORTD 0008                       _TRISB 0086                       _TRISC 0087  
                     _TRISD 0088                       _TRISE 0089                       _flags 00D8  
              ?_keypad_init 0070             __end_of_eventos 08F6                       _fputc 0C6D  
                     _width 00C8                       _putch 07FC                       pclath 000A  
                     status 0003                       wtemp0 007E             __end_of_sprintf 17B5  
           __end_of_strncmp 0B0C              ?_LCD_String_xy 0020             __initialization 0011  
              __end_of_main 04AB                      ??_main 006C             _flag_count_2sec 00DC  
           _flag_count_5sec 0078           __end_of_LCD_Clear 1743         keypad_getkey@letras 0020  
                    ?_fputc 0073                      _ADRESH 001E                      _ADRESL 009E  
          ___awdiv@dividend 0075                      ?_putch 0070                      _ANSELH 0189  
          LCD_String_xy@msg 0021            LCD_String_xy@pos 0020            LCD_String_xy@row 0022  
          __end_of_adc_init 1733            __end_of_adc_read 0A1A                      i1l3301 0BE2  
                    i1l3311 0C0A                      i1l3303 0BEF                      i1l3321 0C29  
                    i1l3313 0C0E                      i1l3305 0BF3                      i1l3331 0C46  
                    i1l3323 0C2B                      i1l3315 0C10                      i1l3307 0BF5  
                    i1l3333 0C4E                      i1l3325 0C33                      i1l3317 0C18  
                    i1l3309 0BFD                      i1l3335 0C5B                      i1l3327 0C40  
                    i1l3319 0C25                      i1l3337 0C5F                      i1l3329 0C44  
                    i1l3339 0C61                      i1l3297 0BD4                      i1l3299 0BDA  
                    u344_20 0BEF                      u344_21 0BEE                      u344_25 0BEB  
                    u345_20 0C0A                      u345_21 0C09                      u345_25 0C06  
                    u346_20 0C25                      u346_21 0C24                      u346_25 0C21  
                    u347_20 0C40                      u347_21 0C3F                      u347_25 0C3C  
                    u348_20 0C5B                      u348_21 0C5A                      u348_25 0C57  
                    _OSCCON 008F               vfpfcnvrt@done 002F                      _TMR1IE 0460  
                    _TMR1IF 0060                      _TMR1ON 0080            __end_of___xxtofl 0E68  
                _Timer1_ISR 0BD4                vfprintf@cfmt 0077                   ??___awdiv 0077  
                 ??___awmod 0077                   ??___flmul 0032                      _alarma 0A1A  
                 ??___fltol 0048            ___awdiv@quotient 0022             ___awmod@divisor 0073  
           ___awmod@counter 0020            __end_of_password 0816                      fputc@c 0073  
                 ??_eventos 0024                      saved_w 007E         delay_ms_variable@ms 0073  
                    putch@c 0070            __end_of_vfprintf 17DA                   ??_sprintf 0040  
                 ??_strncmp 0020                ___xxtofl@arg 0026                ___xxtofl@exp 0025  
              ___xxtofl@val 0073                   ?_LCD_Char 0070     __end_of__initialization 0043  
                 ?_LCD_Init 0070             ??_LCD_String_xy 0078                  ___fltol@f1 0044  
            __pcstackCOMMON 0070                __pidataBANK1 08A5                __pidataBANK3 1743  
             __end_of_fputc 0D0D               __end_of_putch 07FD                ??_LCD_String 0078  
            _OPTION_REGbits 0081            _flag_count_500ms 00D9            _flag_count_800ms 00DA  
          _flag_count_10sec 00DB                     ??_fputc 0020                     ??_putch 0073  
                __pbssBANK0 006F                  __pbssBANK1 00C8                  __pbssBANK3 0190  
                ??_LCD_Char 0073                  _character1 00C0                  _character2 00B8  
                _character3 00B0                  _character4 00A8                  _character5 00A0  
                ??_LCD_Init 0076          __end_of_LCD_String 1800           __end_of__Umul8_16 091F  
               ?_Timer1_ISR 0070                  __pmaintext 0389               ?_Timer1_start 0070  
                   ?_alarma 0070                  __pintentry 0004                   ?_adc_init 0070  
                 ?_adc_read 0073               _keypad_getkey 069C                   ?___xxtofl 0073  
               secuencia5@i 0027                 secuencia6@i 002E           _delay_ms_variable 1779  
      monitoreo@temperatura 0066          ?_delay_ms_variable 0073                  __stringtab 0800  
                _count_2sec 00D2                  _count_5sec 00D4           __end_of_blink_led 0B6F  
       ??_delay_ms_variable 0075               LCD_String@msg 0076              ??_Timer1_start 0073  
                   ___awdiv 0B6F                     ___awmod 0A57                     ___flmul 0047  
                   ___fltol 077E                   ?_vfprintf 0036                  ??_adc_init 0073  
                ??_adc_read 0020                     __ptext1 0F2D                     __ptext2 0AB0  
                   __ptext3 069C                     __ptext4 0E68                     __ptext5 0B0C  
                   __ptext6 1779                     __ptext7 04AB                     __ptext8 0D0D  
                   __ptext9 1792              ?_keypad_getkey 0070                     _eventos 08CD  
 __end_of_delay_ms_variable 1792                  ??___xxtofl 0020            ___awmod@dividend 0075  
                 _LCD_Clear 1733                     _sprintf 1792                     clrloop0 07F5  
                   _strncmp 0AB0        end_of_initialization 0043            monitoreo@celsius 0064  
                _secuencia5 04AB                  _secuencia6 0E68                     fputc@fp 0075  
            LCD_Command@cmd 0075           __end_of_monitoreo 0DB2           __end_of_seguridad 1000  
         __end_of_vfpfcnvrt 069C            vfpfcnvrt@convarg 0031                  ??_vfprintf 0077  
                 _PORTAbits 0005                   _PORTCbits 0007                   _PORTEbits 0009  
             ___xxtofl@sign 0024                   _TRISAbits 0085                  ?_LCD_Clear 0070  
               ___flmul@grs 0038  monitoreo@StringTemperature 0050               ??_LCD_Command 0073  
               vfpfcnvrt@ap 002C                 vfpfcnvrt@cp 0030                 vfpfcnvrt@fp 0029  
            __end_of_alarma 0A57             ??_keypad_getkey 0073          keypad_getkey@F1424 01B0  
       start_initialization 0011                 __end_of_abs 1766        __end_of_Timer1_start 1723  
               ?_secuencia5 0070                 ?_secuencia6 0070          keypad_getkey@valor 0030  
     __end_of_LCD_String_xy 0975           adc_read@value_adc 0075                ??_Timer1_ISR 0070  
               vfprintf@fmt 0038                  init_fetch0 1766                    ??_alarma 0024  
                 __Umul8_16 08F6                 __pdataBANK1 00A0                 __pdataBANK3 01B0  
              _estadoactual 007A         __end_of_LCD_Command 09AB                   ___flmul@a 002E  
                 ___flmul@b 002A                 __pbssCOMMON 0078             adc_read@channel 0073  
                 ___latbits 0002               __pcstackBANK0 0020                 ??_LCD_Clear 0076  
             ??_keypad_init 0073          __end_of_Timer1_ISR 0C6D                   _blink_led 0B0C  
                  ?___awdiv 0073                    ?___awmod 0073                    ?___flmul 002A  
                  ?___fltol 0044                  ?__Umul8_16 0073                   __pstrings 0800  
     blink_led@elapsed_time 0028                    ?_eventos 0070       LCD_String_xy@location 0023  
                  ?_sprintf 003A                    ?_strncmp 0073                    _LCD_Char 09AB  
         interrupt_function 0004                    _LCD_Init 091F                   _pass_user 00DD  
       __end_of_keypad_init 1714                   clear_ram0 07F4                   _monitoreo 0D0D  
                  _PIR1bits 000C                   _seguridad 0F2D                  ?_blink_led 0020  
               _LCD_Command 0975                   _vfpfcnvrt 05B0                  _ADCON0bits 001F  
               __stringbase 080F                  _ADCON1bits 009F                 _count_500ms 00CC  
               _count_800ms 00CE                 _count_10sec 00D0                  vfpfcnvrt@c 0035  
             _flag_correcto 006F                  ?_monitoreo 0070                  ?_seguridad 0070  
                vfprintf@ap 0039                  vfprintf@fp 0036                _Timer1_start 1714  
               ??__Umul8_16 0075                  ?_vfpfcnvrt 0029          __end_of__stringtab 0810  
                  _adc_init 1723                    _adc_read 09E1                  sprintf@fmt 003B  
                  ___xxtofl 0DB2                    __ptext10 17B5                    __ptext11 05B0  
                  __ptext20 0047                    __ptext12 0C6D                    __ptext21 08F6  
                  __ptext13 07FC                    __ptext30 1714                    __ptext22 170C  
                  __ptext14 1753                    __ptext31 091F                    __ptext23 08CD  
                  __ptext15 0A57                    __ptext32 0975                    __ptext24 0A1A  
                  __ptext16 0B6F                    __ptext33 0BD4                    __ptext25 0949  
                  __ptext17 09E1                    __ptext26 17DA                    __ptext18 0DB2  
                  __ptext27 09AB                    __ptext19 077E                    __ptext28 1733  
                  __ptext29 1723                 _keypad_init 170C                monitoreo@luz 006A  
        monitoreo@value_adc 0068                ??_secuencia5 0024                ??_secuencia6 002B  
              seguridad@key 0033                    _intentos 00D6                    _password 0810  
         blink_led@duration 0024           blink_led@off_time 0022                 ??_blink_led 0026  
              blink_led@led 002A                    _vfprintf 17B5                  _LCD_String 17DA  
           secuencia5@i_453 0029             secuencia6@i_495 0030       __end_of_keypad_getkey 077E  
        __end_of_secuencia5 05B0          __end_of_secuencia6 0F2D             secuencia5@var12 002B  
           secuencia5@var34 002D             secuencia6@var12 0032             secuencia6@var34 0038  
                  init_ram0 176A                    intlevel1 0000                   sprintf@ap 0041  
                 stringcode 080A                 ??_monitoreo 004E                 ??_seguridad 0078  
          blink_led@on_time 0020              secuencia5@var1 0031              secuencia5@var2 0033  
            secuencia5@var3 0035              secuencia5@var4 002F              secuencia6@var1 0034  
            secuencia6@var2 0036              secuencia6@var3 003A              secuencia6@var4 003C  
               ??_vfpfcnvrt 002D      __Umul8_16@multiplicand 0073                    sprintf@f 0042  
                  sprintf@s 003A                    strncmp@l 0073                    strncmp@n 0075  
                  strncmp@r 0074                    stringdir 080A                    stringtab 0800  
            keypad_getkey@i 0031                  _STATUSbits 0003        __Umul8_16@multiplier 0024  
         __Umul8_16@product 0020  
